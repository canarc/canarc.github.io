{"version":3,"sources":["helper.tsx","services/UsersService.tsx","components/RegistrationForm.tsx","components/ChangePasswordForm.tsx","screens/manageEmployeScreen.tsx","redux/reducers/authReducer.tsx","redux/actions/authActions.tsx","services/OrderService.tsx","services/ConfigService.tsx","screens/createOrderScreen.tsx","components/OrderHistory.tsx","screens/OrderScreen.js","services/NeedListService.tsx","screens/manageConfigScreen.tsx","components/OrderDetails.tsx","screens/DeliveryScreen.js","screens/TankProducerScreen.js","screens/PendingOrdersScreen.js","screens/ActiveOrdersScreen.js","services/ReportService.tsx","components/ReportSquare.tsx","components/ExportCSV.tsx","screens/StatisticsScreen.tsx","services/ProductionPlanService.tsx","screens/OrderPlanningScreen.tsx","components/PartsHistory.tsx","screens/ChassisProductionTasksScreen.js","screens/ArmProductionTasksScreen.js","screens/FanProductionTasksScreen.js","components/TaskHistory.tsx","screens/GenericTasksScreen.js","screens/OtherNeedListScreen.tsx","screens/UserRollsConfigScreen.tsx","screens/GenericTasksConfigScreen.tsx","screens/ShortcutsScreen.jsx","screens/NeedListScreen.tsx","screens/MachineTypeConfigScreen.tsx","screens/IhtiyacListesiConfigScreen.tsx","screens/GenericTaskWithRole.js","screens/editOrderScreen.tsx","screens/FilteredOrdersScreen.jsx","screens/MainScreen.tsx","screens/LoginScreen.tsx","screens/ForgotPasswordScreen.tsx","App.tsx","redux/reducers/index.tsx","index.tsx"],"names":["GetToken","store","getState","auth","user","token","dayjs","locale","padLeft","text","padChar","size","String","repeat","substr","Capitalize","s","charAt","toUpperCase","slice","ConvertDateTime","dateTime","format","ConvertOrderLocation","OrderLocation","GetAllUsers","Axios","get","API_ADDRESS","headers","Authorization","then","res","status","data","catch","response","Register","values","post","ChangePasswordAdmin","DeleteUser","mail","delete","ReopenUser","put","ChangeRole","Mail","Role","config","JSON","parse","localStorage","getItem","RegistrationForm","visible","onCreate","onCancel","Form","useForm","form","title","okText","cancelText","onOk","validateFields","resetFields","info","console","log","layout","name","initialValues","modifier","requiredMark","Item","label","rules","required","message","type","className","Group","role","map","value","ChangePasswordForm","getFieldValue","Content","Layout","Option","Sider","Select","ManageEmployeScreen","state","selectedRowKeys","changePasswordMail","registrationButtonLoading","registrationFormVisible","changePasswordFormVisible","tableLoading","columns","dataIndex","sorter","a","b","localeCompare","surname","render","record","defaultValue","style","width","onChange","Modal","error","content","isDeleted","onConfirm","getTableData","block","danger","marginTop","onClick","showChangePasswordForm","showRegistrationForm","setState","onSelectChange","users","this","length","minHeight","orientation","plain","xs","span","offset","lg","icon","UserAddOutlined","loading","rowKey","row","dataSource","concat","success","Component","LOGIN","LOGOUT","initialState","AuthReducer","action","payload","getConfig","setItem","stringify","login","Password","dispatch","sessionStorage","err","GetTaskRequestConfig","turbo","kollu","diger","test","bahce","depo","iptal","teslimat","onaybekliyor","TakeOrder","order","serialCode","date","year","tank_size","parseInt","order_amount","production_unit","serial_number","UpdateOrder","toLowerCase","GetProductionReadyOrders","GetOrderDetails","GetMachineListFromOrderById","orderId","GetOrderHistory","machine_id","GetArmHistory","GetFanHistory","GetChassisHistory","GetDeliveryReport","GetMovableMachines","requestConfig","SwitchMachines","machines","GetAllTankProducerOrders","sendToTankProducer","place","id","CurrentPosition","Id","sendTo","testComment","GetActiveOrders","DeleteOrder","order_id","DeleteSingleMachine","GetShortcuts","AddShortcut","items","selectedData","axios","join","RemoveShortcuts","removedItem","filter","addConfig","key","getCustomerList","OptGroup","QRCode","require","reverseString","str","newString","i","CreateOrderScreen","PartTypes","configFile","useState","qrCodeValue","setQrCodeValue","customerList","setCustomerList","productionUnit","setProductionUnit","brand","cooler_type","arm_type","pump","order_no","serialState","setSerialState","SerialCodeGenerator","useEffect","Body","display","justifyContent","flexWrap","overflow","onFieldsChange","product","setFieldsValue","caldron_color","onFinish","printQRCode","labelCol","wrapperCol","maxWidth","minWidth","initialValue","moment","disabled","max","options","placeholder","filterOption","inputValue","option","indexOf","min","addonBefore","e","target","onSelect","shortend","turktraktormodel","btype","machine_type","caldron_material","tow_type","commander","meme_type","maxLength","caldron_type","fan_radius","fan_type","picker","chassis_color","TextArea","order_tooker","htmlType","renderAs","amount","printWindow","window","open","index","splitTwoPartsBarcode","qrCode","split","svg","renderToString","height","margin","document","write","body","close","print","MachinePartsHistory","props","setData","setLastLocation","useSelector","arm","reduce","row_created_date","fan","chassis","GetHistory","marginBottom","mode","timeline","location","OrderHistory","isVisible","setIsVisible","lastLocation","footer","alignContent","alignItems","flexDirection","UndoSendTo","extend","customParseFormat","renderProperties","fontWeight","marginRight","OrderScreen","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","padding","ref","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","toString","includes","onFilterDropdownOpenChange","setTimeout","select","searchText","searchedColumn","movableMachines","orderModalVisible","csvdata","orderDetails","top","bottom","ellipsis","customer","pending_amount","unix","componentDidMount","GetOrders","renderOrderDetails","bind","Object","keys","detail","pump_serial","comment","orderSelected","description","historyModalVisible","historyModalId","test_comment","responseType","FileSaver","reader","FileReader","readAsArrayBuffer","onload","workbook","ExcelJS","Workbook","xlsx","load","result","worksheet","getWorksheet","getRow","getCell","commit","row2","test_manager","test_date","writeBuffer","buffer","blob","Blob","saveAs","serialNumber","prevProps","isFinishedOrders","isCancelledOrders","GetFinishedOrders","dateModifiedData","GetCancelledOrders","GetAllOrders","maxHeight","expandable","expandedRowRender","marginLeft","meme_distance","arm_length","alt_features","backgroundColor","borderRadius","to","pathname","pagination","defaultPageSize","position","order1","selectedToMove","order2","showSearch","optionFilterProp","input","children","Number","defaultActiveFirstOption","machine","React","connect","ownProps","obj","GetNeedsList","AddNeedsList","DeleteNeedsList","typeToString","ManageConfigScreen","NeedsListTable","GetData","trigger","float","configs","sort","renderDoubleColumnTable","renderTripleColumnTable","chassis_production_time","suffix","enterButton","onSearch","fan_production_time","arm_production_time","OrderDetails","setRecord","last_location_date","DeliveryScreen","onFilterDropdownVisibleChange","TankProducerScreen","planned_date","last_operation_date","filteredResult","filterResult","csv","forEach","push","order_date","deliver_date","producted_date","confirmed_date","PendingOrdersScreen","can_start_production","GetPendingOrdersData","ActiveOrdersScreen","defaultSortOrder","filteredRes","csvDataloaded","order_details","phone_number","address","ExportCSVModel","OrderStartDate","OrderEndDate","StatusStartDate","StatusEndDate","model","Title","Typography","ReportSquare","boxSizing","level","RangePicker","DatePicker","ExportCSV","history","useHistory","isChecked","setIsChecked","locations","planlandÄ±","ExportCSVReportWithGroup","ExportCSVReport","startOf","add","lineHeight","gap","Header","Footer","StatisticsScreen","reports","GetReports","test_bugun_yapilan_is","uniq","turbo_bugun_yapilan_is","diger_bugun_yapilan_is","teslimat_bugun_yapilan_is","kollu_bugun_yapilan_is","Array","from","Set","toplam_siparis","kollu_siparis","kollugereken","kolluplanlanan","turbo_siparis","turbogereken","turboplanlanan","stocks","diger_siparis","digergereken","digerplanlanan","textAlign","gutter","sm","md","code","xl","renderReports","renderStocks","renderDailyCompletedTasks","alignSelf","onSuccess","machineId","GetChassisProductionTasks","GetArmProductionTasks","ModifyGenericTask","DeleteGenericTask","DivideGenericTask","UpdateGenericTask","GetFanProductionTasks","tailLayout","OrderPlanningScreen","formRef","createRef","selectedDate","pendingOrders","CreateProductionPlan","current","onFinishFailed","errorInfo","SaveExcel","XLSX","aoa_to_sheet","book_new","book_append_sheet","dateCellRender","GetProductionPlans","GetPendingOrders","filteredData","isSame","item","fontSize","tasks","borderBottom","CancelProductionPlan","shape","DeleteOutlined","PartsHistory","PartHistory","partType","UndoArmTo","UndoFanTo","UndoChassisTo","ChassisProductionTasksScreen","row_updated_date","separator","GenericTaskHistory","task_id","GetGenericTaskHistory","find","DivideContent","Props","setAmount","maxAmount","formatter","parser","getTasks","GenericTasksScreen","selectedRole","selectedUnit","last_location","isActive","new_group","GetTasks","completed_amount","isModalVisible","selectedTaskId","componentWillReceiveProps","newProps","oldProps","GetActiveGenericTasks","task","GetFinishedGenericTasks","selectedTitle","selectedDescription","compact","selectedAmount","styles","button","addTaskButtonLoading","CreateGenericTask","group","unit","OtherNeedListScreen","GetTotalNeeds","UserRollsConfigScreen","GenericTasksConfigScreen","RoleListTable","GetGenericTaskRoleAuthorizationList","DeleteGenericTaskRoleAuthorizationList","AddGenericTaskRoleAuthorizationList","authority","newUser","Wrapper","styled","div","Shortcuts","_items","setItems","dataForSelect","setDataForSelect","setSelectedData","parsedData","handleClick","handleDelete","isSmallScreen","screen","GridContext","sourceIndex","targetIndex","nextState","swap","GridDropZone","boxesPerRow","rowHeight","GridItem","right","borderTopRightRadius","boxShadow","border","cursor","userSelect","onDoubleClick","gridTemplateColumns","route","prod","NeedListScreen","GetFanNeeds","formattedData","GetCommanderNeeds","GetTowNeeds","GetPumpNeeds","GetChassisNeeds","finished_amount","full_data","net_stock","MachineTypeConfigScreen","IhtiyacListesiConfigScreen","GetGenericTaskWithRole","EditOrderScreen","setOrderDetails","useLocation","caldron_stock","GetAllOrdersByType","MainContainer","MainScreen","useDispatch","theme","setTheme","defaultSelectedKeys","hash","ClockCircleOutlined","HomeOutlined","UserOutlined","ReconciliationOutlined","SubMenu","BarChartOutlined","IssuesCloseOutlined","OrderedListOutlined","GroupOutlined","InboxOutlined","removeItem","LogoutOutlined","path","GenericTaskWithRole","exact","ShortcutsScreen","FilteredOrdersScreen","FanProductionTasksScreen","ArmProductionTasksScreen","LoginScreen","submitButtonLoading","justify","align","bordered","src","alt","password","href","ForgotPasswordScreen","paddingTop","warning","App","basename","algorithm","defaultAlgorithm","rootReducer","combineReducers","authState","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"8lBAOO,SAASA,IAEd,OADsBC,GAAMC,WAAWC,KAAKC,KAAKC,KAEnD,CALAC,IAAMC,OAAO,MAON,IAAMC,EAAU,SAAUC,EAAcC,EAAiBC,GAC9D,OAAQC,OAAOF,GAASG,OAAOF,GAAQF,GAAMK,QAAe,EAARH,EAAWA,EACjE,EAEO,SAASI,EAAWC,GACjB,IAAD,EAAP,OAAIA,GACM,OAADA,QAAC,IAADA,GAAY,QAAX,EAADA,EAAGC,OAAO,UAAE,WAAX,EAAD,EAAcC,gBAAiB,OAADF,QAAC,IAADA,OAAC,EAADA,EAAGG,MAAM,IAEzC,EACT,CAQO,SAASC,EAAgBC,GAC9B,OAAOf,IAAMe,GAAUC,OAAO,oBAChC,CAEO,SAASC,EAAqBC,GACnC,OAAQA,GACN,IAAK,QACH,MAAO,oBACT,IAAK,QACH,MAAO,oBACT,IAAK,QACH,MAAO,yBACT,IAAK,OACH,MAAO,SACT,IAAK,OACH,MAAO,SACT,IAAK,QACH,MAAO,aACT,IAAK,eACH,MAAO,gCACT,IAAK,iBACH,MAAO,0CACT,IAAK,WACH,MAAO,gBACT,IAAK,eACH,MAAO,cACT,IAAK,cACH,MAAO,uBACT,IAAK,iBACH,MAAO,0BACT,IAAK,mBACH,MAAO,2BACT,IAAK,gBACH,MAAO,uBACT,IAAK,kBACH,MAAO,8BACT,IAAK,oBACH,MAAO,sCACT,IAAK,YACH,MAAO,kBACT,QACE,OAAOT,EAAWS,GAExB,CCxDO,SAAeC,IAAW,+BAgBhC,sDAhBM,8GACkBC,IAAMC,IAAIC,GAAc,wBAAyB,CACtEC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAEM,SAAeC,EAAS,GAAD,+BAgB7B,sDAhBM,WAAwBC,GAAsB,iGAC5BZ,IAAMa,KAAKX,GAAc,qBAAsBU,EAAQ,CAC5ET,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAEM,SAAeI,GAAoB,GAAD,gCAcxC,wDAdM,WAAmCF,GAA4B,iGAC7CZ,IAAMa,KAAKX,GAAc,gCAAiCU,EAAQ,CACvFT,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAO,CACT,IACCG,OAAM,WACL,OAAO,CACT,IAAG,KAAD,EAVU,OAARC,EAAQ,yBAYPA,GAAQ,4CAChB,sBAEM,SAAeK,GAAW,GAAD,gCAgB/B,wDAhBM,WAA0BC,GAAY,iGACpBhB,IAAMiB,OAAOf,GAAc,wBAA0Bc,EAAM,CAChFb,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAO,CAEX,IACCE,OAAM,WACL,OAAO,CACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAEM,SAAeQ,GAAW,GAAD,gCAoB/B,wDApBM,WAA0BF,GAAY,iGACpBhB,IAAMmB,IAC3BjB,GAAc,wBAA0Bc,EACxC,CAAC,EACD,CACEb,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAO,CAEX,IACCE,OAAM,WACL,OAAO,CACT,IAAG,KAAD,EAhBU,OAARC,EAAQ,yBAkBPA,GAAQ,4CAChB,sBAEM,SAAeU,GAAW,EAAD,mCAoB/B,wDApBM,WAA0BC,EAAcC,GAAY,iGAClCtB,IAAMmB,IAC3BjB,GAAc,wBACd,CAAEmB,OAAMC,QACR,CACEnB,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAO,CAEX,IACCE,OAAM,WACL,OAAO,CACT,IAAG,KAAD,EAhBU,OAARC,EAAQ,yBAkBPA,GAAQ,4CAChB,sB,gDCvHKa,GAAyBC,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAsD7DC,GApD2C,SAAH,GAAyC,IAAnCC,EAAO,EAAPA,QAASC,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SAC9E,EAAeC,KAAKC,UAAbC,EAAsB,iBAAlB,GACX,OACE,eAAC,IAAK,CACJL,QAASA,EACTM,MAAM,6CACNC,OAAO,eACPC,WAAW,gBACXN,SAAUA,EACVO,KAAM,WACJJ,EACGK,iBACAlC,MAAK,SAACO,GACLsB,EAAKM,cACLV,EAASlB,EACX,IACCH,OAAM,SAACgC,GACNC,QAAQC,IAAI,mBAAoBF,EAClC,GACJ,EAAE,SAEF,gBAAC,KAAI,CAACP,KAAMA,EAAMU,OAAO,WAAWC,KAAK,gBAAgBC,cAAe,CAAEC,SAAU,UAAYC,cAAc,EAAM,UAClH,eAAC,KAAKC,KAAI,CACRJ,KAAK,OACLK,MAAM,SACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,oCAC3B,CAAEC,KAAM,QAASD,QAAS,gDAC1B,SAEF,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,CAACJ,KAAK,OAAOK,MAAM,KAAKC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,8BAA4B,SAC/F,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,CAACJ,KAAK,UAAUK,MAAM,QAAQC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,iCAA+B,SACxG,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,CAACJ,KAAK,OAAOU,UAAU,wCAAwCJ,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4CAA6B,SACvI,eAAC,KAAMG,MAAK,UAEDjC,GAAOkC,KAAKC,KAAI,SAACD,GACtB,OAAO,eAAC,KAAK,CAACE,MAAOF,EAAKH,KAAK,SAAEG,EAAK1E,MACxC,YAOd,EChBe6E,GAnC+C,SAAH,GAA+C,IAAzC/B,EAAO,EAAPA,QAASb,EAAI,EAAJA,KAAMc,EAAQ,EAARA,SAAUC,EAAQ,EAARA,SACxF,EAAeC,KAAKC,UAAbC,EAAsB,iBAAlB,GACX,OACE,eAAC,IAAK,CACJL,QAASA,EACTM,MAAM,gEACNC,OAAO,qBACPC,WAAW,gBACXN,SAAUA,EACVO,KAAM,WACAJ,EAAK2B,cAAc,cAAgB3B,EAAK2B,cAAc,cACxD3B,EACGK,iBACAlC,MAAK,SAACO,GACLsB,EAAKM,cACLV,EAAS,2BAAKlB,GAAM,IAAES,KAAML,IAC9B,IACCP,OAAM,SAACgC,GACNC,QAAQC,IAAI,mBAAoBF,EAClC,GAEN,EAAE,SAEF,gBAAC,KAAI,CAACP,KAAMA,EAAMU,OAAO,WAAWC,KAAK,gBAAgBC,cAAe,CAAEC,SAAU,UAAYC,cAAc,EAAM,UAClH,eAAC,KAAKC,KAAI,CAACJ,KAAK,WAAWK,MAAM,aAAQC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,oCAA6B,SACvG,eAAC,KAAK,CAACC,KAAK,eAEd,eAAC,KAAKL,KAAI,CAACJ,KAAK,YAAYK,MAAM,sBAAiBC,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,mDAAuC,SAC3H,eAAC,KAAK,CAACC,KAAK,mBAKtB,EChCQQ,GAAmBC,IAAnBD,QAWAE,IAXmBD,IAAVE,MAWEC,IAAXF,QACFzC,GAAyBC,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAEtEwC,GAAmB,iKAyHrB,OAzHqB,oCACvBC,MAAQ,CACNC,gBAAiB,GACjBC,mBAAoB,GACpBC,2BAA2B,EAC3BC,yBAAyB,EACzBC,2BAA2B,EAC3BC,cAAc,EACdlE,KAAM,IACN,EAEFmE,QAAgC,CAC9B,CACExC,MAAO,KACPyC,UAAW,OACXC,OAAQ,SAACC,EAAYC,GAAU,OAAKD,EAAEjC,KAAKmC,cAAcD,EAAElC,KAAK,GAElE,CACEV,MAAO,QACPyC,UAAW,UACXC,OAAQ,SAACC,EAAYC,GAAU,OAAKD,EAAEG,QAAQD,cAAcD,EAAEE,QAAQ,GAExE,CACE9C,MAAO,SACPyC,UAAW,OACXC,OAAQ,SAACC,EAAYC,GAAU,OAAKD,EAAE9D,KAAKgE,cAAcD,EAAE/D,KAAK,GAElE,CACEmB,MAAO,MACP+C,OAAQ,SAACvB,EAAOwB,GACd,OACE,qCACE,eAAC,IAAM,CACLC,aAAcD,EAAO1B,KACrB4B,MAAO,CAAEC,MAAO,KAChBC,SAAQ,iDAAE,WAAO5B,GAAK,2FACCvC,GAAW+D,EAAOnE,KAAM2C,GAAO,KAAD,EAAvC,QAEV6B,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,yHACTtD,OAAQ,UAEX,2CACF,mDATO,GASN,SAGOb,GAAOkC,KAAKC,KAAI,SAACD,GACtB,OAAO,eAACO,GAAM,CAACL,MAAOF,EAAKH,KAAK,SAAEG,EAAK1E,MACzC,OAKV,GAEF,CACEoD,MAAO,qBACPmD,MAAO,GACPJ,OAAQ,SAACvB,EAAOwB,GACd,OACE,uCACE,eAAC,IAAU,CACThD,MAAK,wCAAoBgD,EAAOQ,UAAY,WAAU,SAAQ,sCAC9DC,UAAS,gCAAE,4FACLT,EAAOQ,UAAU,CAAD,+BACRzE,GAAWiE,EAAOnE,MAAK,kCAC/B,EAAK6E,eAAe,8CAGZ9E,GAAWoE,EAAOnE,MAAK,mCAC/B,EAAK6E,eAAe,4CAI1BzD,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACyD,OAAK,EAACC,QAAM,EAACzC,KAAK,UAAS,SAChC6B,EAAOQ,UAAY,gBAAe,qCAGvC,eAAC,IAAM,CACLN,MAAO,CAAEW,UAAW,GACpBC,QAAS,WACP,EAAKC,uBAAuBf,EAAOnE,KACrC,EACA8E,OAAK,EACLxC,KAAK,UAAS,6CAMtB,IAEF,EAcF6C,qBAAuB,WACrB,EAAKC,SAAS,CAAE7B,2BAA2B,EAAMC,yBAAyB,GAC5E,EAAE,EAEF0B,uBAAyB,SAAClF,GACxB,EAAKoF,SAAS,CAAE3B,2BAA2B,EAAMH,mBAAoBtD,GACvE,EAAE,EAEFqF,eAAiB,SAAChC,GAChB3B,QAAQC,IAAI,4BAA6B0B,GACzC,EAAK+B,SAAS,CAAE/B,mBAClB,EAAC,EAkEA,OAlEA,0FAvBD,8GACoBtE,IAAc,KAAD,GAA3BuG,EAAK,SAEPC,KAAKH,SAAS,CAAE5F,KAAM8F,IAExBC,KAAKH,SAAS,CAAE1B,cAAc,IAAS,gDACxC,kDAiBA,IAjBA,+BAED,WACE6B,KAAKV,cACP,GAAC,oBAeD,WAAU,IAAD,OACP,EAAmJU,KAAKnC,MAAhJG,EAAyB,EAAzBA,0BAA2BG,EAAY,EAAZA,aAAcL,EAAe,EAAfA,gBAAiB7D,EAAI,EAAJA,KAAMgE,EAAuB,EAAvBA,wBAAyBC,EAAyB,EAAzBA,0BAA2BH,EAAkB,EAAlBA,mBAExGD,EAAgBmC,OACpC,OACE,eAAC,IAAM,CAACnB,MAAO,CAAEoB,UAAW,SAAU,SACpC,gBAAC3C,GAAO,WACN,eAAC,IAAO,CAAC4C,YAAY,SAASC,OAAK,WACjC,eAAC,IAAG,UACF,eAAC,IAAG,CAACC,GAAI,CAAEC,KAAM,GAAIC,OAAQ,GAAKC,GAAI,CAAEF,KAAM,EAAGC,OAAQ,GAAI,SAC3D,eAAC,IAAM,CAACxD,KAAK,UAAU2C,QAASM,KAAKJ,qBAAsBa,KAAM,eAACC,EAAA,EAAe,IAAKC,QAAS3C,EAA0B,4CAO/H,eAAC,IAAK,CAAC2C,QAASxC,EAAcyC,OAAQ,SAACC,GAAG,OAAKA,EAAIpG,IAAI,EAAE2D,QAAS4B,KAAK5B,QAAS0C,WAAY7G,IAC5F,eAAC,GAAgB,CACfqB,QAAS2C,EACT1C,SAAQ,iDAAE,WAAOlB,GAAM,mGACJD,EAASC,GAAQ,KAAD,GAA7BlC,EAAI,SAEF8B,EAAO,GAAG8G,OAAO,EAAKlD,MAAM5D,KAAM9B,GACtC,EAAK0H,SAAS,CAAE5F,OAAMgE,yBAAyB,EAAOD,2BAA2B,KAEjFiB,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,6FACTtD,OAAQ,UAEX,2CACF,mDAZO,GAaRL,SAAU,WACR,EAAKqE,SAAS,CAAE7B,2BAA2B,EAAOC,yBAAyB,GAC7E,IAEF,eAAC,GAAkB,CACjB3C,QAAS4C,EACTzD,KAAMsD,EACNxC,SAAQ,iDAAE,WAAOlB,GAAM,2FACJE,GAAoBF,GAAQ,KAAD,EAApC,QAEN,EAAKwF,SAAS,CAAE3B,2BAA2B,IAC3Ce,IAAM+B,QAAQ,CACZpF,MAAO,0CACPuD,QAAS,iHACTtD,OAAQ,WAGVoD,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,UAEX,2CACF,mDAhBO,GAiBRL,SAAU,WACR,EAAKqE,SAAS,CAAE3B,2BAA2B,GAC7C,QAKV,KAAC,EA3LsB,CAAS+C,aA8LnBrD,MCvNFsD,GAAQ,QACRC,GAAS,SAQhBC,GAAe,CACnBjJ,KAAM,MAcOkJ,OAXf,WAA4D,IAAvCxD,EAAK,uDAAGuD,GAAcE,EAAc,uCACvD,OAAQA,EAAOvE,MACb,KAAKmE,GACH,OAAO,2BAAKrD,GAAK,IAAE1F,KAAMmJ,EAAOC,UAClC,KAAKJ,GACH,OAAO,2BAAKtD,GAAK,IAAE1F,KAAM,OAC3B,QACE,OAAO0F,EAEb,EChBO,SAAe2D,KAAS,gCAK9B,wDALM,wGACC/H,IAAMC,IAAIC,GAAc,eAAeG,MAAK,SAACC,GACjDoB,aAAasG,QAAQ,SAAUxG,KAAKyG,UAAU3H,EAAIE,MACpD,IAAG,KAAD,4BACK,GAAI,4CACZ,sBAEM,SAAS0H,GAAM7G,EAAc8G,GAClC,wDAAO,WAAOC,GAAkB,2EAC9BpI,IAAMa,KAAKX,GAAc,kBAAmB,CAAEmB,OAAM8G,aACjD9H,MAAK,SAACC,GACL+H,eAAeL,QAAQ,OAAQxG,KAAKyG,UAAU3H,EAAIE,OAClD4H,EAAS,CAAE9E,KAAMmE,GAAOK,QAASxH,EAAIE,MACvC,IACCC,OAAM,SAAC6H,GAAS,IAAD,EACgB,OAAvB,OAAHA,QAAG,IAAHA,GAAa,QAAV,EAAHA,EAAK5H,gBAAQ,WAAV,EAAH,EAAeH,QACjBiF,IAAMC,MAAM,CACVtD,MAAO,0BACPuD,QAAS,+EACTtD,OAAQ,UAGVoD,IAAMC,MAAM,CACVtD,MAAO,gCACPuD,QAAS,wEACTtD,OAAQ,SAGd,IAAG,2CACN,mDArBD,EAsBF,C,8DC3BAxD,IAAMC,OAAO,MAoDN,IAAM0J,GAAoB,mDAC/BC,OAAiB,EAAM,KACvBC,OAAiB,EAAM,KACvBC,OAAiB,EAAM,KACvBC,MAAgB,EAAM,KACtBC,OAAiB,EAAM,KACvBC,MAAgB,EAAM,KACtBC,OAAiB,EAAM,KACvBC,UAAoB,EAAM,KAC1BC,cAAwB,CAAM,IAGzB,SAAeC,GAAU,EAAD,mCAyC9B,wDAzCM,WACLC,EACAC,GAAkB,iFAQe,OANjCD,EAAME,KAAOxK,MAAQgB,OAAO,oBAC5BsJ,EAAMG,KAAOzK,MAAQgB,OAAO,MACxBsJ,EAAMI,YAAWJ,EAAMI,UAAYC,SAASrK,OAAOgK,EAAMI,aACzDJ,EAAMM,eACRN,EAAMM,aAAeD,SAASrK,OAAOgK,EAAMM,gBAC7CN,EAAM3I,OAAS2I,EAAMO,gBACrBP,EAAMQ,cAAgBP,EAAW,SAEVnJ,IAAMa,KAC3BX,GAAc,wBACdgJ,EACA,CACE/I,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAMN,OALAiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,oFACTtD,OAAQ,WAEH,CAEX,IACC3B,OAAM,WAML,OALA+E,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,yFACTtD,OAAQ,WAEH,CACT,IAAG,KAAD,EA1BU,OAAR1B,EAAQ,yBA4BPA,GAAQ,6CAChB,sBAEM,SAAeiJ,GAAY,EAAD,mCAyChC,wDAzCM,WACLT,EACAC,GAAkB,iFAQe,OANjCD,EAAME,KAAOxK,MAAQgB,OAAO,oBAC5BsJ,EAAMG,KAAOzK,MAAQgB,OAAO,MACxBsJ,EAAMI,YAAWJ,EAAMI,UAAYC,SAASrK,OAAOgK,EAAMI,aACzDJ,EAAMM,eACRN,EAAMM,aAAeD,SAASrK,OAAOgK,EAAMM,gBAC7CN,EAAM3I,OAAS2I,EAAMO,gBACrBP,EAAMQ,cAAgBP,EAAW,SAEVnJ,IAAMa,KAC3BX,GAAc,wBACdgJ,EACA,CACE/I,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAMN,OALAiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,oFACTtD,OAAQ,WAEH,CAEX,IACC3B,OAAM,WAML,OALA+E,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,yFACTtD,OAAQ,WAEH,CACT,IAAG,KAAD,EA1BU,OAAR1B,EAAQ,yBA4BPA,GAAQ,6CAChB,sBAwBA,wDAtBM,8GACkBV,IAAMC,IAC3BC,GAAc,+BACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,WAML,OALA+E,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,yFACTtD,OAAQ,UAEH,EACT,IAAG,KAAD,EAlBU,OAAR1B,EAAQ,yBAoBPA,GAAQ,4CAChB,sBAwBA,wDAtBM,8GACkBV,IAAMC,IAC3BC,GAAc,gCACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,WAML,OALA+E,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,yFACTtD,OAAQ,UAEH,EACT,IAAG,KAAD,EAlBU,OAAR1B,EAAQ,yBAoBPA,GAAQ,4CAChB,sBAqBA,wDAnBM,8GACkBV,IAAMC,IAAIC,GAAc,0BAA2B,CACxEC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,WAML,OALA+E,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,yFACTtD,OAAQ,UAEH,EACT,IAAG,KAAD,EAfU,OAAR1B,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAqBA,wDAnBM,WAAkC4C,GAAY,iGAC5BtD,IAAMC,IAC3BC,GAAW,6CAAyCoD,EAAKsG,eACzD,CACEzJ,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OACCD,EAAIE,KACC,EAChB,IACCC,OAAM,WACL,MAAO,EACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAkBA,wDAhBM,8GACkBV,IAAMC,IAAIC,GAAc,6BAA8B,CAC3EC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAEM,SAAemJ,KAAwB,gCAmB7C,wDAnBM,8GACkB7J,IAAMC,IAC3BC,GAAc,qCACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAeoJ,GAAgB,GAAD,gCAmBpC,wDAnBM,WAA+BJ,GAAqB,iGAClC1J,IAAMC,IAAI,GAAD,OAC3BC,GAAW,mCAA2BwJ,GACzC,CACEvJ,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAeqJ,GAA4B,GAAD,gCAmBhD,wDAnBM,WAA2CC,GAAe,iGACxChK,IAAMC,IAC3BC,GAAc,yCAA2C8J,EACzD,CACE7J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OACCD,EAAIE,KACC,EAChB,IACCC,OAAM,WACL,MAAO,EACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAeuJ,GAAgB,GAAD,gCAmBpC,wDAnBM,WAA+BC,GAAkB,iGAC/BlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,sCAA8BgK,GAC5C,CACE/J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAeyJ,GAAc,GAAD,gCAmBlC,wDAnBM,WAA6BD,GAAkB,iGAC7BlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,oCAA4BgK,GAC1C,CACE/J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAe0J,GAAc,GAAD,gCAmBlC,wDAnBM,WAA6BF,GAAkB,iGAC7BlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,oCAA4BgK,GAC1C,CACE/J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAe2J,GAAkB,GAAD,gCAmBtC,wDAnBM,WAAiCH,GAAkB,iGACjClK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,wCAAgCgK,GAC9C,CACE/J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAqBA,wDAnBM,WAAqCwJ,GAAkB,iGACrClK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,2CAAmCgK,GACjD,CACE/J,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,QAAiC,MAAfD,EAAIC,OAC5B,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAfU,OAARC,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAe4J,KAAiB,gCAgBtC,wDAhBM,8GACkBtK,IAAMC,IAAIC,GAAc,2BAA4B,CACzEC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OACCD,EAAIE,KACC,EAChB,IACCC,OAAM,WACL,MAAO,EACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAoBM,SAAe6J,KAAkB,gCAwBvC,wDAxBM,gGAGqB,OAFtBC,EAAgB,IAAIjC,IACVK,OAAQ,EACtB4B,EAAc3B,MAAO,EAAK,SAEH7I,IAAMmB,IAC3BjB,GAAc,iCACdsK,EACA,CACErK,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAhBU,OAARC,EAAQ,yBAkBPA,GAAQ,4CAChB,sBAOM,SAAe+J,GAAe,GAAD,gCA6BnC,wDA7BM,WAA8BC,GAAyB,iFACtC,OAAtBhI,QAAQC,IAAI+H,GAAU,SACC1K,IAAMa,KAC3BX,GAAc,4BACdwK,EACA,CACEvK,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,6HACTtD,OAAQ,SAGd,IACC3B,OAAM,SAAC6H,GACN9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,SAEZ,IAAG,KAAD,EAxBU,OAAR1B,EAAQ,yBA0BPA,GAAQ,4CAChB,sBAEM,SAAeiK,KAAwB,gCAoB7C,wDApBM,8GACkB3K,IAAMC,IAAI,GAAD,OAC3BC,GAAW,uCACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAmB,MAAfA,EAAIC,OACCD,EAAIE,KAEN,EACT,IACCC,OAAM,SAAC6H,GACN,MAAO,EACT,IAAG,KAAD,EAhBU,OAAR5H,EAAQ,yBAkBPA,GAAQ,4CAChB,sBAEM,SAAekK,GAAmB,EAAD,mCA2BvC,wDA3BM,WAAkCC,EAAeC,GAAU,iGACzC9K,IAAMmB,IAAI,GAAD,OAC3BjB,GAAW,wCACd,CAAE6K,gBAAiBF,EAAOG,GAAIF,GAC9B,CAAE3K,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAMN,OALAiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,UAEH9B,EAAIE,IAEf,IACCC,OAAM,SAAC6H,GAON,OANA5F,QAAQC,IAAI2F,GACZ9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EAvBU,OAAR1B,EAAQ,yBAyBPA,GAAQ,4CAChB,sBAEM,SAAeuK,GAAO,EAAD,qCA0B3B,wDA1BM,WAAsBJ,EAAeC,EAAYI,GAAoB,iGACnDlL,IAAMmB,IAAI,GAAD,OAC3BjB,GAAW,6BAAqB2K,EAAK,YAAIC,EAAE,YAAII,GAClD,CAAC,EACD,CAAE/K,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,WAGL,CACT,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EAtBU,OAAR1B,EAAQ,yBAwBPA,GAAQ,4CAChB,sBA2BA,wDAzBM,WAAyBwJ,GAAkB,iGACzBlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,gCAAwBgK,GACtC,CAAE/J,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,WAGL,CACT,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EArBU,OAAR1B,EAAQ,yBAuBPA,GAAQ,4CAChB,sBA2BA,wDAzBM,WAAyBwJ,GAAkB,iGACzBlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,gCAAwBgK,GACtC,CAAE/J,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,WAGL,CACT,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EArBU,OAAR1B,EAAQ,yBAuBPA,GAAQ,4CAChB,sBA2BA,wDAzBM,WAA6BwJ,GAAkB,iGAC7BlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,oCAA4BgK,GAC1C,CAAE/J,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,WAGL,CACT,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EArBU,OAAR1B,EAAQ,yBAuBPA,GAAQ,4CAChB,sBA2BA,wDAzBM,WAA0BwJ,GAAkB,iGAC1BlK,IAAMC,IAAI,GAAD,OAC3BC,GAAW,iCAAyBgK,GACvC,CAAE/J,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2FACTtD,OAAQ,WAGL,CACT,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EArBU,OAAR1B,EAAQ,yBAuBPA,GAAQ,4CAChB,sBAEM,SAAeyK,KAAe,gCA4BpC,wDA5BM,gGAOsB,OANvBX,EAAgB,IAAIjC,IACVC,OAAQ,EACtBgC,EAAc/B,OAAQ,EACtB+B,EAAc9B,OAAQ,EACtB8B,EAAc7B,MAAO,EACrB6B,EAAc3B,MAAO,EACrB2B,EAAc5B,OAAQ,EAAK,SAEJ5I,IAAMmB,IAC3BjB,GAAc,iCACdsK,EACA,CACErK,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAhBU,OAARC,EAAQ,yBAkBPA,GAAQ,6CAChB,sBAEM,SAAe0K,GAAY,GAAD,gCA0BhC,wDA1BM,WAA2BC,GAAgB,iFACvC,gBACcrL,IAAMa,KAAK,GAAD,OAC5BX,GAAW,2BACd,CAAE8K,GAAIK,GACN,CAAElL,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,gFACTtD,OAAQ,SAGd,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EArBU,OAAR1B,EAAQ,yBAuBPA,GAAQ,4CAChB,sBAEM,SAAe4K,GAAoB,GAAD,gCAyBxC,wDAzBM,WAAmCpB,GAAkB,iFACjD,gBACclK,IAAMiB,OAAO,GAAD,OAC9Bf,GAAW,0CAAkCgK,GAChD,CAAE/J,QAAS,CAAEC,cAAe,WAAa9B,OAExC+B,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,qEACTtD,OAAQ,SAGd,IACC3B,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,IACT,IAAG,KAAD,EApBU,OAAR1B,EAAQ,yBAsBPA,GAAQ,4CAChB,sBAEM,SAAe6K,KAAY,gCAUjC,wDAVM,8GACkBvL,IAAMC,IAAIC,GAAc,sBAAuB,CACpEC,QAAS,CACPC,cAAe,UAAY9B,OAE5B+B,MAAK,SAACC,GACP,OAAOA,EAAIE,IACb,IAAG,KAAD,EANY,OAARE,EAAQ,yBAQPA,GAAQ,4CAChB,sBAEM,SAAe8K,GAAY,EAAD,mCAmChC,wDAnCM,WAA2BC,EAAYC,GAAoB,iGACzCC,IACpB9K,KACCX,GAAW,4BACX,CACE0C,OAAa,OAAL6I,QAAK,IAALA,KAAOjF,OACX,uBAAIiF,GAAK,CAAEC,IAAcE,KAAK,KAC9BF,GAEN,CACEvL,QAAS,CACPC,cAAe,UAAY9B,OAIhC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,2EACTtD,OAAQ,UAGL9B,EAAIE,KAAKoC,MAClB,IACCnC,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,EACT,IAAG,KAAD,EA/BU,OAAR1B,EAAQ,yBAiCPA,GAAQ,4CAChB,sBACM,SAAemL,GAAgB,EAAD,mCA+BpC,wDA/BM,WAA+BJ,EAAiBK,GAAmB,iGACjDH,IACpB9K,KACCX,GAAW,4BACX,CAAE0C,OAAQ6I,EAAMM,QAAO,SAACvL,GAAI,OAAKA,IAASsL,CAAW,IAAEF,KAAK,MAC5D,CACEzL,QAAS,CACPC,cAAe,UAAY9B,OAIhC+B,MAAK,SAACC,GAQL,OAPmB,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CACZpF,MAAO,0BACPuD,QAAS,6FACTtD,OAAQ,UAGL9B,EAAIE,KAAKoC,MAClB,IACCnC,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QAAS,iFACTtD,OAAQ,UAEH,EACT,IAAG,KAAD,EA3BU,OAAR1B,EAAQ,yBA6BPA,GAAQ,4CAChB,sBC/2BM,SAASsL,GAAUC,EAAarL,GACrC,OAAOZ,IAAMa,KAAK,GAAD,OAAIX,GAAW,uBAAe+L,GAAOrL,EAAQ,CAC5DT,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GAEL,OADAkF,IAAM+B,QAAQ,CAAEpF,MAAO,iCAAmBuD,QAAS,mFAC5C,CACT,IACCjF,OAAM,SAAC6H,GAEN,OADA9C,IAAMC,MAAM,CAAEtD,MAAO,wBAAoBuD,QAAS,+BAC3C,CACT,GACJ,CAEO,SAASwG,KACd,OAAOlM,IAAMC,IAAI,GAAD,OAAIC,GAAW,+BAA+B,CAC5DC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,MAAO,EACT,GACJ,CCtBA,IAAQtE,GAAqBE,IAArBF,OAAQmI,GAAajI,IAAbiI,SACVC,GAASC,EAAQ,IAoiBhB,SAASC,GAAcC,GAE5B,IADA,IAAIC,EAAY,GACPC,EAAIF,EAAI/F,OAAS,EAAGiG,GAAK,EAAGA,IACnCD,GAAaD,EAAIE,GAEnB,OAAOD,CACT,CAEeE,ICziBVC,GDyiBUD,GA1iBf,WAA8B,IAAD,EACrBE,EAA6BpL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAChF,EAAsCkL,mBAAS,IAAG,mBAA3CC,EAAW,KAAEC,EAAc,KAClC,EAAwCF,mBAAS,IAAU,mBAApDG,EAAY,KAAEC,EAAe,KACpC,EAA4CJ,mBAAS,SAAQ,mBAAtDK,EAAc,KAAEC,EAAiB,KACxC,EAAsCN,mBAAS,CAC7CO,MAAO,GACP9J,KAAM,GACN+J,YAAa,GACbC,SAAU,GACVhE,UAAW,EACXiE,KAAM,GACNC,SAAU,SACVhE,aAAc,EACdH,KAAM,KACN,mBAVKoE,EAAW,KAAEC,EAAc,KAY9BvE,EAieJ,WACE,OAAQ+D,GACN,IAAK,QACH,OAAOO,EAAYL,MAAQK,EAAYnK,KAAOmK,EAAYH,SAAWG,EAAYnE,UAAYmE,EAAYF,KAAOE,EAAYpE,KAAO,EAAIoE,EAAYD,SAAW,EAAIC,EAAYjE,aAChL,IAAK,QACH,OAAOiE,EAAYL,MAAQK,EAAYnK,KAAOmK,EAAYJ,YAAcI,EAAYnE,UAAYmE,EAAYF,KAAOE,EAAYpE,KAAO,EAAIoE,EAAYD,SAAW,EAAIC,EAAYjE,aACnL,IAAK,QACH,OAAOiE,EAAYL,MAAQK,EAAYnK,KAAOmK,EAAYpE,KAAO,EAAIoE,EAAYD,SAAW,EAAIC,EAAYjE,aAC9G,QACE,MAAO,GAEb,CA5eiBmE,GACjB,EAAe3L,KAAKC,UAAbC,EAAsB,iBAAlB,GAQX,OANA0L,qBAAU,WACR1B,KAAkB7L,MAAK,SAACC,GACtB2M,EAAgB3M,EAClB,GACF,GAAG,IAGD,gBAACuN,GAAI,CAACxI,MAAO,CAAEyI,QAAS,OAAQC,eAAgB,eAAgBC,SAAU,eAAgBC,SAAU,QAAS,UAC3G,gBAAC,KAAI,CACH/L,KAAMA,EACNgM,eAAgB,WACd,IAAIC,EAAyC,eAA/BjM,EAAK2B,cAAc,SAA4B3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,SAAoD,SAAzC3B,EAAK2B,cAAc,mBAAgC3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,aAAe,MAAQ3B,EAAK2B,cAAc,eAAiB3B,EAAK2B,cAAc,cAAgB,MAAQ3B,EAAK2B,cAAc,YAAuD,SAAzC3B,EAAK2B,cAAc,mBAAgC3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,aAAe,MAAQ3B,EAAK2B,cAAc,YAAc,IAAM3B,EAAK2B,cAAc,cAAyD,SAAzC3B,EAAK2B,cAAc,mBAAgC3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,QAAU,GAC/qBkJ,EAAe5D,EAAa,IAAMgF,EAAQ3O,eACtC0C,EAAK2B,cAAc,UAA2C,eAA/B3B,EAAK2B,cAAc,UACpD3B,EAAKkM,eAAe,CAAEC,cAAenM,EAAK2B,cAAc,UAE5D,EACAyK,SAAQ,iDAAE,WAAO1N,GAAM,2FACAqI,GAAUrI,EAAQuI,GAAY,KAAD,GACnC,IADH,SAEVoF,EAAY3N,EAAO4I,cACnBtH,EAAKM,eACN,2CACF,mDANO,GAORgM,SAAU,CAAE3H,KAAM,GAClB4H,WAAY,CAAE5H,KAAM,IACpBxB,MAAO,CAAEqJ,SAAU,qBAAsBC,SAAU,SACnD3L,cAAc,EAAM,UAEpB,eAAC,KAAKC,KAAI,CAACJ,KAAK,OAAO+L,aAAcC,OAAU3L,MAAM,QAAQE,UAAQ,WACnE,eAAC,KAAU,CAAC0L,UAAQ,MAGtB,eAAC,KAAK7L,KAAI,CACRJ,KAAK,WACLK,MAAM,2BACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,IAAK1L,QAAS,oDAEvBD,UAAQ,WAER,eAAC,KAAY,CAACiC,MAAO,CAAEC,MAAO,KAAO0J,QAAShC,EAAciC,YAAY,6BAAqBC,aAAc,SAACC,EAAYC,GAAM,OAAwE,IAAnEA,EAAQzL,MAAMnE,cAAc6P,QAAQF,EAAW3P,cAAqB,MAEzM,eAAC,KAAKyD,KAAI,CACRJ,KAAK,UACLK,MAAM,SACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,IAAK1L,QAAS,oDAEvBD,UAAQ,WAER,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CACRJ,KAAK,eACLK,MAAM,aACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAIO,IAAK,GAAIjM,QAAS,iEAE/BD,UAAQ,WAER,eAAC,KAAK,CAACmM,YAAY,MAAMlK,MAAO,CAAEC,MAAO,YAE3C,eAAC,KAAKrC,KAAI,CAACJ,KAAK,kBAAkBK,MAAM,mBAAgB0L,aAAa,QAAQxL,UAAQ,WACnF,gBAAC,KAAMI,MAAK,CACV+B,SAAU,SAACiK,GACTrC,EAAkBqC,EAAEC,OAAO9L,MAC7B,EAAE,UAEF,eAAC,KAAK,CAACA,MAAM,QAAO,mBACpB,eAAC,KAAK,CAACA,MAAM,QAAO,mBACpB,eAAC,KAAK,CAACA,MAAM,QAAO,6BAGxB,eAAC,KAAKV,KAAI,CAACJ,KAAK,QAAQK,MAAM,QAAQE,UAAQ,WAC5C,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAM8J,EAAQR,EAAWQ,MAAMrB,QAAO,SAACqB,GAAK,OAAKA,EAAM9J,MAAQA,CAAI,IACnEoK,EAAe,2BAAKD,GAAW,IAAEL,MAAOA,EAAM,GAAGuC,WACnD,EAAE,SAGO/C,EAAWQ,MAAM1J,KAAI,SAAC0J,GAC3B,OACE,eAAC,GAAM,CAAkBzJ,MAAOyJ,EAAM9J,KAAK,SACxC8J,EAAMrO,MADIqO,EAAM9J,KAIvB,QAIa,SAAlB4J,GAAkD,KAArBO,EAAYL,MACxC,eAAC,KAAKnK,KAAI,CAACJ,KAAK,QAAQK,MAAM,QAAQE,UAAQ,WAC5C,eAAC,IAAM,UAEIwJ,EAAWgD,iBAAiBlM,KAAI,SAAC0J,GACtC,OACE,eAAC,GAAM,CAAkBzJ,MAAOyJ,EAAMrO,KAAK,SACxCqO,EAAMrO,MADIqO,EAAMrO,KAIvB,QAIJ,KAEJ,eAAC,KAAKkE,KAAI,CAACJ,KAAK,OAAOK,MAAM,MAAME,UAAQ,WACrB,UAAnB8J,GAAiD,UAAnBA,EAC7B,eAAC,IAAM,CACLwC,SAAU,SAACG,GACT,IAAMvM,EAAOsJ,EAAWtJ,KAAKyI,QAAO,SAACzI,GAAI,OAAKA,EAAKA,MAAQuM,CAAK,IAChEnC,EAAe,2BAAKD,GAAW,IAAEnK,KAAMA,EAAK,GAAGqM,WACjD,EAAE,SAGO/C,EAAWtJ,KAAKI,KAAI,SAACJ,GAC1B,OACE,eAAC,GAAM,CAAiBK,MAAOL,EAAKA,KAAK,SACtCA,EAAKvE,MADKuE,EAAKA,KAItB,MAIJ,eAAC,IAAM,CACLoM,SAAU,SAACG,GACT,IAAMvM,EAAOsJ,EAAWkD,aAAa/D,QAAO,SAAC+D,GAAY,OAAKA,EAAaxM,MAAQuM,CAAK,IACxFnC,EAAe,2BAAKD,GAAW,IAAEnK,KAAMA,EAAK,GAAGqM,WACjD,EAAE,SAGO/C,EAAWkD,aAAapM,KAAI,SAACoM,GAClC,OACE,eAAC,GAAM,CAAyBnM,MAAOmM,EAAaxM,KAAK,SACtDwM,EAAa/Q,MADH+Q,EAAaxM,KAI9B,QAKW,SAAlB4J,GAA+C,SAAlBA,EAC5B,uCACE,eAAC,KAAKjK,KAAI,CACRJ,KAAK,gBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,cACNE,UAAQ,WAER,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,gBAAe,SACnD,gBAAC,KAAMM,MAAK,WACV,eAAC,KAAK,CAACG,MAAM,UAAS,qBACtB,eAAC,KAAK,CAACA,MAAM,MAAK,sCAItB,eAAC,KAAKV,KAAI,CACRJ,KAAK,mBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,WACNE,UAAQ,WAER,eAAC,IAAM,UAEIwJ,EAAWmD,iBAAiBrM,KAAI,SAACqM,GACtC,OACE,eAAC,GAAM,CAA6BpM,MAAOoM,EAAiBzM,KAAK,SAC9DyM,EAAiBhR,MADPgR,EAAiBzM,KAIlC,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,YAAYK,MAAM,aAAaE,UAAQ,WACrD,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAMgG,EAAYsD,EAAWtD,UAAUyC,QAAO,SAACzC,GAAS,OAAKA,EAAUhG,MAAQA,CAAI,IACnFoK,EAAe,2BAAKD,GAAW,IAAEnE,UAAWC,SAASD,EAAU,GAAGqG,YACpE,EAAE,SAEF,eAACxD,GAAQ,CAACjJ,MAAM,QAAO,SAEZ0J,EAAWtD,UAAU5F,KAAI,SAAC4F,GAC/B,OACE,eAAC,GAAM,CAAsB3F,MAAO2F,EAAUhG,KAAK,SAChDgG,EAAUvK,MADAuK,EAAUhG,KAI3B,UAKR,eAAC,KAAKL,KAAI,CAACJ,KAAK,WAAWK,MAAM,eAAYE,UAAQ,WACnD,eAAC,IAAM,UAEIwJ,EAAWoD,SAAStM,KAAI,SAACsM,GAC9B,OACE,eAAC,GAAM,CAAqBrM,MAAOqM,EAAS1M,KAAK,SAC9C0M,EAASjR,MADCiR,EAAS1M,KAI1B,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,OAAOK,MAAM,QAAQE,UAAQ,WAC3C,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAMiK,EAAOX,EAAWW,KAAKxB,QAAO,SAACwB,GAAI,OAAKA,EAAKjK,MAAQA,CAAI,IAC/DoK,EAAe,2BAAKD,GAAW,IAAEF,KAAMA,EAAK,GAAGoC,WACjD,EAAE,SAGO/C,EAAWW,KAAK7J,KAAI,SAAC6J,GAC1B,OACE,eAAC,GAAM,CAAiB5J,MAAO4J,EAAKjK,KAAK,SACtCiK,EAAKxO,MADKwO,EAAKjK,KAItB,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,YAAYK,MAAM,UAAUE,UAAQ,WAClD,eAAC,IAAM,UAEIwJ,EAAWqD,UAAUvM,KAAI,SAACuM,GAC/B,OACE,eAAC,GAAM,CAAsBtM,MAAOsM,EAAU3M,KAAK,SAChD2M,EAAUlR,MADAkR,EAAU3M,KAI3B,QAIN,eAAC,KAAKL,KAAI,CACRJ,KAAK,YACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,YACNE,UAAQ,WAER,eAAC,IAAM,UAEIwJ,EAAWsD,UAAUxM,KAAI,SAACwM,GAC/B,OACE,eAAC,GAAM,CAAsBvM,MAAOuM,EAAU5M,KAAK,SAChD4M,EAAUnR,MADAmR,EAAU5M,KAI3B,WAKN,KACe,SAAlB4J,EACC,uCACE,eAAC,KAAKjK,KAAI,CAACJ,KAAK,WAAWK,MAAM,WAAWE,UAAQ,WAClD,eAAC,IAAM,CACLsM,SAAU,SAACG,GACT,IAAMvC,EAAWV,EAAWU,SAASvB,QAAO,SAACzI,GAAI,OAAKA,EAAKA,MAAQuM,CAAK,IACxEnC,EAAe,2BAAKD,GAAW,IAAEH,SAAUA,EAAS,GAAGqC,WACzD,EAAE,SAGO/C,EAAWU,SAAS5J,KAAI,SAAC4J,GAC9B,OACE,eAAC,GAAM,CAAqB3J,MAAO2J,EAAShK,KAAK,SAC9CgK,EAASvO,MADCuO,EAAShK,KAI1B,QAKN,eAAC,KAAKL,KAAI,CACRJ,KAAK,gBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,8BACNE,UAAQ,WAER,eAAC,KAAK,CAAC+M,UAAW,OAEpB,eAAC,KAAKlN,KAAI,CACRJ,KAAK,aACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,oBACNE,UAAQ,WAER,eAAC,KAAK,CAAC+M,UAAW,UAGpB,KACe,SAAlBjD,EACC,uCACE,eAAC,KAAKjK,KAAI,CAACJ,KAAK,cAAcK,MAAM,WAAWE,UAAQ,WACrD,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAM+J,EAAcT,EAAWS,YAAYtB,QAAO,SAACsB,GAAW,OAAKA,EAAY/J,MAAQA,CAAI,IAC3FoK,EAAe,2BAAKD,GAAW,IAAEJ,YAAaA,EAAY,GAAGsC,WAC/D,EAAE,SAGO/C,EAAWS,YAAY3J,KAAI,SAAC2J,GACjC,OACE,eAAC,GAAM,CAAwB1J,MAAO0J,EAAY/J,KAAK,SACpD+J,EAAYtO,MADFsO,EAAY/J,KAI7B,QAKa,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,eAAeK,MAAM,aAAaE,UAAQ,WACxD,eAAC,IAAM,UAEIwJ,EAAWwD,aAAa1M,KAAI,SAAC0M,GAClC,OACE,eAAC,GAAM,CAAyBzM,MAAOyM,EAAa9M,KAAK,SACtD8M,EAAarR,MADHqR,EAAa9M,KAI9B,QAIJ,KAEe,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,aAAaK,MAAM,uBAAeE,UAAQ,WACxD,eAAC,IAAM,UAEIwJ,EAAWyD,WAAW3M,KAAI,SAAC2M,GAChC,OACE,eAAC,GAAM,CAAuB1M,MAAO0M,EAAW/M,KAAK,SAClD+M,EAAWtR,MADDsR,EAAW/M,KAI5B,QAIJ,KACe,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,WAAWK,MAAM,eAAeE,UAAQ,WACtD,eAAC,IAAM,UAEIwJ,EAAW0D,SAAS5M,KAAI,SAAC4M,GAC9B,OACE,eAAC,GAAM,CAAqB3M,MAAO2M,EAAShN,KAAK,SAC9CgN,EAASvR,MADCuR,EAAShN,KAI1B,QAIJ,QAEJ,KAEJ,eAAC,KAAKL,KAAI,CACRJ,KAAK,WACLK,MAAM,kBACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,EAAG1L,QAAS,mDACnB,CAAEiM,IAAK,EAAGjM,QAAS,qDAErBD,UAAQ,WAER,eAAC,KAAK,CACJ+M,UAAW,EACX5K,SAAU,SAACiK,GACT9B,EAAe,2BAAKD,GAAW,IAAED,SAAU1O,EAAQ0Q,EAAEC,OAAO9L,MAAO,IAAK,KAC1E,MAGJ,eAAC,KAAKV,KAAI,CACRJ,KAAK,eACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,EAAG1L,QAAS,uDAErBH,MAAM,qBACNE,UAAQ,WAER,eAAC,KAAK,CACJ2L,IAAK,GACLO,IAAK,EACLhM,KAAK,SACLiC,SAAU,SAACiK,GACT9B,EAAe,2BAAKD,GAAW,IAAEjE,aAAcD,SAASiG,EAAEC,OAAO9L,SACnE,MAGJ,eAAC,KAAKV,KAAI,CAACJ,KAAK,OAAOK,MAAM,WAAM0L,aAAcC,OAAUzL,UAAQ,WACjE,eAAC,KAAU,CAAC0L,UAAQ,EAACyB,OAAO,WAG9B,eAAC,KAAKtN,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,kBAAaE,UAAQ,WACzD,eAAC,IAAM,UAEIwJ,EAAW4D,cAAc9M,KAAI,SAAC8M,GACnC,OACE,eAAC,GAAM,CAA0B7M,MAAO6M,EAAclN,KAAK,SACxDkN,EAAczR,MADJyR,EAAclN,KAI/B,QAKN,eAAC,KAAKL,KAAI,CAACJ,KAAK,eAAeM,MAAO,CAAC,CAAE4L,IAAK,IAAK1L,QAAS,uDAAgCH,MAAM,mBAAgBE,UAAQ,WACxH,eAAC,KAAMqN,SAAQ,CAACN,UAAW,QAE7B,eAAC,KAAKlN,KAAI,CAACJ,KAAK,eAAeK,MAAM,oBAAeE,UAAQ,WAC1D,eAAC,IAAM,UAEIwJ,EAAW8D,aAAahN,KAAI,SAACgN,GAClC,OACE,eAAC,GAAM,CAAyB/M,MAAO+M,EAAapN,KAAK,SACtDoN,EAAa3R,MADH2R,EAAapN,KAI9B,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,UAAS,SAC7C,eAAC,KAAK,CAAC4L,UAAQ,EAACG,YAAa9F,MAE/B,eAAC,KAAKlG,KAAI,CAACwL,WAAY,CAAE5H,KAAM,GAAIC,OAAQ,GAAI,SAC7C,eAAC,IAAM,CAAC7H,KAAK,QAAQ6G,OAAK,EAACxC,KAAK,UAAUqN,SAAS,SAAQ,6CAK/D,sBAAKtL,MAAO,CAAEyI,QAAS,QAASxI,MAAO,eAAgB,SACrD,eAAC8G,GAAM,CAACzI,MAAOmJ,EAAa8D,SAAS,MAAM3R,KAAM,WAqBvD,SAASsP,EAAYsC,GAMnB,IALA,IAAIC,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCxQ,EAwBD,SAA8B+L,GACnC,IAAI0E,EAAQ1E,EAAI8C,QAAQ,KACpBwB,EAASvE,GAAcC,EAAInN,OAAO,EAAG6R,IAGzC,MAAO,CAFM3E,GAAcC,EAAInN,OAAO6R,EAAQ,IAE9BJ,EAClB,CA9BeK,CADI5E,GAAcnD,IAEzBgI,EAASrE,EAAYsE,MAAM,KAEtB3E,EAAIoE,EAAQpE,EAAI,EAAGA,IAAK,CAC/B0E,EAAO,GAAK3Q,EAAK,GAAK,IAAMiM,EAE5B,IAAI4E,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAACnF,GAAM,CAACzI,MAAOwN,EAAO,GAAK,IAAMA,EAAO,GAAI9L,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAASZ,SAAS,QAC9G,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAEL,EAAO,SAK3B,OAAXL,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,GACrC,CACIP,IACFA,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,IACzCV,EAAYW,SAASG,QACrBd,EAAYe,QAEhB,CACF,E,6ECjhBA,SAASC,GAAoBC,GAC3B,IAAQ7H,EAAqB6H,EAArB7H,WAAY5G,EAASyO,EAATzO,KACpB,EAAwBuJ,mBAAU,MAAuB,mBAAlDrM,EAAI,KAAEwR,EAAO,KACpB,EAAwCnF,mBAAS,MAAK,mBAAjCoF,GAAF,KAAiB,MAEvBC,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAgD9D,OA9CAkP,qBAAU,YAIV,WACE,OAAQtK,GACN,KAAKqJ,GAAUwF,IACbhI,GAAcD,GAAY7J,MAAK,SAACC,GAC1BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAGC,GAAC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAE1F,IACA,MACF,KAAK4H,GAAU2F,IACblI,GAAcF,GAAY7J,MAAK,SAACC,GAC1BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAGC,GAAC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAE1F,IACA,MACF,KAAK4H,GAAU4F,QACblI,GAAkBH,GAAY7J,MAAK,SAACC,GAC9BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAGC,GAAC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAE1F,IAGN,CA9BEyN,EACF,GAAG,CAACtI,IA4CG1J,EACL,eAAC,KAAI,CAAC6E,MAAO,CAAEoN,aAAc,GAAKtQ,MAAOmB,GAAQqJ,GAAUwF,IAAM,sCAAsB7O,GAAQqJ,GAAU4F,QAAU,4CAAuB,sCAAoB,SAC5J,eAAC,KAAQ,CAACG,KAAK,OAAOrN,MAAO,CAAEC,MAAO,QAAS,SAdtC,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,SAACiP,GAChB,OACE,gBAAC,KAAS1P,KAAI,CAAiDC,MAAOxD,EAAgBiT,EAASN,kBAAkB,UAC/G,6BACE,6BAAIxS,EAAqB8S,EAASC,cAEpC,oDAAiBD,EAAS9P,KAAI,YAAI8P,EAAS1N,aAJzB,cAAgB0N,EAASN,iBAOjD,QASE,IACN,EAlEc,SAAT1F,OAAS,aAATA,IAAS,aAATA,IAAS,sBAATA,QAAS,KA+ICkG,OA3Ef,SAAsBd,GACpB,IAAQe,EAAuDf,EAAvDe,UAAWC,EAA4ChB,EAA5CgB,aAAc7I,EAA8B6H,EAA9B7H,WAAYR,EAAkBqI,EAAlBrI,cAC7C,EAAwBmD,mBAAU,MAAuB,mBAAlDrM,EAAI,KAAEwR,EAAO,KACpB,EAAwCnF,mBAAS,MAAK,mBAA/CmG,EAAY,KAAEf,EAAe,KAE9BvT,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAM9D,SAAS8T,IACPvI,GAAgBC,GAAY7J,MAAK,SAACC,GAC5BA,IACF0R,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAGC,GAAC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAE1F,GACF,CAeA,OA1BA6I,qBAAU,WACR4E,GACF,GAAG,CAACtI,IAyBF,eAAC,KAAK,CAAC/H,MAAOuH,EAAgB,2DAAqC7H,QAASiR,EAAWG,OAAQ,KAAMlR,SAAU,kBAAMgR,GAAa,EAAM,EAAC,SACvI,sBAAK1N,MAAO,CAAEyI,QAAS,OAAQxI,MAAO,OAAQ4N,aAAc,SAAUC,WAAY,SAAUpF,eAAgB,UAAW,SACpHvN,EACC,uBAAK6E,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAU9N,MAAO,QAAS,UACtE,eAAC,KAAI,CAACnD,MAAM,yCAAuBkD,MAAO,CAAEoN,aAAc,GAAI,SAC5D,eAAC,KAAQ,CAACC,KAAK,OAAOrN,MAAO,CAAEC,MAAO,QAAS,SAlB9C,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,SAACiP,GAChB,OACE,gBAAC,KAAS1P,KAAI,CAAiDC,MAAOxD,EAAgBiT,EAASN,kBAAkB,UAC/G,6BACE,6BAAIxS,EAAqB8S,EAASC,cAEpC,oDAAiBD,EAAS9P,KAAI,YAAI8P,EAAS1N,aAJzB,cAAgB0N,EAASN,iBAOjD,QAcQ,eAACP,GAAmB,CAAC5H,WAAYA,EAAY5G,KAAMqJ,GAAU4F,UAC7D,eAACT,GAAmB,CAAC5H,WAAYA,EAAY5G,KAAMqJ,GAAU2F,MAC7D,eAACR,GAAmB,CAAC5H,WAAYA,EAAY5G,KAAMqJ,GAAUwF,MAE9C,UAAdzT,EAAK+E,MAA+C,kBAAf,OAAZuP,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,WAA0D,WAAf,OAAZI,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,UACnF,eAAC,IAAU,CACTzQ,MAAM,uFACNyD,UAAW,YH+iBpB,SAA0B,GAAD,iCG9iBdyN,CAAWnJ,GAAY7J,MAAK,SAACC,GACvBA,GACFkS,GAEJ,GACF,EACApQ,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACgD,MAAO,CAAEoN,aAAc,IAAMnP,KAAK,UAAS,mDAInD,QAGN,eAAC,KAAI,CAACrE,KAAK,aAKrB,E,0CC1HAL,IAAM0U,OAAOC,MAEb3U,IAAMC,OAAO,MAEb,IAAMuN,GAASC,EAAQ,IAEhB,SAASmH,GAAiBvH,EAAatI,GAC5C,GAAIA,EACF,OACE,uBAAK0B,MAAO,CAAEyI,QAAS,QAAS,UAC9B,qBAAGzI,MAAO,CAAEoO,WAAY,OAAQC,YAAa,OAAQ,UAAEzH,EAAG,OAC1D,6BAAItI,MAIZ,CAAC,I,GAEKgQ,GAAW,kDACf,WAAY5B,GAAQ,IAAD,IAE4C,OAF5C,qBACjB,cAAMA,IAGRnF,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EA4JhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBACdC,EAAe,EAAfA,gBACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QACAC,EAAY,EAAZA,aAAY,OAEZ,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OACVsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EAEzD2Q,aAAc,kBACZ,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EAErDS,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CACLxK,KAAK,UACL2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAClE3F,KAAK,QACLoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAIvC,eAAC,IAAM,CACLzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAC7ChV,KAAK,QACLoG,MAAO,CAAEC,MAAO,IAAK,iCAInB,EAERmP,WAAY,SAACC,GAAQ,OACnB,eAACC,GAAA,EAAc,CACbrR,KAAK,SACL+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IACvC,EAEJC,SAAU,SAACnR,EAAOwB,GAAM,OACtBA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EAC1EqL,2BAA4B,SAACpT,GACvBA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNkR,gBAAiB,GACjBC,mBAAmB,EACnBC,QAAS,CACP,CACE,UACA,kBACA,sBACA,kBACA,UACA,QACA,oBACA,UAGJC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GACnC,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE+Q,SAAS7Q,cAAcD,EAAE8Q,SAAS,GACnC,EAAKjC,qBAAqB,aAAW,aAGxCzR,MAAO,aACPyC,UAAW,gBACR,EAAKgP,qBAAqB,iBAAe,aAG5CzR,MAAO,WACPyC,UAAW,WACR,EAAKgP,qBAAqB,YAAU,aAGvCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GAC7C,EAAKkK,qBAAqB,kBAAgB,yBAG7CzR,MAAO,kBACPyC,UAAW,kBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE2E,gBAAgBzE,cAAcD,EAAE0E,gBAAgB,GACjD,EAAKmK,qBAAqB,oBAAkB,IAC/C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,SACP0C,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAEgR,eAAiB/Q,EAAE+Q,cAAc,GAClC,EAAKlC,qBAAqB,iBAAe,IAC5C1O,OAAQ,SAACnG,EAAcmK,GAAU,OAC/B,8BACGhK,OAAOgK,EAAMM,aAAeN,EAAM4M,gBACjC,IACA5M,EAAMM,cACL,IACN,aAGDrH,MAAO,sBACPyC,UAAW,OAEXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCnG,IAAMkG,EAAEsE,KAAM,sBAAsB2M,OACpCnX,IAAMmG,EAAEqE,KAAM,sBAAsB2M,MAAM,GACzC,EAAKnC,qBAAqB,SAAO,yBAIpCzR,MAAO,oBACPyC,UAAW,eACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE4L,aAAa1L,cAAcD,EAAE2L,aAAa,GAC3C,EAAKkD,qBAAqB,iBAAe,IAC5C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKA,EAAKS,eAAmB,MAG3D,EAyDFwW,kBAAoB,WAClB,EAAKC,YACL1L,KAAqBlK,MAAK,SAACqK,GACrBA,GACF,EAAKtE,SAAS,CAAEkP,gBAAiB5K,GAErC,GACF,EApYE,EAAKwL,mBAAqB,EAAKA,mBAAmBC,KAAK,iBAAM,CAC/D,CAknBC,OAlnBA,+CAGD,SAAmBhR,GAAuB,IAAD,OACvC,OAAOiR,OAAOC,KAAK9P,KAAKnC,MAAMqR,cAAc/R,KAAI,SAAC4S,GAC/C,OAAOA,GAAUnR,EAAO2F,GACpB,EAAK1G,MAAMqR,aAAaa,GAAQ5S,KAAI,SAAC4S,GAAY,IAAD,EAC9C,OACE,uCACE,uBACEjR,MAAO,CACLC,MAAO,MACPU,UAAW,GACX8H,QAAS,OACTsF,cAAe,MACfrF,eAAgB,iBAChB,UAEF,iCACGyF,GACC,UACAnU,EAAWiX,EAAO5M,gBAEnB8J,GACC,gBACAnU,EAAWiX,EAAOC,cAEnB/C,GACC,uBACA3T,EAAqByW,EAAO1D,WACzB0D,EAAOE,QAAO,YAAQF,EAAOE,QAAO,KAAM,MAE9ChD,GACC,6BACA9T,EAAgB4W,EAAOjE,sBAG3B,uBAAKhN,MAAO,CAAEC,MAAO,eAAgB,UACd,aAApBgR,EAAO1D,UACY,UAApB0D,EAAO1D,UACiB,SAAxB,EAAKb,MAAMrT,KAAK+E,KACd,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClChC,KAAK,UACL2C,QAAS,WACP,EAAKG,SAAS,CACZmP,mBAAmB,EACnBkB,cAAe,CACb/M,cAAe4M,EAAO5M,cACtB2B,SAAUlG,EAAO2F,KAGvB,EAAE,uCAIF,KAEJ,eAAC,IAAM,CACLzF,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClCW,QAAS,WACP,IAAI6G,EACFwJ,EAAO5M,cAAgB,IAAMvE,EAAOuR,YACtC,EAAKnI,YAAYzB,EAAawJ,EAAO5M,cACvC,EAAE,iCAIJ,eAAC,IAAM,CACLrE,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClCW,QAAS,WACPvD,QAAQC,IAAIwC,EAAO2F,IACnB,EAAK1E,SAAS,CACZuQ,qBAAqB,EACrBC,eAAgBN,EAAOxL,GACvB2L,cAAe,CACb/M,cAAe4M,EAAO5M,cACtB2B,SAAUlG,EAAO2F,KAGvB,EAAE,yDAIHwL,EAAOO,aACN,eAAC,IAAM,CACL/Q,OAAK,EACLG,QAAS,WACP0F,IACG1L,IAAI,2BAA4B,CAC/B6W,aAAc,SAEfzW,MAAK,SAACC,GACL,IAAMyW,EAAY1K,EAAQ,KAEtB2K,EAAS,IAAIC,WACjBD,EAAOE,kBAAkB5W,EAAIE,MAC7BwW,EAAOG,OAAS,SAAU3H,GACxB,IAAM4H,EAAW,IAAIC,KAAQC,SAC7BF,EAASG,KAAKC,KAAKhI,EAAEC,OAAOgI,QAAQpX,MAAK,WACvC,IAAIqX,EAAYN,EAASO,aAAa,GAClCvQ,EAAMsQ,EAAUE,OAAO,IAC3BxQ,EAAIyQ,QAAQ,GAAGlU,MAAQ2S,EAAOO,aAC9BzP,EAAI0Q,SAEJ,IAAIC,EAAOL,EAAUE,OAAO,GAC5BG,EAAKF,QAAQ,GAAGlU,MAAQ2S,EAAO5M,cAC/BqO,EAAKF,QAAQ,GAAGlU,MAAQ2S,EAAO0B,aAC/BD,EAAKF,QAAQ,GAAGlU,MAAQjE,EACtB4W,EAAO2B,WAETF,EAAKD,SAELV,EAASG,KAAKW,cAAc7X,MAAK,SAAC8X,GAChC,IAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9B7U,KAAM,oFAGRyT,EAAUuB,OAAOF,EAAM,cACzB,GACF,GACF,CACF,GACJ,EAAE,yBAIF,KAEsB,UAAV,QAAf,IAAKrG,MAAMrT,YAAI,aAAf,EAAiB+E,OACE,UAApB6S,EAAO1D,SACL,eAAC,IAAU,CACTzQ,MAAM,6FACNyD,UAAW,kBAAM0F,GAAoBgL,EAAOxL,GAAG,EAC/C1I,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CACL0D,QAAM,EACND,OAAK,EACLT,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UAAS,iCAKhB,WAGR,eAAC,IAAO,MAGd,IACA,IACN,GACF,GAAC,yBA0KD,SAAYK,EAAe4U,GACzB,IAAIzH,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,GAAM,CACL5N,MAAOA,EACP0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAChDZ,SAAS,QAEX,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE+G,QAGpB,OAAXzH,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,gCAED,SAAmB2G,GAEfjS,KAAKwL,MAAM0G,mBAAqBD,EAAUC,kBAC1ClS,KAAKwL,MAAM2G,oBAAsBF,EAAUE,mBAE3CnS,KAAK0P,WAET,GAAC,uBAED,WAAa,IAAD,OACV1P,KAAKwL,MAAM0G,iBJ3PR,WAAgC,gCI4P/BE,GAAoBtY,MAAK,SAACoX,GACxB,IAAImB,EAAmBnB,EAAO/T,KAAI,SAACwF,GAEjC,OADAA,EAAME,KAAOxK,IAAMsK,EAAME,MAAMxJ,OAAO,sBAC/BsJ,CACT,IACA,EAAK9C,SAAS,CAAE5F,KAAMoY,GACxB,IACArS,KAAKwL,MAAM2G,kBJ3OZ,WAAiC,gCI4OhCG,GAAqBxY,MAAK,SAACoX,GACzB,IAAImB,EAAmBnB,EAAO/T,KAAI,SAACwF,GAEjC,OADAA,EAAME,KAAOxK,IAAMsK,EAAME,MAAMxJ,OAAO,sBAC/BsJ,CACT,IACA,EAAK9C,SAAS,CAAE5F,KAAMoY,GACxB,IJ1ND,WAA2B,gCI2N1BE,GAAezY,MAAK,SAACoX,GACnB,IAAImB,EAAmBnB,EAAO/T,KAAI,SAACwF,GAEjC,OADAA,EAAME,KAAOxK,IAAMsK,EAAME,MAAMxJ,OAAO,sBAC/BsJ,CACT,IACA,EAAK9C,SAAS,CAAE5F,KAAMoY,GACxB,GACN,GAAC,oBAYD,WAAU,IAAD,WACDxU,EAAQmC,KAAKnC,MAEnB,OACE,uBACEiB,MAAO,CACLC,MAAO,OACPoJ,SAAU,OACV6C,OAAQ,OACRwH,UAAW,QACX,UAEF,eAAC,IAAK,CACJ5R,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAC/B7L,KAAK,QACLiI,QAASX,KAAKnC,MAAM8C,QACpB8R,WAAY,CACVC,kBAAmB,SAAC9T,GAAM,uCACxB,uBAEEE,MAAO,CAAE6T,WAAY,QAAS,UAE7B1F,GAAiB,aAAQrO,EAAOuR,aAChClD,GAAiB,QAASrO,EAAOiE,MACjCoK,GACC,QAGI,QAHG,EACP,EAAK5G,WAAWQ,MAAMrB,QACpB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiI,KAAK,IAC9B,UAAE,aAFJ,EAEMrO,MAEPyU,GAAiB,kBAAcrO,EAAOqI,UACtCgG,GACC,4BACAtU,OAAOiG,EAAOqE,eAEfgK,GACC,MAC6D,QAA7D,IAAK5G,WAAWtJ,KAAKyI,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAAE,UAAE,OAA7D,EACIvE,KAGI,QAHA,EACJ,EAAK6N,WAAWtJ,KAAKyI,QACnB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAC7B,UAAE,aAFJ,EAEMvE,KAGF,QAHM,EACV,EAAK6N,WAAWkD,aAAa/D,QAC3B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAC7B,UAAE,aAFJ,EAEMvE,MAEXyU,GACC,WAGI,QAHM,EACV,EAAK5G,WAAWS,YAAYtB,QAC1B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOkI,WAAW,IACpC,UAAE,aAFJ,EAEMtO,MAEPyU,GACC,eACArO,EAAOmE,UAAYnE,EAAOmE,UAAY,MAAQ,MAE/CkK,GACC,kBAGI,QAHa,EACjB,EAAK5G,WAAWmD,iBAAiBhE,QAC/B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO4K,gBAAgB,IACzC,UAAE,aAFJ,EAEMhR,MAEPyU,GACC,QAC6D,QADtD,EACP,EAAK5G,WAAWW,KAAKxB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOoI,IAAI,IAAE,UAAE,aAA7D,EACIxO,MAELyU,GAAiB,uBAAcrO,EAAOkE,MACtCmK,GACC,YAGI,QAHO,EACX,EAAK5G,WAAWsD,UAAUnE,QACxB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO+K,SAAS,IAClC,UAAE,aAFJ,EAEMnR,MAEPyU,GAAiB,8BAAgBrO,EAAOgU,eACxC3F,GACC,eAGI,QAHO,EACX,EAAK5G,WAAWoD,SAASjE,QACvB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO6K,QAAQ,IACjC,UAAE,aAFJ,EAEMjR,MAEPyU,GACC,WAGI,QAHM,EACV,EAAK5G,WAAWU,SAASvB,QACvB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOmI,QAAQ,IACjC,UAAE,aAFJ,EAEMvO,MAEPyU,GAAiB,oBAAgBrO,EAAOiU,YACxC5F,GACC,kBAGI,QAHQ,EACZ,EAAK5G,WAAW4D,cAAczE,QAC5B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOqL,aAAa,IACtC,UAAE,aAFJ,EAEMzR,MAEPyU,GACC,cACAnU,EAAW8F,EAAOkJ,gBAEnBmF,GACC,aAGI,QAHQ,EACZ,EAAK5G,WAAWwD,aAAarE,QAC3B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiL,YAAY,IACrC,UAAE,aAFJ,EAEMrR,MAEPyU,GACC,UAGI,QAHK,EACT,EAAK5G,WAAWqD,UAAUlE,QACxB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO8K,SAAS,IAClC,UAAE,aAFJ,EAEMlR,MAEPyU,GAAiB,2BAAyBrO,EAAOkU,cAClD,eAAC,IAAM,CACLhU,MAAO,CAAEqO,YAAa,QACtBpQ,KAAK,UACL2C,QAAS,WACP8D,GAA4B5E,EAAO2F,IAAIzK,MACrC,SAACoV,GACC,EAAKrP,SAAS,CACZqP,aAAa,2BACR,EAAKrR,MAAMqR,cAAY,mBACzBtQ,EAAO2F,GAAK2K,KAGnB,GAEJ,EAAE,sCAIH,EAAKS,mBAAmB/Q,GACN,cAAlBA,EAAO5E,QACiB,UAAV,QAAf,IAAKwR,MAAMrT,YAAI,aAAf,EAAiB+E,OAChB,EAAKsO,MAAM0G,iBAeR,KAdF,eAAC,IAAU,CACTtW,MAAM,iEACNyD,UAAW,kBAAMwF,GAAYjG,EAAO2F,GAAG,EACvC1I,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CACL0D,QAAM,EACNV,MAAO,CAAEoN,aAAc,GAAIiB,YAAa,IACxCpQ,KAAK,UAAS,2CAOpB,eAAC,IAAI,CACH+B,MAAO,CACLyI,QACE3I,EAAOqE,eAAiBrE,EAAO2Q,gBAAkB,OACnDlB,MAAO,QACPnC,aAAc,GACd6G,gBAAiB,UACjBpF,QAAS,MACTqF,aAAc,OAEhBC,GAAI,CACFC,SAAS,cAAD,OAAgBtU,EAAOuE,gBAC/B,0BA9IC,iBAAmBvE,EAAO2F,GAkJ3B,GAGV4O,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CjV,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,OAGpB,gBAAC,KAAK,CACJ2B,OAC0B,QAAxB,EAAAoE,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,eAAgB,8BAE5C7H,QAAS0E,KAAKnC,MAAMmR,kBACpBjT,KAAM,WACJ,EAAK8D,SAAS,CAAEmP,mBAAmB,IACnC9K,GAAe,CACboP,OAAQ,EAAKzV,MAAM0V,eACnBC,OAAQ,EAAK3V,MAAMqS,eAEvB,EACA1U,SAAU,WACR,EAAKqE,SAAS,CAAEmP,mBAAmB,GACrC,EAAE,UAEF,wGACA,eAAC,IAAM,CACLyE,YAAU,EACVC,iBAAiB,WACjB/K,aAAc,SAACgL,EAAO9K,GAAM,OAC1BA,EAAO+K,SAASvQ,cAAcyF,QAAQ6K,EAAMtQ,gBAAkB,CAAC,EAEjEvE,MAAO,CAAEC,MAAO,QAChBoK,SAAU,SAAC/L,GACTjB,QAAQC,IAAIgB,GACZ,EAAKyC,SAAS,CACZ0T,eAAgB,CACdpQ,cAAe/F,EAAMyN,MAAM,KAAK,GAChC/F,SAAU+O,OAAO7Q,SAAS5F,EAAMyN,MAAM,KAAK,MAGjD,EACAnC,YAAY,gCACZoL,0BAA0B,EAAK,SAE9B9T,KAAKnC,MAAMkR,gBAAgB5R,KAAI,SAAC4W,GAC/B,OACE,eAAC,IAAOtW,OAAM,CACZL,MAAO2W,EAAQ5Q,cAAgB,IAAM4Q,EAAQjP,SAAS,SAErDiP,EAAQ5Q,cACP,IACA4Q,EAAQzE,SACR,IACAxW,EAAWib,EAAQ1H,WAG3B,SAGHrM,KAAKnC,MAAMuS,oBACV,eAAC,GAAY,CACX7D,UAAWvM,KAAKnC,MAAMuS,oBACtBzM,WAAY3D,KAAKnC,MAAMwS,eACvBlN,cAAuC,QAA1B,EAAEnD,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,cACzCqJ,aAAc,SAAClR,GAAO,OACpB,EAAKuE,SAAS,CAAEuQ,oBAAqB9U,GAAU,IAGjD,OAGV,KAAC,EAtnBc,CAAS0Y,IAAM/S,WA6nBjBgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyB7G,I,yCC9pBvC,wDAdM,8GACkB3T,IAAMC,IAAIC,GAAc,+BAAgC,CAC7EC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,WAA6BiD,GAAsB,iGACjC3D,IAAMC,IAAIC,GAAc,6BAA+ByD,EAAO,CACnFxD,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,8GACkBV,IAAMC,IAAIC,GAAc,2BAA4B,CACzEC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,8GACkBV,IAAMC,IAAIC,GAAc,4BAA6B,CAC1EC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,8GACkBV,IAAMC,IAAIC,GAAc,iCAAkC,CAC/EC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,8GACkBV,IAAMC,IAAIC,GAAc,2BAA4B,CACzEC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,WAAmDiD,GAAa,iGAC9C3D,IAAMC,IAAIC,GAAc,iDAAmDyD,EAAO,CACvGxD,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,WAAmDga,GAAwC,iGACzE1a,IAAMa,KAAKX,GAAc,iDAAkDwa,EAAK,CACrGva,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAgBA,wDAdM,WAAsDoK,GAAU,iGAC9C9K,IAAMiB,OAAOf,GAAc,oDAAsD4K,EAAI,CAC1G3K,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAEM,SAAeia,GAAa,GAAD,gCAcjC,wDAdM,WAA4BhX,GAAsB,iGAChC3D,IAAMC,IAAIC,GAAc,2BAA6ByD,EAAO,CACjFxD,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAEM,SAAeka,GAAa,GAAD,gCAcjC,wDAdM,WAA4BF,GAAiE,iGAC3E1a,IAAMa,KAAKX,GAAc,2BAA4Bwa,EAAK,CAC/Eva,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBAEM,SAAema,GAAgB,GAAD,gCAcpC,wDAdM,WAA+B/P,GAAU,iGACvB9K,IAAMiB,OAAOf,GAAc,8BAAgC4K,EAAI,CACpF3K,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAVU,OAAR5H,EAAQ,yBAYPA,GAAQ,4CAChB,sBCvLD,IAAMkM,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAE1EmZ,GAA0C,CAC9ChL,aAAc,iBACd1C,MAAO,WACP9J,KAAM,SACN+J,YAAa,cACb/D,UAAW,sBACXiE,KAAM,WACNyC,SAAU,kBACVQ,cAAe,qBACfJ,aAAc,gBACdE,SAAU,kBACVhD,SAAU,cACV+C,WAAY,sBACZK,aAAc,uBACdT,UAAW,aACXL,iBAAkB,+BAClBM,UAAW,eACXH,iBAAkB,qBAClBtM,KAAM,+BAgWOsX,OA7Vf,SAA4BhJ,GAC1B,MAAe/P,KAAKC,UAAbC,EAAsB,iBAAlB,GAgBX,SAAS8Y,EAAejJ,GACtB,IAAQpO,EAAgBoO,EAAhBpO,MAAO5E,EAASgT,EAAThT,KACf,EAAwB8N,mBAAS,IAAG,mBAA7BrM,EAAI,KAAEwR,EAAO,KACdtT,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAM9D,SAASuc,IACPN,GAAahX,GAAOtD,MAAK,SAACC,GACpBA,GACF0R,EAAQ1R,EAEZ,GACF,CAVAsN,qBAAU,WACRqN,GACF,GAAG,CAACtX,IAUJ,IAAMgB,EAAU,CACd,CACExC,MAAO,sBACPyC,UAAW,OACXqH,IAAK,QAEP,CACE9J,MAAO,iBACPyC,UAAW,UAEb,CACEzC,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAU,OAC/B,8BACgB,SAAbxK,EAAK+E,KACJ,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvB1M,QAAM,EACNzC,KAAK,UACL2C,QAAS,WACP4U,GAAgB3R,EAAM4B,IAAIzK,MAAK,SAACC,GAC1BA,EACF2a,IAEAzV,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAGd,GACF,EAAE,iBAIF,MACD,IAIX,OACE,eAAC,KAAI,CAACiD,MAAO,CAAEoN,aAAc,IAAK,SAChC,eAAC,IAAK,CACJiH,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6BAAIpD,IACJ,eAAC,KAAO,CACN2G,QACE,gBAAC,KAAI,CACHxD,KAAMA,EACNU,OAAO,WACP0L,SAAU,SAAC1N,GACTga,GAAa,CAAE/J,OAAQjQ,EAAOiQ,OAAQhO,KAAMjC,EAAOiC,KAAMc,UAAStD,MAAK,SAACC,GAClEA,GACF2a,IACA/Y,EAAKM,eAELgD,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAEd,GACF,EAAE,UAEF,eAAC,KAAKa,KAAI,CACRJ,KAAK,OACLK,MAAM,aACNC,MAAO,CACL,CACEC,UAAU,IAEZ,SAEF,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CAACJ,KAAK,SAASK,MAAM,SAAQ,SACrC,eAAC,KAAW,CAACoM,IAAK,MAEpB,eAAC,KAAKrM,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,UAAKpD,EAAI,eACdmc,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAY7G,EACZmE,QAASA,KAIjB,CA6JA,OACE,qCACE,uBAAKU,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,UAC7E,eAAC,KAAI,CAAC9N,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAQ7D,MAAM,GAAE,SApSzEiU,OAAOC,KAAKzJ,IAAYlJ,KAAI,SAACuI,GAClC,IAAImP,EAAUxO,GAAWX,GACzB,GAAsB,iBAAXmP,EAAqB,CAC9B,GAAuC,IAAnChF,OAAOC,KAAK+E,EAAQ,IAAI5U,OAC1B,OAkIR,SAAiCjF,EAA0C0K,GACzE,IAAMtH,EAAU,CACd,CACExC,MAAO,MACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAET,CACEnD,MAAO,cACPyC,UAAW,OACXU,MAAO,KAGX,OACE,eAAC,KAAI,CAACD,MAAO,CAAEoN,aAAc,IAAK,SAChC,eAAC,IAAK,CACJiH,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6BAAI2Y,GAAa7O,KACjB,eAAC,KAAO,CACNvG,QACE,gBAAC,KAAI,CACH9C,OAAO,WACP0L,SAAU,SAAC1N,GACToL,GAAU9M,OAAO+M,GAAMrL,GAAQP,MAAK,SAACC,GAC/BA,GAAKyH,IACX,GACF,EAAE,UAEF,eAAC,KAAK9E,KAAI,CACRJ,KAAK,OACLK,MAAM,MACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uEAEX,SAEF,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,CAACJ,KAAK,OAAOK,MAAM,cAAU,SACrC,eAAC,KAAK,MAER,eAAC,KAAKD,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,UAAK2Y,GAAa7O,GAAI,gBAC3BiP,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAkB,OAAN9F,QAAM,IAANA,OAAM,EAANA,EAAQ8Z,MAAK,SAACvW,EAAQC,GAAM,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,IACzEqB,QAASA,KAIjB,CAtMe2W,CAAwBF,EAA6CnP,GACvE,GAAuC,IAAnCmK,OAAOC,KAAK+E,EAAQ,IAAI5U,OACjC,OAsMR,SAAiCjF,EAAwC0K,GACvE,IAAMtH,EAAU,CACd,CACExC,MAAO,MACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAET,CACEnD,MAAO,cACPyC,UAAW,OACXU,MAAO,IAET,CACEnD,MAAO,qCACPyC,UAAW,WACXU,MAAO,KAGX,OACE,eAAC,KAAI,CAACD,MAAO,CAAEoN,aAAc,IAAK,SAChC,eAAC,IAAK,CACJiH,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6BAAI2Y,GAAa7O,KACjB,eAAC,KAAO,CACNvG,QACE,gBAAC,KAAI,CACH9C,OAAO,WACP0L,SAAU,SAAC1N,GACToL,GAAU9M,OAAO+M,GAAMrL,EACzB,EAAE,UAEF,eAAC,KAAKqC,KAAI,CACRJ,KAAK,OACLM,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uEAGbH,MAAM,MAAK,SAEX,eAAC,KAAK,MAER,eAAC,KAAKD,KAAI,CAACJ,KAAK,OAAOK,MAAM,cAAU,SACrC,eAAC,KAAK,MAER,eAAC,KAAKD,KAAI,CACRJ,KAAK,WACLK,MAAM,gBACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0FAEX,SAEF,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,UAAK2Y,GAAa7O,GAAI,gBAC3BiP,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAkB,OAAN9F,QAAM,IAANA,OAAM,EAANA,EAAQ8Z,MAAK,SAACvW,EAAQC,GAAM,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,IACzEqB,QAASA,KAIjB,CAzRe4W,CAAwBH,EAA2CnP,EAE9E,CACA,OAAO,IACT,MA6RI,gBAAC,KAAI,CAAC9J,MAAM,0CAA0BkD,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,UACjG,eAAC,KAAM,CACLX,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,gCACZN,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAY4O,yBAChCC,OAAO,SACPC,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACTqI,GAAU,0BAA2B,CAAEjN,KAAM4E,GAC/C,IAEF,eAAC,KAAM,CACL0B,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,0BACZkM,OAAO,SACPxM,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAYgP,qBAChCF,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACTqI,GAAU,sBAAuB,CAAEjN,KAAM4E,GAC3C,IAEF,eAAC,KAAM,CACL0B,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,0BACZN,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAYiP,qBAChCJ,OAAO,SACPC,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACTqI,GAAU,sBAAuB,CAAEjN,KAAM4E,GAC3C,OAIJ,eAAC,KAAI,CAACxB,MAAM,8CAA4BkD,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,SAE1F4G,GAAsB,UAC1ByO,MAAK,SAACvW,EAAGC,GAAC,OAAKwE,SAASxE,EAAEzB,MAAQiG,SAASzE,EAAExB,KAAK,IAClDI,KAAI,SAAC4F,GACJ,OAAO,eAAC0R,EAAc,CAACrX,MAAO4F,SAASD,EAAUhG,MAAOvE,KAAI,UAAKuK,EAAUvK,KAAI,qCACjF,UAMd,ECnXAH,IAAMC,OAAO,MA0DEid,OAnDf,SAAsB/J,GAAe,IAAD,wBAC5BnF,EAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MACxD+H,EAAkBqI,EAAlBrI,cACR,EAA4BmD,mBAAS,MAAgC,mBAA9D1H,EAAM,KAAE4W,EAAS,KACxB,EAAkClP,oBAAS,GAAM,mBAA1CiG,EAAS,KAAEC,EAAY,KAU9B,OARAnF,qBAAU,WACR9D,GAAgBJ,GAAerJ,MAAK,SAACC,GAC/BA,GACFyb,EAAUzb,EAEd,GACF,GAAG,IAGD,sBAAK+E,MAAO,CAAE6T,WAAY,QAAS,SAChC/T,EACC,uCACGqO,GAAiB,aAAQrO,EAAOuR,aAChClD,GAAiB,6BAAoB9T,EAAgByF,EAAO6W,qBAC5DxI,GAAiB,QAAmE,QAA5D,EAAE5G,EAAWQ,MAAMrB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiI,KAAK,IAAE,UAAE,aAA1D,EAA4DrO,MACtFyU,GAAiB,kBAAcrO,EAAOqI,UACtCgG,GAAiB,4BAAmBtU,OAAOiG,EAAOqE,eAClDgK,GAAiB,MAA+D,QAAxD,EAAA5G,EAAWtJ,KAAKyI,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAAE,UAAE,OAAxD,EAA0DvE,KAA+D,QAA3D,EAAG6N,EAAWtJ,KAAKyI,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAAE,UAAE,aAAxD,EAA0DvE,KAAuE,QAAnE,EAAG6N,EAAWkD,aAAa/D,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAAE,UAAE,aAAhE,EAAkEvE,MAC5NyU,GAAiB,qBAAuF,QAAxE,EAAE5G,EAAWS,YAAYtB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOkI,WAAW,IAAE,UAAE,aAAtE,EAAwEtO,MAC1GyU,GAAiB,eAAgBrO,EAAOmE,UAAY,OACpDkK,GAAiB,QAAiE,QAA1D,EAAE5G,EAAWW,KAAKxB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOoI,IAAI,IAAE,UAAE,aAAxD,EAA0DxO,MACpFyU,GAAiB,gBAAuB,OAANrO,QAAM,IAANA,OAAM,EAANA,EAAQoR,aAC1C/C,GAAiB,uBAAcrO,EAAOkE,MACtCmK,GAAiB,YAAarO,EAAO+K,WACrCsD,GAAiB,8BAAgBrO,EAAOgU,eACxC3F,GAAiB,eAA6E,QAAlE,EAAE5G,EAAWoD,SAASjE,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO6K,QAAQ,IAAE,UAAE,aAAhE,EAAkEjR,MAChGyU,GAAiB,WAA4E,QAAlE,EAAE5G,EAAWU,SAASvB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOmI,QAAQ,IAAE,UAAE,aAAhE,EAAkEvO,MAC/FyU,GAAiB,oBAAgBrO,EAAOiU,YACxC5F,GAAiB,kBAAwF,QAA5E,EAAE5G,EAAW4D,cAAczE,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOqL,aAAa,IAAE,UAAE,aAA1E,EAA4EzR,MAC3GyU,GAAiB,cAAenU,EAAW8F,EAAOkJ,gBAClDmF,GAAiB,aAAsF,QAA1E,EAAE5G,EAAWwD,aAAarE,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiL,YAAY,IAAE,UAAE,aAAxE,EAA0ErR,MACzGyU,GAAiB,UAA6E,QAApE,EAAE5G,EAAWqD,UAAUlE,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO8K,SAAS,IAAE,UAAE,aAAlE,EAAoElR,MAChGyU,GAAiB,2BAAyBrO,EAAOkU,cAClD,eAAC,IAAM,CAAC/V,KAAK,UAAU2C,QAAS,kBAAM8M,GAAa,EAAK,EAAC,yDAGzD,eAAC,GAAY,CAACrJ,cAAeA,EAAeQ,WAAY/E,EAAO2F,GAAIgI,UAAWA,EAAWC,aAAcA,OAGzG,eAAC,KAAI,CAAC1N,MAAO,CAAEmM,OAAQ,OAASvS,KAAK,WAI7C,EC3DM4P,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAAM,IAECod,GAAc,mKAsGhC,OAtGgC,oCACjCrP,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,CAAC,UAAW,gBAAiB,kBAAW,aAAc,UAChEC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAE/B,CACEzR,MAAO,gBACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEuN,kBAAkB0D,OAASlH,GAAO9J,EAAEsN,kBAAkB0D,MAAM,EACnH7Q,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,GAC1D,aAEAoD,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE+Q,SAAS7Q,cAAcD,EAAE8Q,SAAS,GAC/E,EAAKjC,qBAAqB,aAAW,aAGxCzR,MAAO,aACPyC,UAAW,gBACR,EAAKgP,qBAAqB,iBAAe,aAG5CzR,MAAO,QACPyC,UAAW,WACR,EAAKgP,qBAAqB,YAAU,aAIvCzR,MAAO,mBACPyC,UAAW,WACR,EAAKgP,qBAAqB,cAGjC,EAEFoC,kBAAiB,gCAAG,8GACG1L,KAAoB,KAAD,EAAlCmN,EAAM,OAEZ,EAAKrR,SAAS,CAAE5F,KAAMiX,IAAU,2CACjC,EAmBA,OAnBA,mCAGD,WACE,IAAMrT,EAAQmC,KAAKnC,MAEnB,OACE,eAAC,IAAK,CACJ+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAIsC,aAAa,EAC1CzK,KAAK,QACLiI,QAASX,KAAKnC,MAAM8C,QACpBwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CjV,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,KAClBwY,WAAY,CACVC,kBAAmB,SAAC9T,GAAM,OAAK,eAAC,GAAY,CAACuE,cAAevE,EAAOuE,eAAiB,IAI5F,KAAC,EAzHgC,CAAS6Q,IAAM/S,W,8BCElD5I,IAAMC,OAAO,MAAK,IAEZsd,GAAkB,mKAqNrB,OArNqB,oCACtBvP,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,IACVC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAAWzI,EAAEyI,QAAQ,GAClE,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAE/B,CAOA,EACA,CAOA,EAAE,aAEAzR,MAAO,6BACPyC,UAAW,eACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKnG,IAAyB,KAAnBkG,EAAEsX,aAAsBtX,EAAEsX,aAAe,iBAAkB,eAAerG,OAASnX,IAAyB,KAAnBmG,EAAEqX,aAAsBrX,EAAEqX,aAAe,iBAAkB,eAAerG,MAAM,GAC1N,EAAKnC,qBAAqB,iBAAe,aAG5CzR,MAAO,6BACPyC,UAAW,sBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKnG,IAAMkG,EAAEuX,oBAAqB,sBAAsBtG,OAASnX,IAAMmG,EAAEsX,oBAAqB,sBAAsBtG,MAAM,GAChK,EAAKnC,qBAAqB,wBAAsB,aAGnDzR,MAAO,QACPyC,UAAW,SACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEvE,OAAOyE,cAAcD,EAAExE,OAAO,GAC3E,EAAKqT,qBAAqB,WAAS,aAGtCzR,MAAO,kBACPyC,UAAW,kBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE2E,gBAAgBzE,cAAcD,EAAE0E,gBAAgB,GAC7F,EAAKmK,qBAAqB,oBAAkB,aAG/CzR,MAAO,cACPyC,UAAW,YACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEwE,UAAYvE,EAAEuE,SAAS,GACpE,EAAKsK,qBAAqB,cAAY,aAGzCzR,MAAO,aACPyC,UAAW,iBACR,EAAKgP,qBAAqB,kBAE/B,CACEzR,MAAO,YACPyC,UAAW,eACXC,OAAQ,SAACC,EAAiBC,GAAe,aAAM,OAADD,QAAC,IAADA,GAAe,QAAd,EAADA,EAAGsL,oBAAY,WAAd,EAAD,EAAiBpL,cAAe,OAADD,QAAC,IAADA,OAAC,EAADA,EAAGqL,aAAa,GAE/F,CACEjO,MAAO,QACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEsI,MAAMpI,cAAcD,EAAEqI,MAAM,GAE9E,CACEjL,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,gCAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,MAA2C,gBAAxB,EAAKsO,MAAMrT,KAAK+E,KAClD,eAAC,IAAM,CACLqC,OAAK,EACLT,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACP,EAAKsI,YAAY,KAAOrF,EAAMQ,cAChC,EAAE,iCAIF,KACqB,gBAAxB,EAAKqI,MAAMrT,KAAK+E,OAA4C,kBAAjByF,EAAM3I,QAA+C,mCAAjB2I,EAAM3I,SACpF,eAAC,IAAM,CACLuF,OAAK,EACLT,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WAEP2E,GADgC,kBAAjB1B,EAAM3I,OAA6B,UAA6B,mCAAjB2I,EAAM3I,OAAsC,YAAc,GAC7F2I,EAAM4B,IAAIzK,KAAI,gCAAC,gHACnBsK,KAA2B,KAAD,EAAzC8M,EAAM,OACN6E,EAAiB,EAAKC,aAAa9E,GACzC,EAAKrR,SAAS,CAAE5F,KAAM8b,IAAkB,2CAE5C,EAAE,SAEgB,kBAAjBpT,EAAM3I,OAA6B,SAA4B,mCAAjB2I,EAAM3I,OAAsC,wCAA6B,OAGzH,KAIX,EAgCFyV,kBAAiB,gCAAG,kHACGrL,KAA2B,KAAD,EAAzC8M,EAAM,OACN6E,EAAiB,EAAKC,aAAa9E,GACzC,EAAKrR,SAAS,CAAE5F,KAAM8b,IAElBE,EAAM,CAAC,CAAC,kBAAc,kBAAW,sBAAkB,6BAAoB,QAAS,cAAe,aAAc,cAAe,UAEhI/E,EAAOgF,SAAQ,SAACtX,GAAM,OAAKqX,EAAIE,KAAK,CAACvX,EAAOqI,SAAUrI,EAAO0Q,SAAU1Q,EAAOwX,WAAYxX,EAAOkX,oBAAqBlX,EAAO5E,OAAQ4E,EAAOmE,UAAWnE,EAAOiL,aAAcjL,EAAOkJ,cAAelJ,EAAOiI,OAAO,IAEhN,EAAKhH,SAAS,CAAEoP,QAASgH,IAAO,2CACjC,EAeA,OAfA,wCAxCD,SAAY7Y,GACV,IAAImN,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,KAAM,CAAC5N,MAAOA,EAAO0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAASZ,SAAS,QACxF,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE7N,QAGpB,OAAXmN,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,0BAED,SAAa4F,GAWX,OAVAA,EAAOgF,SAAQ,SAACtX,GACdA,EAAOkX,oBAAsBlX,EAAOyX,aAAehe,IAAMuG,EAAOyX,cAAchd,OAAO,sBAAwBuF,EAAO0X,eAAiBje,IAAMuG,EAAO0X,gBAAgBjd,OAAO,sBAAwBuF,EAAO2X,eAAiBle,IAAMuG,EAAO2X,gBAAgBld,OAAO,sBAAwBhB,IAAMuG,EAAOwX,YAAY/c,OAAO,sBACrTuF,EAAOwX,WAAa/d,IAAMuG,EAAOwX,YAAY/c,OAAO,sBACpDuF,EAAOiX,aAAejX,EAAOiX,aAAexd,IAAMuG,EAAOiX,cAAcxc,OAAO,eAAiB,GAC/FuF,EAAOiI,MAAQ/N,EAAW8F,EAAOiI,OACjCjI,EAAO5E,OAA0B,aAAjB4E,EAAO5E,OAAwB,gBAAmC,aAAjB4E,EAAO5E,OAAwB,yCAA+C,aAAjB4E,EAAO5E,OAAwB,iCAA4C,aAAjB4E,EAAO5E,OAAwB,oBAAkC,YAAjB4E,EAAO5E,OAAuB,yCAAqD,YAAlB4E,EAAO5E,OAAuB,gBAAkB4E,EAAO5E,OAChW4E,EAAOiL,aAAejL,EAAOiL,aAAe/Q,EAAW8F,EAAOiL,cAAgB,GAC9EjL,EAAOkJ,cAAgBhP,EAAW8F,EAAOkJ,eACzClJ,EAAO5E,OAASlB,EAAW8F,EAAO5E,OACpC,IACOkX,CACT,GAAC,oBAgBD,WACE,IAAMrT,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,eAAC,IAAK,CAAC+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAAE7L,KAAK,QAAQiI,QAASX,KAAKnC,MAAM8C,QAASwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAAkBjV,QAAS4B,KAAKnC,MAAMO,QAAS0C,WAAYjD,EAAM5D,OACjM,eAAC,IAAM,CAAC6E,MAAO,CAAE8V,MAAO,QAASzH,YAAa,IAAMpQ,KAAK,UAAS,SAChE,eAAC,WAAO,CAAC9C,KAAM4D,EAAMoR,QAAQ,8BAIrC,KAAC,EApOqB,CAAS+E,IAAM/S,WA2OxBgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyB2B,IChPlCtN,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAAM,IAEdke,GAAmB,mKAyIrB,OAzIqB,oCACvBnQ,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNmR,mBAAmB,EACnBE,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GAC/E,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE+Q,SAAS7Q,cAAcD,EAAE8Q,SAAS,GAC/E,EAAKjC,qBAAqB,aAAW,aAGxCzR,MAAO,aACPyC,UAAW,gBACR,EAAKgP,qBAAqB,iBAAe,aAG5CzR,MAAO,QACPyC,UAAW,WACR,EAAKgP,qBAAqB,YAAU,aAGvCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAE/B,CACEzR,MAAO,kBACPyC,UAAW,kBACXM,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,EACrD8F,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE2E,gBAAgBzE,cAAcD,EAAE0E,gBAAgB,GAGlG,CACEtH,MAAO,sBACPyC,UAAW,qBACXM,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,EAC1D8F,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEkX,oBAAoBjG,OAASlH,GAAO9J,EAAEiX,oBAAoBjG,MAAM,GAEzH,CACE5T,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACLqL,SAAmC,SAAzB5F,EAAMO,kBAAsCP,EAAM8T,qBAC5D3X,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACPgF,GAAO/B,EAAMO,gBAAiBP,EAAM4B,IAAIzK,MAAK,SAACC,GACxCA,GACF,EAAK2c,sBAET,GACF,EAAE,mCAIF,MACD,EAEPpY,OAAQ,SAACC,EAAiBC,GAAe,OAA2B,SAArBD,EAAE2E,kBAAsC3E,EAAEkY,uBAA8C,SAArBjY,EAAE0E,kBAAsC1E,EAAEiY,qBAAqB,KAGrL,EAEFhH,kBAAoB,WAClB,EAAKiH,sBACP,EAAE,EAEFA,qBAAuB,WACrBpT,KAA2BxJ,MAAK,SAACoX,GAC/B,EAAKrR,SAAS,CAAE5F,KAAMiX,GACxB,GACF,EAAC,EAoBA,OApBA,mCAID,WACE,IAAMrT,EAAQmC,KAAKnC,MAEnB,OACE,eAAC,IAAK,CACJ+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAC/B7L,KAAK,QACLiI,QAAS9C,EAAM8C,QACfwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CjV,QAASP,EAAMO,QACf0C,WAAYjD,EAAM5D,KAClBwY,WAAY,CACVC,kBAAmB,SAAC9T,GAAM,OAAK,eAAC,GAAY,CAACuE,cAAevE,EAAOuE,eAAiB,IAI5F,KAAC,EA7JsB,CAAS6Q,IAAM/S,WAoKzBgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBuC,ICrKxCne,IAAMC,OAAO,MAAK,IAEGqe,GAAkB,mKAiInC,OAjImC,oCACrCtQ,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,CAAC,UAAW,kBAAc,sBAAkB,kBAAW,UAAW,QAAS,oBAAgB,8BAAuB,QAAS,qBACrIF,gBAAiB,GACjBC,mBAAmB,EACnBE,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GAC/E,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE+Q,SAAS7Q,cAAcD,EAAE8Q,SAAS,GAC/E,EAAKjC,qBAAqB,aAAW,aAGxCzR,MAAO,aACPyC,UAAW,gBACR,EAAKgP,qBAAqB,iBAAe,aAG5CzR,MAAO,QACPyC,UAAW,WACR,EAAKgP,qBAAqB,YAAU,aAGvCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAE/B,CACEzR,MAAO,kBACPyC,UAAW,kBACXM,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,EACrD8F,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE2E,gBAAgBzE,cAAcD,EAAE0E,gBAAgB,GAElG,CACEtH,MAAO,6BACPyC,UAAW,qBACXuY,iBAAkB,UAClBjY,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,EAC1D8F,OAAQ,SAACC,EAAiBC,GAAe,OAAKnG,IAAMkG,EAAEkX,oBAAoBjG,OAASnX,IAAMmG,EAAEiX,oBAAoBjG,MAAM,GACrH,aAEA5T,MAAO,uBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE8N,SAAS5N,cAAcD,EAAE6N,SAAS,GAC/E,EAAKgB,qBAAqB,eAGjC,EAEFoC,kBAAoB,WAClB,IAAIR,EAAU,CAAC,CAAC,UAAW,kBAAc,sBAAkB,kBAAW,UAAW,QAAS,oBAAgB,QAAS,mBAAiB,gCACpIrK,KAAkB9K,MAAK,SAACC,GAAS,IAAD,IAC1B8c,EAAiB,OAAH9c,QAAG,IAAHA,OAAG,EAAHA,EAAKyL,QAAO,SAACuK,GAAM,QAA0B,SAAnBA,EAAO1D,UAA0C,YAAnB0D,EAAO1D,UAA6C,gBAAnB0D,EAAO1D,SAA2B,IAC7IwK,EAAyB,QAAd,EAAGA,SAAW,aAAX,EAAa1Z,KAAI,SAAC4S,GAE9B,OADAA,EAAO1D,SAAW/S,EAAqByW,EAAO1D,UACvC0D,CACT,IAEA,EAAKlQ,SAAS,CAAE5F,KAAM4c,EAAaC,eAAe,IACnC,QAAf,IAAKjZ,MAAM5D,YAAI,OAAf,EAAiBic,SAAQ,SAACvT,GACxB,IAAIoU,EAAgBpU,EAAMkE,MAAQ,IAAMlE,EAAMO,gBAAkB,IAAMP,EAAMmF,cAAgB,IAAMnF,EAAMkH,aAAe,IAAMlH,EAAMmE,YAAc,IAAMnE,EAAMmH,WAAa,IAAMnH,EAAMoH,SAAW,IAAMpH,EAAMqE,KAAO,IAAMrE,EAAMiQ,cAAgB,IAAMjQ,EAAMgH,UAAY,IAAMhH,EAAMI,UAAY,IAAMJ,EAAM5F,KAAO,IAAM4F,EAAM8G,SAAW,IAAM9G,EAAMmQ,aAAe,IAAMnQ,EAAMG,KACjXmM,EAAQkH,KAAK,CAACxT,EAAMQ,cAAeR,EAAMsE,SAAUtE,EAAME,KAAMF,EAAM2M,SAAU3M,EAAMqU,aAAcrU,EAAMsU,QAAStU,EAAMwH,aAAcxH,EAAM0J,SAAU1J,EAAMO,gBAAiB6T,GAC/K,IACA,EAAKlX,SAAS,CAAEoP,WAClB,GACF,EAAC,EAsBA,OAtBA,mCAID,WACE,IAAMpR,EAAQmC,KAAKnC,MAEnB,OACE,qCACE,eAAC,IAAK,CACJ+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI4U,mBAAqB5U,EAAIsC,aAAa,EACnEzK,KAAK,QACLiI,QAASX,KAAKnC,MAAM8C,QACpBwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CjV,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,KAClBwY,WAAY,CACVC,kBAAmB,SAAC9T,GAAM,OAAK,eAAC,GAAY,CAACuE,cAAevE,EAAOuE,eAAiB,MAK9F,KAAC,EAvJoC,CAAS6Q,IAAM/S,W,UCSrD,wDAhBM,8GACkBxH,IAAMC,IAAIC,GAAc,eAAgB,CAC7DC,QAAS,CACPC,cAAe,UAAY9B,OAG5B+B,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OACN,OAAOD,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAZU,OAARC,EAAQ,yBAcPA,GAAQ,4CAChB,sBAEM,IAAM+c,GAAc,iKAIE,OAJF,oCACzBC,eAAyB,GAAG,EAC5BC,aAAuB,GAAG,EAC1BC,gBAA0B,GAAG,EAC7BC,cAAwB,GAAE,wBAJD,CAAStV,IA6BnC,wDAtBM,WAA+BuV,GAAqB,iGAClC9d,IAAMmB,IAC3BjB,GAAc,0BACd4d,EACA,CACE3d,QAAS,CACPC,cAAe,UAAY9B,KAE7BwY,aAAc,SAGfzW,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAEN,OADAwW,UAAiBzW,EAAIE,KAAM,cACpBF,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAlBU,OAARC,EAAQ,yBAoBPA,GAAQ,4CAChB,sBAuBA,wDAtBM,WAAwCod,GAAqB,iGAC3C9d,IAAMmB,IAC3BjB,GAAc,wCACd4d,EACA,CACE3d,QAAS,CACPC,cAAe,UAAY9B,KAE7BwY,aAAc,SAGfzW,MAAK,SAACC,GACL,GAAmB,MAAfA,EAAIC,OAEN,OADAwW,UAAiBzW,EAAIE,KAAM,cACpBF,EAAIE,IAEf,IACCC,OAAM,WACL,OAAO,IACT,IAAG,KAAD,EAlBU,OAARC,EAAQ,yBAoBPA,GAAQ,4CAChB,sB,cCpEOqd,GAAUC,KAAVD,MAmBOE,OAjBf,SAAsBlM,GACpB,IAAQ5P,EAAuB4P,EAAvB5P,MAAO3B,EAAgBuR,EAAhBvR,KAAMoU,EAAU7C,EAAV6C,MAErB,OACE,sBAAKvP,MAAO,CAAE6Y,UAAW,aAAcjQ,SAAU,OAAQS,SAAU,OAAQ8C,OAAQ,GAAI+H,aAAc,IAAK,SACxG,uBAAKlU,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUF,aAAc,SAAU5N,MAAO,OAAQgU,gBAAiB1E,EAAOV,QAAS,GAAI,UAClI,eAAC6J,GAAK,CAACI,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,SAAU,SACnDzS,IAEH,eAAC4b,GAAK,CAACI,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,SAAU,SACnDpU,QAKX,E,UCdA5B,IAAMC,OAAO,MAEb,IAAQkf,GAAUC,KAAVD,MACAK,GAAgBC,KAAhBD,YAgIOE,OA9Hf,WACE,IAAMC,EAAUC,cAKhB,EAAkC3R,oBAAS,GAAM,mBAA1C4R,EAAS,KAAEC,EAAY,KA8BxBC,EAAuC,CAC3CnW,MAAO,oBACPC,MAAO,oBACPC,MAAO,yBACPC,KAAM,SACNG,MAAO,0BACPE,aAAc,gCACdD,SAAU,sBACVF,KAAM,SACND,MAAO,aACPgW,iBAAW,kBAGb,OACE,sBACEvZ,MAAO,CACL6Y,UAAW,aACXjQ,SAAU,OACVS,SAAU,OACV8C,OAAQ,GACR+H,aAAc,IACd,SAEF,uBACElU,MAAO,CACLyI,QAAS,OACTsF,cAAe,SACfF,aAAc,SACd5N,MAAO,OACPgU,gBAAiB,mBACjBpF,QAAS,MACT,UAEF,eAAC,GAAK,CAACiK,MAAO,EAAE,2CAChB,gBAAC,KAAI,2BApEY,CACrB3P,SAAU,CAAE3H,KAAM,GAClB4H,WAAY,CAAE5H,KAAM,MAmEI,IAClBhE,KAAK,kBACLyL,SAjES,SAAC1N,GAAiB,IAAD,EAC5Bkd,EAAQ,IAAIL,GAES,QAAzB,EAAA7c,EAAO,0BAAkB,OAAzB,EAA2B6b,SAAQ,SAAC9Y,GAClCma,EAAMna,IAAS,CACjB,IAEAma,EAAMJ,eAAiB9c,EAAO,kBAAkB,GAChDkd,EAAMH,aAAe/c,EAAO,kBAAkB,GAC9Ckd,EAAMF,gBAAkBhd,EAAO,oBAAoB,GACnDkd,EAAMD,cAAgBjd,EAAO,oBAAoB,GAEhD6d,EFkBE,SAAwC,GAAD,gCEVtCI,CAAyBf,GAAOzd,MAAK,SAACC,GAChCA,IACFoC,QAAQC,IAAI,yBACZ4b,EAAQ7B,KAAK,KAEjB,IFlBD,SAA+B,GAAD,gCEM7BoC,CAAgBhB,GAAOzd,MAAK,SAACC,GACvBA,IACFoC,QAAQC,IAAI,yBACZ4b,EAAQ7B,KAAK,KAGjB,GAON,EAwCQ5Z,cAAe,CACb,kBAAmB,CAAC,QAAS,QAAS,QAAS,QAC/C,iBAAkB,CAAClE,MAAQmgB,QAAQ,QAASngB,MAAQogB,IAAI,EAAG,SAC3D,mBAAoB,CAClBpgB,MAAQmgB,QAAQ,QAChBngB,MAAQogB,IAAI,EAAG,UAEjB,UAEF,eAAC,KAAK/b,KAAI,CAACC,MAAM,sBAAiBL,KAAK,iBAAgB,SACrD,eAACub,GAAW,MAEd,eAAC,KAAKnb,KAAI,CAACC,MAAM,6BAAmBL,KAAK,mBAAkB,SACzD,eAACub,GAAW,MAEd,eAAC,KAAKnb,KAAI,CAACJ,KAAK,kBAAiB,SAC/B,eAAC,KAASW,MAAK,UACb,eAAC,IAAG,UAEO4S,OAAOC,KAAKsI,GAAWjb,KAAI,SAACkP,GACjC,OACE,eAAC,IAAG,CAAsC/L,KAAM,GAAG,SACjD,eAAC,KAAQ,CACPlD,MAAOiP,EACPvN,MAAO,CAAE4Z,WAAY,QAAS,SAE7BN,EAAU/L,MALL,oBAAsBA,EASpC,UAKR,gBAAC,IAAG,CACFvN,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAU8L,IAAK,QAAS,UAEjE,eAAC,KAAQ,CAAC3Z,SAAU,kBAAMmZ,GAAcD,EAAU,EAAC,oBAInD,eAAC,IAAM,CAAC9N,SAAS,SAASrN,KAAK,UAAS,sCAQpD,E,0CCnIe+I,EAAQ,KAChBxN,OAAO,MAE6BkF,IAAnCob,OAAmCpb,IAA3Bqb,OAA2Brb,IAAnBE,MAAmBF,IAAZD,QAA/B,IAqBMub,GAAgB,mKAIT,OAJS,oCACpBzS,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAChEyC,MAAQ,CAAEkb,QAAS,MAAiC,EAEpDjL,iBAAW,IAgLV,OAhLU,8CAEX,WAAqB,IAAD,QHjCf,WAAyB,iCGkC5BkL,GAAalf,MAAK,SAACC,GACbA,IACFA,EAAIkf,sBAAwB,EAAKC,KAAKnf,EAAIkf,uBAC1Clf,EAAIof,uBAAyB,EAAKD,KAAKnf,EAAIof,wBAC3Cpf,EAAIqf,uBAAyB,EAAKF,KAAKnf,EAAIqf,wBAC3Crf,EAAIsf,0BAA4B,EAAKH,KAAKnf,EAAIsf,2BAC9Ctf,EAAIuf,uBAAyB,EAAKJ,KAAKnf,EAAIuf,yBAEzCvf,GAAK,EAAK8F,SAAS,CAAEkZ,QAAShf,GACpC,GACF,GAAC,kBAED,SAAKwE,GACH,OAAOgb,MAAMC,KAAK,IAAIC,IAAIlb,GAC5B,GAAC,2BAED,WACE,IAAQwa,EAAY/Y,KAAKnC,MAAjBkb,QACR,OACE,uCACE,eAAC,GAAY,CAACnd,MAAM,oCAA+B3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASW,eAAgBrL,MAAM,YACxF,eAAC,GAAY,CAACzS,MAAM,mCAA8B3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASY,cAAetL,MAAM,YACtF,eAAC,GAAY,CAACzS,MAAM,oBAAiB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASa,aAAcvL,MAAM,YACxE,eAAC,GAAY,CAACzS,MAAM,kBAAkB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASc,eAAgBxL,MAAM,YAC3E,eAAC,GAAY,CAACzS,MAAM,mCAA8B3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASe,cAAezL,MAAM,YACtF,eAAC,GAAY,CAACzS,MAAM,oBAAiB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASgB,aAAc1L,MAAM,YACxE,eAAC,GAAY,CAACzS,MAAM,kBAAkB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASiB,eAAgB3L,MAAM,cAGjF,GAAC,0BAED,WACE,IAAQ0K,EAAY/Y,KAAKnC,MAAjBkb,QACR,OACE,qCACGlJ,OAAOC,KAAY,OAAPiJ,QAAO,IAAPA,OAAO,EAAPA,EAASkB,QAAQha,OAAS,EACrC,uCACE,eAAC,GAAY,CAACrE,MAAM,wCAA8B3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASmB,cAAe7L,MAAM,YACtF,eAAC,GAAY,CAACzS,MAAM,yBAAiB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASoB,aAAc9L,MAAM,YACxE,eAAC,GAAY,CAACzS,MAAM,uBAAkB3B,KAAa,OAAP8e,QAAO,IAAPA,OAAO,EAAPA,EAASqB,eAAgB/L,MAAM,YAC3E,eAAC,GAAY,CAACzS,MAAM,+BAA4B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,eAAwB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,eAAiB,EAAG5L,MAAM,YACjI,eAAC,GAAY,CAACzS,MAAM,2BAA2B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,cAAuB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,cAAgB,EAAG5L,MAAM,YAC9H,eAAC,GAAY,CAACzS,MAAM,+BAA4B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,eAAwB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,eAAiB,EAAG5L,MAAM,YACjI,eAAC,GAAY,CAACzS,MAAM,2BAA2B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,cAAuB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,eAAiB,EAAG5L,MAAM,YAC/H,eAAC,GAAY,CAACzS,MAAM,oCAA4B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,eAAwB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,eAAiB,EAAG5L,MAAM,YACjI,eAAC,GAAY,CAACzS,MAAM,gCAA2B3B,KAAa,OAAP8e,QAAO,IAAPA,KAASkB,OAAO,cAAuB,OAAPlB,QAAO,IAAPA,OAAO,EAAPA,EAASkB,OAAO,cAAgB,EAAG5L,MAAM,eAGhI,eAAC,KAAI,KAIb,GAAC,uCAED,WAA6B,IAAD,OAC1B,OACE,sBAAKvP,MAAO,CAAE6Y,UAAW,aAAcjQ,SAAU,OAAQS,SAAU,OAAQ8C,OAAQ,GAAI+H,aAAc,IAAK,SACxG,uBAAKlU,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUF,aAAc,SAAU5N,MAAO,OAAQgU,gBAAiB,UAAWpF,QAAS,GAAI,UACtI,eAAC,KAAK,CAACiK,MAAO,EAAG9Y,MAAO,CAAEuP,MAAO,QAASgM,UAAW,UAAW,mDAGhE,gBAAC,IAAG,CAACC,OAAQ,CAAC,EAAG,IAAI,UACnB,gBAAC,IAAG,CAACja,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAI1b,MAAO,CAAE8N,WAAY,UAAW,UAC3D,eAAC,KAAK,CAACgL,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,QAASgM,UAAW,UAAW,yCAGzE,WAAO,IAAD,IACN,OAAiB,QAAjB,EAAO,EAAKxc,aAAK,OAAS,QAAT,EAAV,EAAYkb,eAAO,WAAT,EAAV,EAAqBI,uBAAuBhc,KAAI,SAACgG,GACtD,OACE,eAAC,IAAG,UACF,eAAC,KAAI,CAACsX,MAAI,EAAC3b,MAAO,CAAEmM,OAAQ,EAAGlM,MAAO,OAAQsP,MAAO,SAAU,SAC5DlL,KAFK,cAAgBA,EAM9B,GACF,CAVE,MAYJ,gBAAC,IAAG,CAAC9C,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAI1b,MAAO,CAAE8N,WAAY,UAAW,UAC3D,eAAC,KAAK,CAACgL,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,QAASgM,UAAW,UAAW,yCAGzE,WAAO,IAAD,IACN,OAAiB,QAAjB,EAAO,EAAKxc,aAAK,OAAS,QAAT,EAAV,EAAYkb,eAAO,WAAT,EAAV,EAAqBO,uBAAuBnc,KAAI,SAACgG,GACtD,OACE,eAAC,IAAG,UACF,eAAC,KAAI,CAACsX,MAAI,EAAC3b,MAAO,CAAEmM,OAAQ,EAAGlM,MAAO,OAAQsP,MAAO,SAAU,SAC5DlL,KAFK,cAAgBA,EAM9B,GACF,CAVE,MAYJ,gBAAC,IAAG,CAAC9C,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAI1b,MAAO,CAAE8N,WAAY,UAAW,UAC3D,eAAC,KAAK,CAACgL,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,QAASgM,UAAW,UAAW,8CAGzE,WAAO,IAAD,IACN,OAAiB,QAAjB,EAAO,EAAKxc,aAAK,OAAS,QAAT,EAAV,EAAYkb,eAAO,WAAT,EAAV,EAAqBK,uBAAuBjc,KAAI,SAACgG,GACtD,OACE,eAAC,IAAG,UACF,eAAC,KAAI,CAACsX,MAAI,EAAC3b,MAAO,CAAEmM,OAAQ,EAAGlM,MAAO,OAAQsP,MAAO,SAAU,SAC5DlL,KAFK,cAAgBA,EAM9B,GACF,CAVE,MAYJ,gBAAC,IAAG,CAAC9C,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAI1b,MAAO,CAAE8N,WAAY,UAAW,UAC3D,eAAC,KAAK,CAACgL,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,QAASgM,UAAW,UAAW,mCAGzE,WAAO,IAAD,IACN,OAAiB,QAAjB,EAAO,EAAKxc,aAAK,OAAS,QAAT,EAAV,EAAYkb,eAAO,WAAT,EAAV,EAAqBE,sBAAsB9b,KAAI,SAACgG,GACrD,OACE,eAAC,IAAG,UACF,eAAC,KAAI,CAACsX,MAAI,EAAC3b,MAAO,CAAEmM,OAAQ,EAAGlM,MAAO,OAAQsP,MAAO,SAAU,SAC5DlL,KAFK,aAAeA,EAM7B,GACF,CAVE,MAYJ,gBAAC,IAAG,CAAC9C,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAI1b,MAAO,CAAE8N,WAAY,UAAW,UAC3D,eAAC,KAAK,CAACgL,MAAO,EAAG9Y,MAAO,CAAEmM,OAAQ,EAAGoD,MAAO,QAASgM,UAAW,UAAW,qCAGzE,WAAO,IAAD,IACN,OAAiB,QAAjB,EAAO,EAAKxc,aAAK,OAAS,QAAT,EAAV,EAAYkb,eAAO,WAAT,EAAV,EAAqBM,0BAA0Blc,KAAI,SAACgG,GACzD,OACE,eAAC,IAAG,UACF,eAAC,KAAI,CAACsX,MAAI,EAAC3b,MAAO,CAAEmM,OAAQ,EAAGlM,MAAO,OAAQsP,MAAO,SAAU,SAC5DlL,KAFK,iBAAmBA,EAMjC,GACF,CAVE,aAgBd,GAAC,oBAED,WACE,OACE,eAAC,IAAM,UACJnD,KAAKnC,MAAMkb,QACV,gBAAC,IAAG,WACF,eAAC,IAAG,CAAC1Y,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,EAAGka,GAAI,EAAE,SACvC1a,KAAKnC,MAAMkb,QAAU/Y,KAAK2a,gBAAkB,eAAC,KAAI,MAEpD,eAAC,IAAG,CAACta,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,EAAGka,GAAI,EAAE,SACvC1a,KAAKnC,MAAMkb,QAAU/Y,KAAK4a,eAAiB,eAAC,KAAI,MAEnD,gBAAC,IAAG,CAACva,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,EAAGka,GAAI,GAAG,UACzC,eAAC,IAAG,CAACra,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,GAAIka,GAAI,GAAG,SACzC1a,KAAKnC,MAAMkb,QAAU/Y,KAAK6a,4BAA8B,eAAC,KAAI,MAEhE,eAAC,IAAG,CAACxa,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,GAAIka,GAAI,GAAG,SAC1C,eAAC,GAAS,YAKhB,eAAC,KAAI,CAAC5b,MAAO,CAAEgc,UAAW,aAIlC,KAAC,EApLmB,CAAS9G,IAAM/S,WA2LtB6X,M,UC1Ld,wDA7BM,WAAoCze,EAAa0gB,GAAqB,iFACvD,OAApB5e,QAAQC,IAAI/B,GAAQ,SACGZ,IAAMa,KAC3BX,GAAc,iCACdU,EACA,CACET,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAIA,EAEF,OADAghB,KACO,CAEX,IACC7gB,OAAM,SAAC6H,GAQN,OAPA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QACE,0GAEFtD,OAAQ,WAEH,CACT,IAAG,KAAD,EAxBU,OAAR1B,EAAQ,yBA0BPA,GAAQ,4CAChB,sBAiCA,wDA/BM,WACL6gB,EACAD,GAAqB,iGAEEthB,IAAMmB,IAC3BjB,GAAW,yCAAqCqhB,GAChD,KACA,CACEphB,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,GAAIA,EAEF,OADAghB,KACO,CAEX,IACC7gB,OAAM,SAAC6H,GAQN,OAPA9C,IAAMC,MAAM,CACVtD,MAAO,OACPuD,QACE,8GAEFtD,OAAQ,WAEH,CACT,IAAG,KAAD,EAxBU,OAAR1B,EAAQ,yBA0BPA,GAAQ,4CAChB,sBAmBA,wDAjBM,8GACkBV,IAAMC,IAC3BC,GAAc,+BACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAbU,OAAR5H,EAAQ,yBAePA,GAAQ,4CAChB,sBAEM,SAAe8gB,KAAyB,gCAiB9C,wDAjBM,8GACkBxhB,IAAMC,IAC3BC,GAAc,iDACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAbU,OAAR5H,EAAQ,yBAePA,GAAQ,4CAChB,sBAEM,SAAe+gB,KAAqB,gCAiB1C,wDAjBM,8GACkBzhB,IAAMC,IAC3BC,GAAc,6CACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAbU,OAAR5H,EAAQ,yBAePA,GAAQ,4CAChB,sBA2BA,wDAzBM,WAAiCF,GAKvC,iFACmB,OAAlBkC,QAAQC,IAAInC,GAAM,SACKR,IAAMa,KAC3BX,GAAc,2BACdM,EACA,CACEL,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GAEL,OADAoC,QAAQC,IAAIrC,GACLA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAfU,OAAR5H,EAAQ,yBAiBPA,GAAQ,4CAChB,sBAEM,SAAeghB,GAAkB,GAAD,gCAqBtC,wDArBM,WAAiClhB,GAGvC,iGACwBR,IAAMmB,IAC3BjB,GAAc,8BACdM,EACA,CACEL,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAO,CACT,IACCG,OAAM,SAAC6H,GACN,OAAO,CACT,IAAG,KAAD,EAdU,OAAR5H,EAAQ,yBAgBPA,GAAQ,4CAChB,sBAoBA,wDAlBM,8GACkBV,IAAMC,IAC3BC,GAAc,+BACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GAEL,OADAoC,QAAQC,IAAIrC,GACLA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAdU,OAAR5H,EAAQ,yBAgBPA,GAAQ,4CAChB,sBAmBA,wDAlBM,WAAsCoK,GAAU,iGAC9B9K,IAAMC,IAC3BC,GAAW,4CAAwC4K,GACnD,CACE3K,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GAEL,OADAoC,QAAQC,IAAIrC,GACLA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAdU,OAAR5H,EAAQ,yBAgBPA,GAAQ,4CAChB,sBAoBA,wDAlBM,8GACkBV,IAAMC,IAC3BC,GAAc,oCACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GAEL,OADAoC,QAAQC,IAAIrC,GACLA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAdU,OAAR5H,EAAQ,yBAgBPA,GAAQ,4CAChB,sBAEM,SAAeihB,GAAkB,GAAD,gCAsBtC,wDAtBM,WAAiC7W,GAAU,iGACzB9K,IAAMiB,OAC3Bf,GAAc,+BAAiC4K,EAC/C,CACE3K,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAO,CACT,IACCG,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,4DACTtD,OAAQ,WAEH,CACT,IAAG,KAAD,EAlBU,OAAR1B,EAAQ,yBAoBPA,GAAQ,4CAChB,sBAEM,SAAekhB,GAAkB,EAAD,mCAuBtC,wDAvBM,WAAiC9W,EAAY+F,GAAc,iGACzC7Q,IAAMmB,IAC3BjB,GAAc,+BAAiC4K,EAAK,IAAM+F,EAC1D,CAAC,EACD,CACE1Q,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAO,CACT,IACCG,OAAM,SAAC6H,GAMN,OALA9C,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,4DACTtD,OAAQ,WAEH,CACT,IAAG,KAAD,EAnBU,OAAR1B,EAAQ,yBAqBPA,GAAQ,4CAChB,sBAEM,SAAemhB,GAAkB,EAAD,mCA4BtC,wDA5BM,WAAiC/W,EAAY+F,GAAc,iGACzC7Q,IAAMmB,IAAI,GAAD,OAC3BjB,GAAW,+BACd,CACE4K,KACA+F,UAEF,CACE1Q,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GAEL,OADAoC,QAAQC,IAAIrC,GACLA,CACT,IACCG,OAAM,SAAC6H,GAON,OANA5F,QAAQC,IAAI2F,GACZ9C,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,4DACTtD,OAAQ,WAEH,CACT,IAAG,KAAD,EAxBU,OAAR1B,EAAQ,yBA0BPA,GAAQ,4CAChB,sBAEM,SAAeohB,KAAqB,gCAiB1C,wDAjBM,8GACkB9hB,IAAMC,IAC3BC,GAAc,6CACd,CACEC,QAAS,CACPC,cAAe,UAAY9B,OAI9B+B,MAAK,SAACC,GACL,OAAOA,EAAIE,IACb,IACCC,OAAM,SAAC6H,GACN,OAAO,IACT,IAAG,KAAD,EAbU,OAAR5H,EAAQ,yBAePA,GAAQ,4CAChB,sB,uBC1TOsD,GAAWE,IAAXF,OACRpF,IAAMC,OAAO,MAEb,ICJK8N,GDIC/J,GAAS,CACb4L,SAAU,CAAE3H,KAAM,GAClB4H,WAAY,CAAE5H,KAAM,KAEhBkb,GAAa,CACjBtT,WAAY,CAAE3H,OAAQ,EAAGD,KAAM,KAG3Bmb,GAAmB,kDAIvB,WAAYjQ,GAAa,IAAD,IAGiB,OAHjB,qBACtB,cAAMA,IAJRnF,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAChEsgB,QAAUC,sBAA0B,EAQpC9d,MAAQ,CACN8C,SAAS,EACTib,aAAc,KACdC,cAAe,GACf5hB,KAAM,GACNgV,QAAS,CAAC,KACV,EAmCFlH,SAAW,SAAC1N,GAAiB,IAAD,EAC1B8B,QAAQC,IAAI,WAAY/B,GD3ErB,SAAoC,EAAD,mCC4EtCyhB,CAAqB,2BAAKzhB,GAAM,IAAEwb,aAAwB,QAAZ,EAAE,EAAKhY,aAAK,aAAV,EAAY+d,aAAaviB,WAAY,EAAKqb,SAAS5a,MAAK,WAAO,IAAD,EACxF,QAApB,IAAK4hB,QAAQK,eAAO,OAApB,EAAsB9f,aACxB,GACF,EAAE,EAEF+f,eAAiB,SAACC,GAChB9f,QAAQC,IAAI,UAAW6f,EACzB,EAAE,EACFC,UAAY,SAACjiB,GACXkC,QAAQC,IAAI,WACZ,IAAM+U,EAAYgL,KAAWC,aAAaniB,GACpC4W,EAAWsL,KAAWE,WAC5BF,KAAWG,kBAAkBzL,EAAUM,EAAW,UAClDgL,KAAetL,EAAU,iBAC3B,EA7DE,EAAK0L,eAAiB,EAAKA,eAAe3M,KAAK,iBAC/C,EAAK8E,QAAU,EAAKA,QAAQ9E,KAAK,iBAAM,CACzC,CA0IC,OA1IA,8CAUD,WACE5P,KAAK0U,SACP,GAAC,qBAED,WAAW,IAAD,QDmBL,WAAiC,iCClBpC8H,GAAqB1iB,MAAK,SAACC,GACzB,EAAK8F,SAAS,CAAE5F,KAAMF,IACtBoC,QAAQC,IAAIrC,GACZ,IAAIkc,EAAM,CAAC,CAAC,kBAAmB,kBAAW,UAAW,aAAQ,UAE7Dlc,EAAImc,SAAQ,SAACtX,GAAW,OAAKqX,EAAIE,KAAK,CAAChd,EAAgByF,EAAOiX,cAAejX,EAAO0Q,SAAU1Q,EAAOuE,cAAevE,EAAOuR,YAAavR,EAAO5E,QAAQ,IACvJ,EAAK6F,SAAS,CAAEoP,QAASgH,EAAKhc,KAAMF,EAAK4G,SAAS,GACpD,IjB+LG,WAA+B,gCiB9LlC8b,GAAmB3iB,MAAK,SAACC,GACvB,EAAK8F,SAAS,CAAEgc,cAAe9hB,GACjC,GACF,GAAC,4BAED,SAAeqD,GAAe,IAAD,EACrBsf,EAA8B,QAAlB,EAAG1c,KAAKnC,MAAM5D,YAAI,aAAf,EAAiBuL,QAAO,SAACvL,GAAI,OAAKmD,EAAMuf,OAAO1iB,EAAK4b,aAAc,MAAM,IAC7F,OACE,qBAAI/W,MAAO,CAAEmM,OAAQ,EAAG0C,QAAS,GAAK3Q,UAAU,SAAQ,SACzC,OAAZ0f,QAAY,IAAZA,OAAY,EAAZA,EAAcvf,KAAI,SAACyf,GAAI,OACtB,8BACE,eAAC,KAAI,CAAC9d,MAAO,CAAE+d,SAAU,GAAKxN,UAAQ,WACnCuN,EAAKzZ,iBAFDyZ,EAAKzZ,cAIT,KAIb,GAAC,oBAmBD,WAAU,IAAD,OACP,EAAwCnD,KAAKnC,MAArC+d,EAAY,EAAZA,aAAcC,EAAa,EAAbA,cACd9T,EAA6B/H,KAA7B+H,SAAUiU,EAAmBhc,KAAnBgc,eAElB,OACE,qCACE,gBAAC,IAAG,WACF,eAAC,IAAG,CAACxB,GAAI,GAAIha,GAAI,GAAG,SACjBob,EACC,uCACE,eAAC,KAAI,CAAC9c,MAAO,CAAEmM,OAAQ,MAAO,SAC5B,gBAAC,KAAI,2BAAK5O,IAAM,IAAEC,KAAK,QAAQsR,IAAK5N,KAAK0b,QAAS3T,SAAUA,EAAUiU,eAAgBA,EAAe,UACnG,eAAC,KAAK,CAACpE,MAAO,EAAE,mBAAiB,OAAZgE,QAAY,IAAZA,OAAY,EAAZA,EAAcpD,QAAQ,OAAOlgB,OAAO,MAAMe,OAAO,eAAc,iCAEpF,eAAC,KAAKqD,KAAI,CAACC,MAAM,0BAAuBL,KAAK,cAAcM,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,yCAAoC,SAChI,eAAC,IAAM,CAACqP,KAAK,WAAWuH,iBAAiB,WAAW/K,aAAc,SAACgL,EAAO9K,GAAM,OAAW,OAANA,QAAM,IAANA,OAAM,EAANA,EAAQ2C,MAAMoI,SAASvQ,cAAcyF,QAAQ6K,EAAMtQ,iBAAkB,CAAC,EAAC,SAEpI,OAAbwY,QAAa,IAAbA,OAAa,EAAbA,EAAe1e,KAAI,SAACwF,GACzB,OAAO,eAAC,GAAM,CAACvF,MAAOuF,EAAM4B,GAAG,SAAE5B,EAAM2M,SAAW,IAAM3M,EAAMQ,eAChE,QAKN,eAAC,KAAKzG,KAAI,2BAAK8e,IAAU,aACE,SAAxBxb,KAAKwL,MAAMrT,KAAK+E,MACf,eAAC,IAAM,CAACH,KAAK,UAAUqN,SAAS,SAAQ,2BAOhD,eAAC,KAAI,CAACtL,MAAO,CAAEmM,OAAQ,MAAO,SAC1B,WAAO,IAAD,EACF6R,EAAuB,QAAlB,EAAG,EAAKjf,MAAM5D,YAAI,aAAf,EAAiBuL,QAAO,SAACvL,GAAI,aAA4B,QAA5B,EAAK,EAAK4D,MAAM+d,oBAAY,aAAvB,EAAyBe,OAAO1iB,EAAK4b,aAAc,MAAM,IACvG,OACE,qBAAI/W,MAAO,CAAEmM,OAAQ,EAAG0C,QAAS,GAAK3Q,UAAU,SAAQ,SAChD,OAAL8f,QAAK,IAALA,OAAK,EAALA,EAAO3f,KAAI,SAACyf,GAAI,OACf,8BACE,uBAAK9d,MAAO,CAAEC,MAAO,OAAQwI,QAAS,OAAQqF,WAAY,SAAUpF,eAAgB,gBAAiByD,OAAQ,EAAG0C,QAAS,EAAGoP,aAAc,eAAgB,UACxJ,eAAC,KAAI,CAAC1N,UAAQ,WAAEuN,EAAKtN,SAAW,MAAQsN,EAAKzZ,gBACpB,SAAxB,EAAKqI,MAAMrT,KAAK+E,MACf,eAAC,IAAU,CACTtB,MAAM,yDACNyD,UAAW,YDzGtC,SAAoC,EAAD,4BC0GN2d,CAAqBJ,EAAKjZ,WAAY,EAAK+Q,QAC7C,EACA7Y,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACmhB,MAAM,SAASxc,KAAM,eAACyc,GAAA,EAAc,IAAK1d,QAAM,UAZtDod,EAAKzZ,cAgBT,KAIb,CAzBE,QA4BJ,OAEN,gBAAC,IAAG,CAACqX,GAAI,GAAIha,GAAI,GAAG,UAClB,eAAC,IAAM,CAACG,QAASX,KAAKnC,MAAM8C,QAAS7B,MAAO,CAAE8V,MAAO,SAAWlV,QAAS,kBAAI,EAAKwc,UAAU,EAAKre,MAAMoR,QAAQ,EAAC,0BAGhH,eAAC,KAAQ,CACP9F,SAAU,SAACtG,GACT,EAAKhD,SAAS,CAAE+b,aAAcvjB,IAAMwK,IACtC,EACA0Z,eAAgBvc,KAAKuc,wBAMjC,KAAC,EAlJsB,CAASvI,IAAM/S,WAyJzBgT,gBAJS,SAACpW,EAAgCqW,GAAa,MAAM,CAC1E/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBwH,IC/JxC,SAAS0B,GAAa3R,GACpB,IAAQ7H,EAAqB6H,EAArB7H,WAAY5G,EAASyO,EAATzO,KACpB,EAAwBuJ,mBAAU,MAAuB,mBAAlDrM,EAAI,KAAEwR,EAAO,KACpB,EAAwCnF,mBAAS,MAAK,mBAAjCoF,GAAF,KAAiB,MAEvBC,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAiD9D,OA/CAkP,qBAAU,YAIV,WACE,OAAQtK,GACN,KAAKqJ,GAAUwF,IACbhI,GAAcD,GAAY7J,MAAK,SAACC,GAC1BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAkCC,GAAgC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAExJ,IACA,MACF,KAAK4H,GAAU2F,IACblI,GAAcF,GAAY7J,MAAK,SAACC,GAC1BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAkCC,GAAgC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAExJ,IACA,MACF,KAAK4H,GAAU4F,QAEblI,GAAkBH,GAAY7J,MAAK,SAACC,GAC9BA,EAAIkG,OAAS,IACfwL,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAkCC,GAAgC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAExJ,IAGN,CA/BEyN,EACF,GAAG,CAACtI,IA6CG1J,EACL,eAAC,KAAI,CAAC6E,MAAO,CAAEoN,aAAc,GAAKtQ,MAAOmB,GAAQqJ,GAAUwF,IAAM,sCAAsB7O,GAAQqJ,GAAU4F,QAAU,4CAAuB,sCAAoB,SAC5J,eAAC,KAAQ,CAACG,KAAK,OAAOrN,MAAO,CAAEC,MAAO,QAAS,SAdtC,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,SAACiP,GAChB,OACE,gBAAC,KAAS1P,KAAI,CAAiDC,MAAOxD,EAAgBiT,EAASN,kBAAkB,UAC/G,6BACE,6BAAIxS,EAAqB8S,EAASC,cAEpC,oDAAiBD,EAAS9P,KAAI,YAAI8P,EAAS1N,aAJzB,cAAgB0N,EAASN,iBAOjD,QASE,IACN,EAnEc,SAAT1F,OAAS,aAATA,IAAS,aAATA,IAAS,sBAATA,QAAS,KA6JCgX,OAxFf,SAAqB5R,GACnB,IAAQe,EAAgEf,EAAhEe,UAAWC,EAAqDhB,EAArDgB,aAAc7I,EAAuC6H,EAAvC7H,WAAYR,EAA2BqI,EAA3BrI,cAAcka,EAAa7R,EAAb6R,SAC3D,EAAwB/W,mBAAU,MAAuB,mBAAlDrM,EAAI,KAAEwR,EAAO,KACpB,EAAwCnF,mBAAS,MAAK,mBAA/CmG,EAAY,KAAEf,EAAe,KAC9BvT,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAK9D,SAAS8T,IAEPvI,GAAgBC,GAAY7J,MAAK,SAACC,GAChCoC,QAAQC,IAAI,mBACRrC,IACF0R,EAAQ1R,GACR2R,EAAmB,OAAH3R,QAAG,IAAHA,OAAG,EAAHA,EAAK8R,QAAO,SAACtN,EAAkCC,GAAgC,OAAMD,EAAEuN,iBAAmBtN,EAAEsN,iBAAmBvN,EAAIC,CAAC,KAExJ,GACF,CAaA,OAzBA6I,qBAAU,WACR4E,GACF,GAAG,CAACtI,IAwBF,eAAC,KAAK,CAAC/H,MAAOuH,EAAgB,kEAAoC7H,QAASiR,EAAWG,OAAQ,KAAMlR,SAAU,kBAAMgR,GAAa,EAAM,EAAC,SACtI,sBAAK1N,MAAO,CAAEyI,QAAS,OAAQxI,MAAO,OAAQ4N,aAAc,SAAUC,WAAY,SAAUpF,eAAgB,UAAW,SACpHvN,EACC,uBAAK6E,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAU9N,MAAO,QAAS,UAEtE,eAACoe,GAAY,CAACxZ,WAAYA,EAAY5G,KAAMsgB,IAC5C,eAAC,KAAI,CAACzhB,MAAM,yCAAuBkD,MAAO,CAAEoN,aAAc,GAAI,SAC5D,eAAC,KAAQ,CAACC,KAAK,OAAOrN,MAAO,CAAEC,MAAO,QAAS,SAnB9C,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,SAACiP,GAChB,OACE,gBAAC,KAAS1P,KAAI,CAAiDC,MAAOxD,EAAgBiT,EAASN,kBAAkB,UAC/G,6BACE,6BAAIxS,EAAqB8S,EAASC,cAEpC,oDAAiBD,EAAS9P,KAAI,YAAI8P,EAAS1N,aAJzB,cAAgB0N,EAASN,iBAOjD,QAcuB,UAAd3T,EAAK+E,MAA+C,kBAAf,OAAZuP,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,WAA0D,WAAf,OAAZI,QAAY,IAAZA,OAAY,EAAZA,EAAcJ,UACnF,eAAC,IAAU,CACTzQ,MAAM,yFACNyD,UAAW,WACT,OAAQge,GACN,KAAKjX,GAAUwF,KlB0f5B,SAAyB,GAAD,iCkBzfT0R,CAAU3Z,GAAY7J,MAAK,SAACC,GACtBA,GACFkS,GAEJ,IACA,MACF,KAAK7F,GAAU2F,KlBwd5B,SAAyB,GAAD,iCkBvdTwR,CAAU5Z,GAAY7J,MAAK,SAACC,GACtBA,GACFkS,GAEJ,IACA,MACF,KAAK7F,GAAU4F,SlBugB5B,SAA6B,GAAD,iCkBtgBbwR,CAAc7Z,GAAY7J,MAAK,SAACC,GAC1BA,GACFkS,GAEJ,IAGN,EACApQ,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACgD,MAAO,CAAEoN,aAAc,IAAMnP,KAAK,UAAS,mDAInD,QAGN,eAAC,KAAI,CAACrE,KAAK,aAKrB,EC/JM4P,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAAM,IAEdmlB,GAA4B,mKA6M/B,OA7M+B,oCAChCpX,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,IACVC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GAC/E,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAAgB,yBAG7CzR,MAAO,MACPyC,UAAW,OACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,GACvE,EAAKsQ,qBAAqB,SAAO,IACpC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEsI,MAAMpI,cAAcD,EAAEqI,MAAM,GACzE,EAAKwG,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4R,YAAY1R,cAAcD,EAAE2R,YAAY,GACrF,EAAK9C,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,WACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEuI,YAAYrI,cAAcD,EAAEsI,YAAY,GACrF,EAAKuG,qBAAqB,gBAAc,IAC3C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,kBACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEuI,YAAYrI,cAAcD,EAAEsI,YAAY,GACrF,EAAKuG,qBAAqB,gBAAc,IAC3C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,iBAGrDoD,MAAO,cACPyC,UAAW,YACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEwE,UAAYvE,EAAEuE,SAAS,GACpE,EAAKsK,qBAAqB,cAAY,aAGzCzR,MAAO,QACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE8N,SAAS5N,cAAcD,EAAE6N,SAAS,GAC/E,EAAKgB,qBAAqB,aAAW,aAGxCzR,MAAO,6BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEmf,kBAAkBlO,OAASlH,GAAO9J,EAAEkf,kBAAkBlO,MAAM,GAChH,EAAKnC,qBAAqB,qBAE/B,CACEzR,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACP,EAAKsI,YAAY,KAAOrF,EAAMQ,cAChC,EAAE,iCAIF,MACD,GAGT,CACExE,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACPvD,QAAQC,IAAI,MAAMuG,EAAMgB,YACxB,EAAK9D,SAAS,CACVuQ,qBAAqB,EACrBC,eAAgB1N,EAAMgB,WACtBuM,cAAe,CAAE/M,cAAeR,EAAMQ,cAAe2B,SAAUnC,EAAM4B,KAG3E,EAAE,6CAIF,MACD,KAKX,EAkBFkL,kBAAiB,gCAAG,wFAClBwL,KAA4BnhB,MAAK,SAACG,GAAU,IAAD,IACzCA,EAAW,QAAP,EAAGA,SAAI,aAAJ,EAAMkD,KAAI,SAAClD,GAChB,OAAO,2BACFA,GAAI,IACPoS,SAAU/S,EAAqBW,EAAKoS,UACpCqR,iBAAkBvkB,EAAgBc,EAAKyjB,mBAE3C,IAEA,EAAK7d,SAAS,CAAE5F,SAEhB,IAAIgc,EAAM,CAAC,CAAC,kBAAc,UAAW,MAAO,QAAS,aAAQ,WAAY,kBAAc,eAAgB,QAAS,+BAE5G,QAAJ,EAAAhc,SAAI,OAAJ,EAAMic,SAAQ,SAACtX,GAAM,OAAKqX,EAAIE,KAAK,CAACvX,EAAOqI,SAAUrI,EAAOuE,cAAevE,EAAO7B,KAAM6B,EAAOiI,MAAOjI,EAAOuR,YAAavR,EAAOkI,YAAalI,EAAOqL,cAAerL,EAAOmE,UAAWnE,EAAOyN,SAAUzN,EAAO8e,kBAAkB,IAEhO,EAAK7d,SAAS,CAAEoP,QAASgH,GAC3B,IAAG,2CACJ,EAyBA,OAzBA,wCAlCD,SAAY7Y,GACV,IAAImN,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,KAAM,CAAC5N,MAAOA,EAAO0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAASZ,SAAS,QACxF,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE7N,QAGpB,OAAXmN,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,oBAwBD,WAAU,IAAD,SACDzN,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,eAAC,IAAK,CAAC+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAAE7L,KAAK,QAAQiI,QAASX,KAAKnC,MAAM8C,QAASwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAAkBjV,QAAS4B,KAAKnC,MAAMO,QAAS0C,WAAYjD,EAAM5D,OACjM,eAAC,IAAM,CAAC6E,MAAO,CAAE8V,MAAO,QAASzH,YAAa,IAAMpQ,KAAK,UAAS,SAChE,eAAC,WAAO,CAAC4gB,UAAU,IAAI1jB,KAAM4D,EAAMoR,QAAQ,4BAI5CjP,KAAKnC,MAAMuS,oBAAsB,eAAC,GAAW,CAE9C7D,UAAWvM,KAAKnC,MAAMuS,oBACtBzM,WAAY3D,KAAKnC,MAAMwS,eACvBlN,cAAuC,QAA1B,EAAEnD,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,cACzCka,SAAY,EACZ7Q,aAAc,SAAClR,GAAO,OAAK,EAAKuE,SAAS,CAAEuQ,oBAAqB9U,GAAU,GALrE0E,KAAKnC,MAAMwS,gBAKiE,OAIvF,KAAC,EAtO+B,CAAS2D,IAAM/S,WA6OlCgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBwJ,IC/OlCnV,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAAM,IAEdmlB,GAA4B,mKAsM/B,OAtM+B,oCAChCpX,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,IACVC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GAC/E,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAAgB,yBAG7CzR,MAAO,MACPyC,UAAW,OACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,GACvE,EAAKsQ,qBAAqB,SAAO,IACpC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEsI,MAAMpI,cAAcD,EAAEqI,MAAM,GACzE,EAAKwG,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4R,YAAY1R,cAAcD,EAAE2R,YAAY,GACrF,EAAK9C,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,WACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEwI,SAAStI,cAAcD,EAAEuI,SAAS,GAC/E,EAAKsG,qBAAqB,aAAW,IACxC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,oBACPyC,UAAW,aACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEsU,WAAWpU,cAAcD,EAAEqU,WAAW,GACnF,EAAKxF,qBAAqB,eAAa,IAC1C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,iBAGrDoD,MAAO,QACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE8N,SAAS5N,cAAcD,EAAE6N,SAAS,GAC/E,EAAKgB,qBAAqB,aAAW,aAGxCzR,MAAO,6BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEmf,kBAAkBlO,OAASlH,GAAO9J,EAAEkf,kBAAkBlO,MAAM,GAChH,EAAKnC,qBAAqB,qBAE/B,CACEzR,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACP,EAAKsI,YAAY,KAAOrF,EAAMQ,cAChC,EAAE,iCAIF,MACD,GAGT,CACExE,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACPvD,QAAQC,IAAI,MAAMuG,EAAMgB,YACxB,EAAK9D,SAAS,CACVuQ,qBAAqB,EACrBC,eAAgB1N,EAAMgB,WACtBuM,cAAe,CAAE/M,cAAeR,EAAMQ,cAAe2B,SAAUnC,EAAM4B,KAG3E,EAAE,6CAIF,MACD,KAIX,EAkBFkL,kBAAiB,gCAAG,wFAClByL,KAAwBphB,MAAK,SAACG,GAAU,IAAD,IACrCA,EAAW,QAAP,EAAGA,SAAI,aAAJ,EAAMkD,KAAI,SAAClD,GAChB,OAAO,2BACFA,GAAI,IACPoS,SAAU/S,EAAqBW,EAAKoS,UACpCqR,iBAAkBvkB,EAAgBc,EAAKyjB,mBAE3C,IAEA,EAAK7d,SAAS,CAAE5F,SAEhB,IAAIgc,EAAM,CAAC,CAAC,kBAAc,UAAW,MAAO,QAAS,aAAQ,WAAY,oBAAgB,QAAS,+BAE9F,QAAJ,EAAAhc,SAAI,OAAJ,EAAMic,SAAQ,SAACtX,GAAM,OAAKqX,EAAIE,KAAK,CAACvX,EAAOqI,SAAUrI,EAAOuE,cAAevE,EAAO7B,KAAM6B,EAAOiI,MAAOjI,EAAOuR,YAAavR,EAAOmI,SAAUnI,EAAOiU,WAAYjU,EAAOyN,SAAUzN,EAAO8e,kBAAkB,IAExM,EAAK7d,SAAS,CAAEoP,QAASgH,GAC3B,IAAG,2CACJ,EAwBA,OAxBA,wCAlCD,SAAY7Y,EAAekN,GACzB,IAAIC,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,KAAM,CAAC5N,MAAOA,EAAO0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAASZ,SAAS,QACxF,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE7N,QAGpB,OAAXmN,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,oBAwBD,WAAU,IAAD,SACDzN,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,eAAC,IAAK,CAAC+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAAE7L,KAAK,QAAQiI,QAASX,KAAKnC,MAAM8C,QAASwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAAkBjV,QAAS4B,KAAKnC,MAAMO,QAAS0C,WAAYjD,EAAM5D,OACjM,eAAC,IAAM,CAAC6E,MAAO,CAAE8V,MAAO,QAASzH,YAAa,IAAMpQ,KAAK,UAAS,SAChE,eAAC,WAAO,CAAC4gB,UAAU,IAAI1jB,KAAM4D,EAAMoR,QAAQ,4BAI5CjP,KAAKnC,MAAMuS,oBAAsB,eAAC,GAAW,CAE9C7D,UAAWvM,KAAKnC,MAAMuS,oBACtBzM,WAAY3D,KAAKnC,MAAMwS,eACvBlN,cAAuC,QAA1B,EAAEnD,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,cACzCka,SAAY,EACZ7Q,aAAc,SAAClR,GAAO,OAAK,EAAKuE,SAAS,CAAEuQ,oBAAqB9U,GAAU,GALrE0E,KAAKnC,MAAMwS,gBAKiE,OAGvF,KAAC,EA9N+B,CAAS2D,IAAM/S,WAqOlCgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBwJ,ICzOlCnV,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAAM,I,GAEdmlB,GAA4B,mKAkN/B,OAlN+B,oCAChCpX,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNoR,QAAS,CAAC,IACVC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GAC/E,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GACzF,EAAKkK,qBAAqB,kBAAgB,yBAG7CzR,MAAO,MACPyC,UAAW,OACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,GACvE,EAAKsQ,qBAAqB,SAAO,IACpC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEsI,MAAMpI,cAAcD,EAAEqI,MAAM,GACzE,EAAKwG,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,QACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4R,YAAY1R,cAAcD,EAAE2R,YAAY,GACrF,EAAK9C,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,WACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEuI,YAAYrI,cAAcD,EAAEsI,YAAY,GACrF,EAAKuG,qBAAqB,gBAAc,IAC3C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,eACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEwL,SAAStL,cAAcD,EAAEuL,SAAS,GAC/E,EAAKsD,qBAAqB,aAAW,IACxC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,iBAGrDoD,MAAO,uBACPyC,UAAW,aACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEuL,WAAatL,EAAEsL,UAAU,GACtE,EAAKuD,qBAAqB,eAAa,aAG1CzR,MAAO,YACPyC,UAAW,YACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEoL,UAAYnL,EAAEmL,SAAS,GACpE,EAAK0D,qBAAqB,cAAY,aAGzCzR,MAAO,QACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE8N,SAAS5N,cAAcD,EAAE6N,SAAS,GAC/E,EAAKgB,qBAAqB,aAAW,aAGxCzR,MAAO,6BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEmf,kBAAkBlO,OAASlH,GAAO9J,EAAEkf,kBAAkBlO,MAAM,GAChH,EAAKnC,qBAAqB,qBAE/B,CACEzR,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACP,EAAKsI,YAAY,KAAOrF,EAAMQ,cAChC,EAAE,iCAIF,MACD,GAGT,CACExE,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,8BAC2B,SAAxB,EAAK6I,MAAMrT,KAAK+E,KACf,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UACL2C,QAAS,WACPvD,QAAQC,IAAI,MAAMuG,EAAMgB,YACxB,EAAK9D,SAAS,CACVuQ,qBAAqB,EACrBC,eAAgB1N,EAAMgB,WACtBuM,cAAe,CAAE/M,cAAeR,EAAMQ,cAAe2B,SAAUnC,EAAM4B,KAG3E,EAAE,6CAIF,MACD,KAIX,EAkBFkL,kBAAiB,gCAAG,wFAClB8L,KAAwBzhB,MAAK,SAACG,GAAU,IAAD,IACrCA,EAAW,QAAP,EAAGA,SAAI,aAAJ,EAAMkD,KAAI,SAAClD,GAChB,OAAO,2BACFA,GAAI,IACPoS,SAAU/S,EAAqBW,EAAKoS,UACpCqR,iBAAkBvkB,EAAgBc,EAAKyjB,mBAE3C,IAEA,EAAK7d,SAAS,CAAE5F,SAEhB,IAAIgc,EAAM,CAAC,CAAC,kBAAc,UAAW,MAAO,QAAS,aAAQ,WAAY,eAAgB,uBAAgB,YAAa,QAAS,+BAE3H,QAAJ,EAAAhc,SAAI,OAAJ,EAAMic,SAAQ,SAACtX,GAAM,OAAKqX,EAAIE,KAAK,CAACvX,EAAOqI,SAAUrI,EAAOuE,cAAevE,EAAO7B,KAAM6B,EAAOiI,MAAOjI,EAAOuR,YAAavR,EAAOkI,YAAalI,EAAOmL,SAAUnL,EAAOkL,WAAYlL,EAAO+K,UAAW/K,EAAOyN,SAAUzN,EAAO8e,kBAAkB,IAE9O,EAAK7d,SAAS,CAAEoP,QAASgH,GAC3B,IAAG,2CACJ,EAwBA,OAxBA,wCAlCD,SAAY7Y,EAAekN,GACzB,IAAIC,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,KAAM,CAAC5N,MAAOA,EAAO0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAASZ,SAAS,QACxF,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE7N,QAGpB,OAAXmN,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,oBAwBD,WAAU,IAAD,SACDzN,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,eAAC,IAAK,CAAC+C,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAAE7L,KAAK,QAAQiI,QAASX,KAAKnC,MAAM8C,QAASwS,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAAkBjV,QAAS4B,KAAKnC,MAAMO,QAAS0C,WAAYjD,EAAM5D,OACjM,eAAC,IAAM,CAAC6E,MAAO,CAAE8V,MAAO,QAASzH,YAAa,IAAMpQ,KAAK,UAAS,SAChE,eAAC,WAAO,CAAC4gB,UAAU,IAAI1jB,KAAM4D,EAAMoR,QAAQ,4BAI5CjP,KAAKnC,MAAMuS,oBAAsB,eAAC,GAAW,CAE9C7D,UAAWvM,KAAKnC,MAAMuS,oBACtBzM,WAAY3D,KAAKnC,MAAMwS,eACvBlN,cAAuC,QAA1B,EAAEnD,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,cACzCka,SAAY,EACZ7Q,aAAc,SAAClR,GAAO,OAAK,EAAKuE,SAAS,CAAEuQ,oBAAqB9U,GAAU,GALrE0E,KAAKnC,MAAMwS,gBAKiE,OAGvF,KAAC,EA1O+B,CAAS2D,IAAM/S,WAiPlCgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBwJ,IChPlCziB,GAAyBC,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAoD7DwiB,I,GAAAA,GAlDf,SAA4BpS,GAC1B,IAAQe,EAAqCf,EAArCe,UAAWC,EAA0BhB,EAA1BgB,aAAcqR,EAAYrS,EAAZqS,QACjC,EAAwBvX,mBAAU,MAAuB,mBAAlDrM,EAAI,KAAEwR,EAAO,KA6BpB,OA3BaE,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAE9DkP,qBAAU,YtBsYL,SAAqC,GAAD,iCsBjYvCyW,CAAsBD,GAAS/jB,MAAK,SAACC,GAC/BA,GACF0R,EAAQ1R,EAEZ,GAPF,GAAG,CAAC8jB,IAwBF,eAAC,KAAK,CAACjiB,MAAOiiB,EAAU,2DAAqCviB,QAASiR,EAAWG,OAAQ,KAAMlR,SAAU,kBAAMgR,GAAa,EAAM,EAAC,SACjI,sBAAK1N,MAAO,CAAEyI,QAAS,OAAQxI,MAAO,OAAQ4N,aAAc,SAAUC,WAAY,SAAUpF,eAAgB,UAAW,SACpHvN,EACC,sBAAK6E,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAU9N,MAAO,QAAS,SACtE,eAAC,KAAI,CAACnD,MAAM,yCAAuBkD,MAAO,CAAEoN,aAAc,GAAI,SAC5D,eAAC,KAAQ,CAACC,KAAK,OAAOrN,MAAO,CAAEC,MAAO,QAAS,SAlB9C,OAAJ9E,QAAI,IAAJA,OAAI,EAAJA,EAAMkD,KAAI,SAACiP,GAAmB,IAAD,EAClC,OACE,gBAAC,KAAS1P,KAAI,CAAiDC,MAAOxD,EAAgBiT,EAASN,kBAAkB,UAC/G,6BACE,6BAA+D,QAA/D,EAAI9Q,GAAOkC,KAAK6gB,MAAK,SAAC7gB,GAAI,OAAKA,EAAKH,OAASqP,EAASC,QAAQ,WAAC,aAA3D,EAA6D7T,SAEnE,oDAAiB4T,EAAS9P,KAAI,YAAI8P,EAAS1N,aAJzB,cAAgB0N,EAASN,iBAOjD,UAeM,eAAC,KAAI,CAACpT,KAAK,aAKrB,ECpDMsC,GAAyBC,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MACtEkN,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAEd,I,GAAM0lB,GAAgB,SAACC,GACrB,MAA4B3X,mBAAS,GAAE,mBAAhCgE,EAAM,KAAE4T,EAAS,KAExB,OACE,iCACE,eAAC,KAAW,CAAC1V,IAAKyV,EAAME,UAAWrf,MAAO,CAAEC,MAAO,OAASrG,KAAK,QAAQmG,aAAc,EAAGuf,UAAW,SAAChhB,GAAK,qCAAuBA,EAAK,EAAIihB,OAAQ,SAACjhB,GAAK,OAAKA,EAAMyN,MAAM,yBAAmB,EAAE,EAAE7L,SAAU,SAAC5B,GAAK,OAAK8gB,EAAU9gB,EAAM,IACtO,eAAC,IAAM,CACLoC,QAAM,EACN9G,KAAK,QACLoG,MAAO,CAAE6T,WAAY,IACrBjT,QAAS,WACP2b,GAAkB4C,EAAM1Z,GAAI+F,GAAQxQ,MAAK,SAACC,GACpCA,GAAKkkB,EAAMK,UACjB,GACF,EAAE,sBAMV,EAEMC,GAAkB,mKA4PrB,OA5PqB,oCACtBlY,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBAAGC,EAAe,EAAfA,gBAAiBC,EAAY,EAAZA,aAAcC,EAAO,EAAPA,QAASC,EAAY,EAAZA,aAAY,OACrE,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OAAKsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EACxE2Q,aAAc,kBAAM,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EACvES,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CAACxK,KAAK,UAAU2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAAE3F,KAAK,QAAQoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAG7I,eAAC,IAAM,CAACzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAAEhV,KAAK,QAAQoG,MAAO,CAAEC,MAAO,IAAK,iCAGrF,EAERmP,WAAY,SAACC,GAAQ,OAAK,eAACC,GAAA,EAAc,CAACrR,KAAK,SAAS+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IAAe,EAC9GC,SAAU,SAACnR,EAAOwB,GAAM,OAAKA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EACrGsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACN2gB,aAAc,aACdC,aAAc,OACdxP,QAAS,CAAC,CAAC,cAAY,OAAQ,mBAAU,sBAAe,SAAU,aAAc,aAAc,0BAAwB,+BACtHtO,SAAS,EACT1G,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,cACPyC,UAAW,KACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEgG,GAAK/F,EAAE+F,EAAE,GACtD,EAAK8I,qBAAqB,OAAK,yBAGlCzR,MAAO,OACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEmgB,cAAcjgB,cAAcD,EAAEkgB,cAAc,GACzF,EAAKrR,qBAAqB,kBAAgB,IAC7C1O,OAAQ,SAACnG,EAAcyB,GAAI,OACzB,8BACG,EAAKuR,MAAMmT,SACV,eAAC,IAAM,CACLpW,SAAmC,UAAzB,EAAKiD,MAAMrT,KAAK+E,KAC1BE,MAAO5E,EACPE,KAAK,QACLoG,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAAC5B,GACT+d,GAAkB,CAAE5W,GAAItK,EAAKsK,GAAIqa,UAAWxhB,IAAStD,MAAK,SAACC,GACzD,EAAK8kB,UACP,GACF,EAAE,SAEA,WAAO,IAAD,EACN,OAAkB,QAAlB,EAAO7jB,GAAOkC,YAAI,aAAX,EAAaC,KAAI,SAACD,GACvB,OAAO,eAAC,IAAOO,OAAM,CAACL,MAAOF,EAAKH,KAAK,SAAEG,EAAK1E,MAChD,GACF,CAJE,KAOH,WAAO,IAAD,EACL,OAAkB,QAAlB,EAAOwC,GAAOkC,YAAI,aAAX,EAAaC,KAAI,SAACD,GACvB,GAAIA,EAAKH,MAAQvE,EAAM,OAAO,6BAAI0E,EAAK1E,MACzC,GACF,CAJC,IAMA,IACN,yBAGDoD,MAAO,mBACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE3C,MAAM6C,cAAcD,EAAE5C,MAAM,GACzE,EAAKyR,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,sBACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAE4R,YAAY1R,cAAcD,EAAE2R,YAAY,GACrF,EAAK9C,qBAAqB,gBAAc,IAC3C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKA,EAAOM,EAAWN,GAAQ,IAAQ,IAEnE,CACEoD,MAAO,SACPyC,UAAW,SACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKwE,SAASzE,EAAE+L,OAAOO,MAAM,KAAK,IAAM7H,SAASxE,EAAE8L,OAAOO,MAAM,KAAK,GAAG,GAEnH,CACEjP,MAAO,aACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEugB,iBAAmBtgB,EAAEsgB,gBAAgB,GACrF,yBAEAljB,MAAO,0BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEuN,kBAAkB0D,OAASlH,GAAO9J,EAAEsN,kBAAkB0D,MAAM,GAChH,EAAKnC,qBAAqB,qBAAmB,IAChD1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,6BAG1DoD,MAAO,6BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAK8J,GAAO/J,EAAEmf,kBAAkBlO,OAASlH,GAAO9J,EAAEkf,kBAAkBlO,MAAM,GAChH,EAAKnC,qBAAqB,qBAAmB,IAChD1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,IAG5D,CACEoD,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,OACxC,gCAC4B,SAAxB,EAAK6I,MAAMrT,KAAK+E,MAA2C,UAAxB,EAAKsO,MAAMrT,KAAK+E,MAA4C,UAAvByF,EAAM+b,eAA4C,2BAAf/b,EAAM/G,MAmB/G,KAlBF,eAAC,IAAU,CACTA,MACE,6FACmD,wBAAM,uCAG3DyD,UAAW,WACTic,GAAkB3Y,EAAM4B,GAAI,GAAGzK,MAAK,SAACC,GAC/BA,GAAK,EAAK8kB,UAChB,GACF,EACAhjB,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACgD,MAAO,CAAEmM,OAAQ,GAAK1L,OAAK,EAAC7G,KAAK,QAAQqE,KAAK,UAAS,uBAK1C,SAAxB,EAAKyO,MAAMrT,KAAK+E,KACf,eAAC,IAAU,CACTtB,MACE,yFAC+C,wBAAM,uCAGvDyD,UAAW,WACT+b,GAAkBzY,EAAM4B,IAAIzK,MAAK,SAACC,GAC5BA,GAAK,EAAK8kB,UAChB,GACF,EACAhjB,OAAO,OACPC,WAAW,QAAO,SAElB,eAAC,IAAM,CAACgD,MAAO,CAAEmM,OAAQ,GAAK1L,OAAK,EAACC,QAAM,EAAC9G,KAAK,QAAQqE,KAAK,UAAS,mBAItE,KACJ,eAAC,IAAM,CACLwC,OAAK,EACLT,MAAO,CAAEmM,OAAQ,GACjBvL,QAAS,WACP,EAAKG,SAAS,CAAEkf,gBAAgB,EAAMC,eAAgBrc,EAAM4B,IAC9D,EACA7L,KAAK,QACLqE,KAAK,UAAS,6CAIS,SAAxB,EAAKyO,MAAMrT,KAAK+E,MAA2C,SAAxB,EAAKsO,MAAMrT,KAAK+E,MAA4C,WAAzB,EAAKsO,MAAMrT,KAAK+E,MAA8C,eAAzB,EAAKsO,MAAMrT,KAAK+E,MAAiD,QAAxB,EAAKsO,MAAMrT,KAAK+E,MAA4C,GAA1ByF,EAAMmc,kBAAyB,EAAKtT,MAAMmT,SAC/N,eAAC,KAAO,CACNxf,QAAS,eAAC,GAAa,CAACgf,UAAWnb,SAASL,EAAM2H,OAAOO,MAAM,KAAK,IAAM,EAAGtG,GAAI5B,EAAM4B,GAAI+Z,SAAU,EAAKO,SAASjP,KAAK,mBACxHhU,MACE,+IAC2E,wBAAM,uCAGnF+Y,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC7V,MAAO,CAAEmM,OAAQ,GAAK1L,OAAK,EAACC,QAAM,EAAC9G,KAAK,QAAQqE,KAAK,UAAS,sBAItE,OACD,KAIX,EAMFkiB,0BAA4B,SAACC,EAAUC,GACrCxQ,YAAW,WACT,EAAKkQ,UACP,GAAG,IACL,EAAE,EAwBF3C,UAAY,SAACjiB,GACXkC,QAAQC,IAAI,WACZ,IAAM+U,EAAYgL,KAAWC,aAAaniB,GACpC4W,EAAWsL,KAAWE,WAC5BF,KAAWG,kBAAkBzL,EAAUM,EAAW,UAClDgL,KAAetL,EAAU,iBAC3B,EAAC,EA4FA,OA5FA,8CAtCD,WACE7Q,KAAK6e,UACP,GAAC,sBAQD,WAAY,IAAD,OACLF,EAAW3e,KAAKwL,MAAMmT,SAC1BxiB,QAAQC,IAAIuiB,GACZ3e,KAAKH,SAAS,CAAEc,SAAS,IACzB,IAAIsO,EAAU,CAAC,CAAC,cAAY,OAAQ,mBAAU,sBAAe,SAAU,aAAc,0BAAwB,+BAEzG0P,EP9FD,WAAoC,gCO+FrCS,GAAwBtlB,MAAK,SAACG,GACxB,OAAJA,QAAI,IAAJA,KAAMic,SAAQ,SAACmJ,GACbpQ,EAAQkH,KAAK,CAACkJ,EAAK9a,GAAI8a,EAAKX,cAAeW,EAAKzjB,MAAOyjB,EAAKlP,YAAakP,EAAK/U,OAAQ+U,EAAKP,iBAAkB3lB,EAAgBkmB,EAAKvT,kBAAmB3S,EAAgBkmB,EAAK3B,mBAC5K,IACA,EAAK7d,SAAS,CAAE5F,OAAMgV,UAAStO,SAAS,GAC1C,IP7DC,WAAsC,gCO+DvC2e,GAA0BxlB,MAAK,SAACG,GAC1B,OAAJA,QAAI,IAAJA,KAAMic,SAAQ,SAACmJ,GACbpQ,EAAQkH,KAAK,CAACkJ,EAAK9a,GAAI8a,EAAKX,cAAeW,EAAKzjB,MAAOyjB,EAAKlP,YAAakP,EAAK/U,OAAQ+U,EAAKP,iBAAkB3lB,EAAgBkmB,EAAKvT,kBAAmB3S,EAAgBkmB,EAAK3B,mBAC5K,IACA,EAAK7d,SAAS,CAAE5F,OAAMgV,UAAStO,SAAS,GAC1C,GAEJ,GAAC,oBAUD,WAAU,IAAD,OACD9C,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,+BACE,gBAAC,KAAI,WACH,uBAAKiB,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,MAAOpF,SAAU,SAAUyE,aAAc,GAAI,UACzF,eAAC,KAAK,CACJ3D,UAAWvI,KAAKwL,MAAMmT,SACtB3f,SAAU,SAACiK,GACT,EAAKpJ,SAAS,CAAE0f,cAAetW,EAAEC,OAAO9L,OAC1C,EACAA,MAAO4C,KAAKnC,MAAM0hB,cAClBzgB,MAAO,CAAEC,MAAO,KAChBrG,KAAK,QACLsQ,YAAY,WACZN,YAAY,8BAEd,eAAC,KAAK,CACJH,UAAWvI,KAAKwL,MAAMmT,SACtB3f,SAAU,SAACiK,GACT,EAAKpJ,SAAS,CAAE2f,oBAAqBvW,EAAEC,OAAO9L,OAChD,EACAA,MAAO4C,KAAKnC,MAAM2hB,oBAClB1gB,MAAO,CAAEC,MAAO,IAAK4T,WAAY,GAAIxF,YAAa,IAClDzU,KAAK,QACLsQ,YAAY,oBACZN,YAAY,cAEd,gBAAC,KAAMzL,MAAK,CAACwiB,SAAO,YAClB,eAAC,KAAW,CACVlX,UAAWvI,KAAKwL,MAAMmT,SACtB3f,SAAU,SAACiK,GACT,EAAKpJ,SAAS,CAAE6f,eAAgBzW,GAClC,EACA7L,MAAO4C,KAAKnC,MAAM6hB,eAClB5gB,MAAO,CAAEC,MAAO,KAChBgK,IAAK,EACLL,YAAY,IACZhQ,KAAK,UAEP,eAAC,KAAK,CACJ6P,UAAWvI,KAAKwL,MAAMmT,SACtB3f,SAAU,SAACiK,GACT,EAAKpJ,SAAS,CAAE4e,aAAcxV,EAAEC,OAAO9L,OACzC,EACAA,MAAO4C,KAAKnC,MAAM4gB,aAClB3f,MAAO,CAAEC,MAAO,KAChBF,aAAa,OACbnG,KAAK,aAGT,eAAC,IAAM,CACLoG,MAAO6gB,GAAOC,OACd7iB,KAAK,UACL4D,QAASX,KAAKnC,MAAMgiB,qBACpBtX,UAAW1K,EAAM6hB,iBAAmB7hB,EAAM0hB,gBAAkB1hB,EAAM2gB,aAClE9e,QAAS,WACP,EAAKG,SAAS,CAAEggB,sBAAsB,IPpOjD,SAAiC,GAAD,gCOqOrBC,CAAkB,CAAElkB,MAAOiC,EAAM0hB,cAAepP,YAAatS,EAAM2hB,oBAAqBO,MAAOliB,EAAM2gB,aAAclU,OAAQzM,EAAM6hB,eAAgBM,KAAMniB,EAAM4gB,eAAgB3kB,MAAK,SAACC,GAC7KA,IACF,EAAK8F,SAAS,CAAE0f,cAAe,KAAMC,oBAAqB,KAAME,eAAgB,KAAMjB,aAAc,SACpG,EAAKI,YAEP,EAAKhf,SAAS,CAAEggB,sBAAsB,GACxC,GACF,EAAE,kCAKN,eAAC,IAAM,CAAC/gB,MAAK,2BAAO6gB,GAAOC,QAAM,IAAEhL,MAAO,UAAWlV,QAAS,kBAAI,EAAKwc,UAAU,EAAKre,MAAMoR,QAAQ,EAAC,wCAMzG,eAAC,IAAK,CACNkE,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CzS,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAC/B7L,KAAK,QACLoG,MAAO,CAAEqJ,SAAU,SACnBxH,QAASX,KAAKnC,MAAM8C,QACpBvC,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,OAClB,eAAC,GAAkB,CAACsS,UAAWvM,KAAKnC,MAAMkhB,eAAgBlB,QAAS7d,KAAKnC,MAAMmhB,eAAgBxS,aAAc,SAACpP,GAAK,OAAK,EAAKyC,SAAS,CAAEkf,eAAgB3hB,GAAQ,MAGrK,KAAC,EAxVqB,CAAS4W,IAAM/S,WA2VjC0e,GAAS,CACbC,OAAQ,CACNjN,WAAY,KAQDsB,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBsK,ICvYlClY,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAiEjE6kB,I,GAAAA,GA/Df,SAA6BzU,GAC3B,SAASiJ,EAAejJ,GACtB,IAAQpO,EAAgBoO,EAAhBpO,MAAO5E,EAASgT,EAAThT,KACf,EAAwB8N,mBAAS,IAAG,mBAA7BrM,EAAI,KAAEwR,EAAO,KAEpBpE,qBAAU,YnBOP,SAA6B,GAAD,iCmBF7B6Y,CAAc9iB,GAAOtD,MAAK,SAACC,GACzBoC,QAAQC,IAAIrC,GACRA,GACF0R,EAAQ1R,EAEZ,GARF,GAAG,CAACqD,IAwBJ,OACE,eAAC,KAAI,CAAC0B,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,SACjE,eAAC,IAAK,CACJ0T,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,qCACE,6BAAIpD,KACH,EAELsI,WAAY7G,EACZmE,QAxBU,CACd,CACExC,MAAO,sBACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAET,CACEnD,MAAO,iBACPyC,UAAW,SACXU,MAAO,QAkBb,CAEA,OACE,qCACE,sBAAKD,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,SAEpEvG,GAAsB,UAC1ByO,MAAK,SAACvW,EAAGC,GAAC,OAAKwE,SAASxE,EAAEzB,MAAQiG,SAASzE,EAAExB,KAAK,IAClDI,KAAI,SAAC4F,GACJ,OAAO,eAAC0R,EAAc,CAACrX,MAAO4F,SAASD,EAAUhG,MAAOvE,KAAI,UAAKuK,EAAUhG,KAAI,kDACjF,OAKZ,EChEMsJ,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAwH/D+kB,I,GAAAA,GAtHjB,SAA+B3U,GA2G3B,OACE,qCACE,sBAAiB1M,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,SACzF,eAAC,KAAI,CAAC9N,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAQ7D,MAAM,GAAE,SA3GzEiU,OAAOC,KAAKzJ,IAAYlJ,KAAI,SAACuI,GAClC,IAAImP,EAAUxO,GAAWX,GACzB,MAAS,QAANA,EAgBP,SAAiC1K,EAAwC0K,GACvE,IAAMtH,EAAU,CACd,CACExC,MAAO,MACPyC,UAAW,OACXU,MAAO,IAET,CACEnD,MAAO,cACPyC,UAAW,OACXU,MAAO,IAET,CACEnD,MAAO,kBACPyC,UAAW,WACXU,MAAO,KAGL9E,EAAa,OAANe,QAAM,IAANA,OAAM,EAANA,EAAQ8Z,MAAK,SAACvW,EAAQC,GAAM,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,IAC1E,OACE,eAAC,KAAI,CAAa+B,MAAO,CAAEoN,aAAc,IAAK,SAC5C,eAAC,IAAK,CACJiH,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6DACA,eAAC,KAAO,CACNuD,QACE,gBAAC,KAAI,CACH9C,OAAO,WACP0L,SAAU,SAAC1N,GACToL,GAAU9M,OAAO+M,GAAMrL,EACzB,EAAE,UAEF,eAAC,KAAKqC,KAAI,CACRJ,KAAK,OACLM,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,uEAGbH,MAAM,MAAK,SAEX,eAAC,KAAK,MAER,eAAC,KAAKD,KAAI,CAACJ,KAAK,OAAOK,MAAM,cAAU,SACrC,eAAC,KAAK,MAER,eAAC,KAAKD,KAAI,CACRJ,KAAK,WACLK,MAAM,gBACNC,MAAO,CACL,CACEC,UAAU,EACVC,QAAS,0FAEX,SAEF,eAAC,KAAK,MAER,eAAC,KAAKJ,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,gCACL+Y,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAY7G,EACZmE,QAASA,EACTwC,OAAO,UA5DD,QAgEd,CAlGaoU,CADSH,EAC0BnP,GAUrC,IACT,OA2FW,UAOf,EChHIW,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MA4KjEglB,I,GAAAA,GArJf,SAAkC5U,GAChC,MAAe/P,KAAKC,UAAbC,EAAsB,iBAAlB,GAEX,SAAS0kB,EAAc7U,GACrB,IAAQpO,EAAgBoO,EAAhBpO,MAAO5E,EAASgT,EAAThT,KACf,EAAwB8N,mBAAS,IAAG,mBAA7BrM,EAAI,KAAEwR,EAAO,KACdtT,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAM9D,SAASuc,KrBsDN,SAAmD,GAAD,iCqBrDnD4L,CAAoCljB,GAAOtD,MAAK,SAACC,GAC3CA,GACF0R,EAAQ1R,EAEZ,GACF,CAVAsN,qBAAU,WACRqN,GACF,GAAG,CAACtX,IAUJ,IAAMgB,EAAU,CACd,CACExC,MAAO,QACPyC,UAAW,YACXM,OAAQ,SAACnG,GAAQ,aAAK,8BAA0D,QAA1D,EAAK6N,GAAiB,KAAE0X,MAAK,SAAC7gB,GAAI,OAAKA,EAAKH,OAASvE,CAAI,WAAC,aAArD,EAAuDA,MAAU,GAE9F,CACEoD,MAAO,qBACPmD,MAAO,cACPJ,OAAQ,SAACnG,EAAcmK,GAAU,OAC/B,8BACgB,SAAbxK,EAAK+E,KACJ,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvB1M,QAAM,EACNzC,KAAK,UACL2C,QAAS,YrB8DlB,SAAsD,GAAD,iCqB7D1C6gB,CAAuC5d,EAAM4B,IAAIzK,MAAK,SAACC,GACjDA,EACF2a,IAEAzV,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAGd,GACF,EAAE,iBAIF,MACD,IAKX,OACE,eAAC,KAAI,UACH,eAAC,IAAK,CACJsX,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6BAAIpD,IACJ,eAAC,KAAO,CACN2G,QACE,gBAAC,KAAI,CACHxD,KAAMA,EACNU,OAAO,WACP0L,SAAU,SAAC1N,IrBWxB,SAAmD,GAAD,iCqBVnCmmB,CAAoC,CAAEtjB,KAAME,EAAOqjB,UAAWpmB,EAAOomB,YAAa3mB,MAAK,SAACC,GAClFA,GACF2a,IACA/Y,EAAKM,eAELgD,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAEd,GACF,EAAE,UAEF,eAAC,KAAKa,KAAI,CACRJ,KAAK,YACLK,MAAM,QACNC,MAAO,CACL,CACEC,UAAU,IAEZ,SAEF,eAAC,IAAM,UAEIwJ,GAAiB,KACrByO,MAAK,SAACvW,EAAGC,GAAC,OAAKA,EAAEhG,KAAKiG,cAAcD,EAAEhG,KAAK,IAC3CgN,QAAO,SAACkb,GAAO,OAAKA,EAAQ3jB,OAAS5E,EAAK+E,IAAI,IAC9CC,KAAI,SAAChF,GACJ,OAAO,eAAC,IAAOsF,OAAM,CAACL,MAAOjF,EAAK4E,KAAK,SAAE5E,EAAKK,MAChD,QAIR,eAAC,KAAKkE,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,UAAKpD,EAAI,eACdmc,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAY7G,EACZmE,QAASA,KAIjB,CAEA,OACE,qCACE,sBAAKU,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,SAC3E,eAAC,IAAG,CAAC0N,OAAQ,CAAC,GAAI,IAAI,SAEXjU,GAAiB,KACrByO,MAAK,SAACvW,EAAGC,GAAC,OAAKA,EAAEhG,KAAKiG,cAAcD,EAAEhG,KAAK,IAC3C2E,KAAI,SAAChF,GACJ,OACE,eAAC,IAAG,CAACkI,GAAI,GAAIka,GAAI,GAAIC,GAAI,GAAIha,GAAI,EAAGka,GAAI,EAAE,SACxC,eAAC2F,EAAa,CAACjjB,MAAOjF,EAAK4E,KAAMvE,KAAI,UAAKL,EAAKK,KAAI,gCAGzD,SAMhB,E,wCCyBA,IAAMmnB,GAAS,CACbC,OAAQ,CACNjN,WAAY,KAIHgO,GAAUC,IAAOC,IAAG,oIAOlBC,GAxMf,WAAsB,IAAD,IACnB,EAA2Bxa,mBAAS,IAAG,mBAAhCya,EAAM,KAAEC,EAAQ,KACjB9b,EAAc,OAAN6b,QAAM,IAANA,OAAM,EAANA,EAAQvb,QAAO,SAACoX,GAAI,MAAc,KAATA,CAAW,IAElD,EAA0CtW,qBAAU,mBAA7C2a,EAAa,KAAEC,EAAgB,KACtC,EAAwC5a,qBAAU,mBAA3CnB,EAAY,KAAEgc,EAAe,KAE9BnJ,EAAUC,cAiBhB5Q,qBAAU,WAAO,IAAD,EACVpN,EAAOkB,aAAaC,QAAQ,UAC5BgmB,EAA6B,QAAnB,EAAGnmB,KAAKC,MAAMjB,UAAK,aAAhB,EAAkBiD,KACnCgkB,EAAiBE,EACnB,GAAG,IAEH/Z,oBAAS,gCAAC,wFACRrC,KAAelL,MAAK,SAACC,GAAG,OAAKinB,EAAY,OAAHjnB,QAAG,IAAHA,OAAG,EAAHA,EAAK8Q,MAAM,KAAK,IAAE,2CACvD,IASH,IAGMwW,EAAW,iDAAG,wFAClBpc,GAAYC,EAAOC,GAAcrL,MAAK,SAACC,GAAG,OAAKinB,EAAY,OAAHjnB,QAAG,IAAHA,OAAG,EAAHA,EAAK8Q,MAAM,KAAK,IACxEsW,EAAgB,MAAM,2CACvB,kBAHgB,mCAIXG,EAAY,iDAAG,WAAO1E,GAAI,2EAC9BtX,GAAgBJ,EAAO0X,GAAM9iB,MAAK,SAACC,GAAG,OAAKinB,EAAY,OAAHjnB,QAAG,IAAHA,OAAG,EAAHA,EAAK8Q,MAAM,KAAK,IAAE,2CACvE,gBAFiB,sCAId0W,EAAgBC,OAAOziB,MAAQ,IAEnC,OACE,uCACE,gBAAC4hB,GAAO,WACN,eAAC,IAAM,CACLpY,UAAWpD,EACXrG,MAAO6gB,GAAOC,OACdlgB,QAAS2hB,EACTtkB,KAAK,UAAS,yCAKhB,eAAC,IAAM,CACL2L,YAAY,WACZ5J,MAAO,CACLC,MAAO,KAET3B,MAAO+H,EACPnG,SA/Ba,SAAC5B,GACpB+jB,EAAgB/jB,EAClB,EA8BQqL,QAAsB,OAAbwY,QAAa,IAAbA,GACwC,QAD3B,EAAbA,EACLzb,QAAO,SAACvL,GAAI,QAAW,OAALiL,QAAK,IAALA,KAAOuJ,SAASxU,EAAK8C,MAAK,WAAC,WAD3B,EAAb,EAELI,KAAI,SAAClD,GAAI,MAAM,CACfmD,MAAOnD,EAAK8C,KACZJ,MAAO1C,EAAKzB,KACb,SAIP,eAACipB,GAAA,EAAmB,CAACziB,SAhDzB,SAAkB0iB,EAAaC,GAC7B,IAAMC,EAAYC,aAAK3c,EAAOwc,EAAaC,GAC3CxlB,QAAQC,IAAI,YAAawlB,GACzBZ,EAASY,GACTzlB,QAAQC,IAAI,QAAS8I,EACvB,EA2C4C,SACtC,eAAC4c,GAAA,EAAY,CACXvd,GAAG,QACHwd,YAAaR,EAAgB,EAAI,EACjCS,UAAW,IACXljB,MAAO,CAAEkM,OAAQ,SAAU,SAErB,OAAL9F,QAAK,IAALA,GACgC,QAD3B,EAALA,EACGM,QAAO,SAACoX,GAAI,MAAc,KAATA,CAAW,WAAC,WAD3B,EAAL,EAEGzf,KAAI,SAACyf,GAAI,aACT,eAACqF,GAAA,EAAQ,CACPnjB,MAAO,CACLyI,QAAUqV,EAAgB,QAAT,QACjB,SAGF,uBACE9d,MAAO,CACL6O,QAAS,MACT0F,SAAU,YACV,UAEF,yBACEvU,MAAO,CACLuU,SAAU,WACV6O,MAAO,EACP/S,IAAK,GACLgT,qBAAsB,OACtBpP,gBAAiB,UACjB1E,MAAO,QACP+T,UAAW,OACXC,OAAQ,OACRrX,OAAQ,OACRjM,MAAO,OACPujB,OAAQ,WAEV5iB,QAAS,kBAAM4hB,EAAa1E,EAAK,EAAC,iBAIpC,sBACE9d,MAAO,CACLmM,OAAQ,MACR+H,aAAc,OACdD,gBAAiB,mBACjBhU,MAAO,OACPiM,OAAQ,OACRzD,QAAS,OACTqF,WAAY,SACZpF,eAAgB,SAChB8a,OAAQ,YACR,SAEF,uBACExjB,MAAO,CAAEwjB,OAAQ,UAAWC,WAAY,QACxCC,cAAe,SAACvZ,GACd+O,EAAQ7B,KAAK,CACXjD,SAAU,4BACVrV,MAAO,CAAEX,KAAM0f,IAEnB,EAAE,SAEY,OAAbqE,QAAa,IAAbA,GAAkD,QAArC,EAAbA,EAAelD,MAAK,SAAC9jB,GAAI,OAAS,OAAJA,QAAI,IAAJA,OAAI,EAAJA,EAAM8C,QAAS6f,CAAI,WAAC,WAArC,EAAb,EAAoDpkB,aAhDtDokB,EAoDI,QAInB,wBAEA,sBACE9d,MAAO,CACLyI,QAAS,OACTkb,oBAAqB,iBACrB9J,IAAK,QACL,SAtJmB,CACzB,CACEhc,MAAO,wBACP+lB,MAAO,SAET,CACE/lB,MAAO,wBACP+lB,MAAO,SAET,CACE/lB,MAAO,6BACP+lB,MAAO,UA6IevlB,KAAI,SAACwlB,GAAI,OAC3B,sBACEjjB,QAAS,SAACuJ,GAAC,OACT+O,EAAQ7B,KAAK,CACXjD,SAAS,kBAAD,OAAoByP,EAAKD,QACjC,EAEJ5jB,MAAO,CACLmM,OAAQ,MACR+H,aAAc,OACdD,gBAAiB,mBACjBhU,MAAO,OACPiM,OAAQ,OACRzD,QAAS,OACTqF,WAAY,SACZpF,eAAgB,SAChB8a,OAAQ,YACR,SAEDK,EAAKhmB,OACF,QAKhB,EChEeimB,I,GAAAA,GAzIf,SAAwB3E,GACtB,SAASxJ,IACP,MAAwBnO,mBAAS,IAAyC,mBAAnErM,EAAI,KAAEwR,EAAO,KAEpBpE,qBAAU,YAIV,WACE,OAAQ4W,EAAMlhB,MACZ,IAAK,OvBsBN,WAA0B,iCuBrBvB8lB,GAAc/oB,MAAK,SAACC,GAClB,GAAIA,EAAK,CACP,IAAI+oB,EAAoD,GACxDjT,OAAOC,KAAK/V,GAAKmc,SAAQ,SAACxQ,GACxBod,EAAc3M,KAAK,CAAE7Z,KAAMoJ,EAAK4E,OAAQvQ,EAAI2L,IAC9C,IACA+F,EAAQqX,EACV,CACF,IACA,MACF,IAAK,WvB2CN,WAAgC,iCuB1C7BC,GAAoBjpB,MAAK,SAACC,GACxB,GAAIA,EAAK,CACP,IAAI+oB,EAAoD,GACxDjT,OAAOC,KAAK/V,GAAKmc,SAAQ,SAACxQ,GACxBod,EAAc3M,KAAK,CAAE7Z,KAAMoJ,EAAK4E,OAAQvQ,EAAI2L,IAC9C,IACA+F,EAAQqX,EACV,CACF,IACA,MACF,IAAK,WvBgDN,WAA0B,iCuB/CvBE,GAAclpB,MAAK,SAACC,GAClB,GAAIA,EAAK,CACP,IAAI+oB,EAAoD,GACxDjT,OAAOC,KAAK/V,GAAKmc,SAAQ,SAACxQ,GACxBod,EAAc3M,KAAK,CAAE7Z,KAAMoJ,EAAK4E,OAAQvQ,EAAI2L,IAC9C,IACA+F,EAAQqX,EACV,CACF,IACA,MACF,IAAK,SvBKN,WAA2B,iCuBJxBG,GAAenpB,MAAK,SAACC,GACnB,GAAIA,EAAK,CACP,IAAI+oB,EAAoD,GACxDjT,OAAOC,KAAK/V,GAAKmc,SAAQ,SAACxQ,GACxBod,EAAc3M,KAAK,CAAE7Z,KAAMoJ,EAAK4E,OAAQvQ,EAAI2L,IAC9C,IACA+F,EAAQqX,EACV,CACF,IACA,MACF,IAAK,avBtDN,WAA8B,iCuBuD3BI,GAAkBppB,MAAK,SAACC,GACtB,GAAIA,EAAK,CACP,IAAI+oB,EAA6E,GACjFjT,OAAOC,KAAK/V,EAAW,OAAGmc,SAAQ,SAACxQ,GACjCod,EAAc3M,KAAK,CAAE7Z,KAAMoJ,EAAK4E,OAAQvQ,EAAW,MAAE2L,GAAMyd,gBAAiBppB,EAAc,SAAE2L,IAC9F,IACA+F,EAAQqX,EACV,CACF,IAGN,CA7DEpO,EACF,GAAG,IA8DH,IAAMtW,EACW,cAAf6f,EAAMlhB,KACF,CACE,CACEnB,MAAO,sBACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAET,CACEnD,MAAO,iBACPyC,UAAW,SACXU,MAAO,IAET,CACEnD,MAAO,kBACPyC,UAAW,kBACXU,MAAO,GACPJ,OAAQ,SAAC1E,GAAS,OAAK,+BAAMA,GAAc,GAAQ,GAErD,CACE2B,MAAO,WACPmD,MAAO,GACPJ,OAAQ,SAAC1E,EAAW2E,EAAawkB,GAC/B,IAAIC,GAAazkB,EAAOukB,gBAAkBvkB,EAAOukB,gBAAkB,GAAKvkB,EAAO0L,OAC/E,OAAO,sBAAKxL,MAAO,CAAEuP,MAAOgV,EAAY,EAAI,WAAQ/U,EAAWpB,WAAY,UAAW,SAAEmW,GAC1F,IAGJ,CACE,CACEznB,MAAO,sBACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAET,CACEnD,MAAO,iBACPyC,UAAW,SACXU,MAAO,KAIjB,OACE,eAAC,KAAI,CAACD,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,SACjE,eAAC,IAAK,CACJ0T,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,qCACE,+BAAIqiB,EAAMlhB,KAAI,+BACb,EAEL+D,WAAY7G,EAAK6a,MAAK,SAACvW,EAAGC,GAAC,OAAKD,EAAEjC,KAAKmC,cAAcD,EAAElC,KAAK,IAC5D8B,QAASA,KAIjB,CAEA,OACE,qCACE,sBAAKU,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,SAC7E,eAAC6H,EAAc,OAIvB,EChIMpO,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MAE1EmZ,GAA0C,CAC5ChL,aAAc,iBACd1C,MAAO,WACP9J,KAAM,SACN+J,YAAa,cACb/D,UAAW,sBACXiE,KAAM,WACNyC,SAAU,kBACVQ,cAAe,qBACfJ,aAAc,gBACdE,SAAU,kBACVhD,SAAU,cACV+C,WAAY,sBACZK,aAAc,uBACdT,UAAW,aACXL,iBAAkB,+BAClBM,UAAW,eACXH,iBAAkB,qBAClBtM,KAAM,+BAkOKomB,I,GAAAA,GA/Nf,SAAiC9X,GAC7B,MAAe/P,KAAKC,UA6KpB,OA7K6B,iBAAlB,GA8KP,qCACI,uBAAiBoD,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,UACvF,gBAAC,KAAI,CAA4BhR,MAAM,0CAA0BkD,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,UAC1H,eAAC,KAAM,CACHX,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,gCACZN,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAY4O,yBAChCC,OAAO,SACPC,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACPqI,GAAU,0BAA2B,CAAEjN,KAAM4E,GACjD,GACI,cAER,eAAC,KAAM,CACH0B,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,0BACZkM,OAAO,SACPxM,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAYgP,qBAChCF,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACPqI,GAAU,sBAAuB,CAAEjN,KAAM4E,GAC7C,GACI,aAER,eAAC,KAAM,CACH0B,MAAO,CAAEoN,aAAc,IACvBlD,YAAY,0BACZN,YAAa/P,OAAiB,OAAV0N,SAAU,IAAVA,QAAU,EAAVA,GAAYiP,qBAChCJ,OAAO,SACPC,YAAY,qBACZzc,KAAK,QACL0c,SAAU,SAAChY,GACPqI,GAAU,sBAAuB,CAAEjN,KAAM4E,GAC7C,GACI,eAnCF,wBAsCV,eAAC,KAAI,CAAmB0B,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAQ7D,MAAM,GAAE,SAnN/FiU,OAAOC,KAAKzJ,IAAYlJ,KAAI,SAACuI,GAChC,IAAImP,EAAUxO,GAAWX,GACzB,MAAsB,iBAAXmP,GAA8B,QAAPnP,GACS,IAAnCmK,OAAOC,KAAK+E,EAAQ,IAAI5U,OAUxC,SAAiCjF,EAA0C0K,GACvE,IAAMtH,EAAU,CACZ,CACIxC,MAAO,MACPyC,UAAW,OACXqH,IAAK,OACL3G,MAAO,IAEX,CACInD,MAAO,cACPyC,UAAW,OACXU,MAAO,KAGf,OACI,eAAC,KAAI,CAAWD,MAAO,CAAEoN,aAAc,IAAK,SACxC,eAAC,IAAK,CACFiH,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACH,uCACI,6BAAI2Y,GAAa7O,KACjB,eAAC,KAAO,CACJvG,QACI,gBAAC,KAAI,CACD9C,OAAO,WACP0L,SAAU,SAAC1N,GACPoL,GAAU9M,OAAO+M,GAAMrL,GAAQP,MAAK,SAACC,GAC7BA,GAAKyH,IACb,GACJ,EAAE,UAEF,eAAC,KAAK9E,KAAI,CACNJ,KAAK,OACLK,MAAM,MACNC,MAAO,CACH,CACIC,UAAU,EACVC,QAAS,uEAEf,SAEF,eAAC,KAAK,MAEV,eAAC,KAAKJ,KAAI,CAACJ,KAAK,OAAOK,MAAM,cAAU,SACnC,eAAC,KAAK,MAEV,eAAC,KAAKD,KAAI,UACN,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAMpDxO,MAAK,UAAK2Y,GAAa7O,GAAI,gBAC3BiP,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAItD,EAEP9T,WAAkB,OAAN9F,QAAM,IAANA,OAAM,EAANA,EAAQ8Z,MAAK,SAACvW,EAAQC,GAAM,OAAKD,EAAExB,KAAK0B,cAAcD,EAAEzB,KAAK,IACzEqB,QAASA,EACTwC,OAAO,UAlDJ8E,EAsDnB,CA9EuBqP,CAAwBF,EAA6CnP,GAK7E,IACX,KAyMkB,iBAvCL,UA6CrB,EClPMW,GAA6BpL,KAAKC,MAAoC,QAA/B,GAACC,aAAaC,QAAQ,iBAAS,UAAI,MA4I/DmoB,I,GAAAA,GA1IjB,SAAoC/X,GAChC,MAAe/P,KAAKC,UAAbC,EAAsB,iBAAlB,GACX,SAAS8Y,EAAejJ,GACtB,IAAQpO,EAAgBoO,EAAhBpO,MAAO5E,EAASgT,EAAThT,KACf,EAAwB8N,mBAAS,IAAG,mBAA7BrM,EAAI,KAAEwR,EAAO,KACdtT,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAM9D,SAASuc,IACPN,GAAahX,GAAOtD,MAAK,SAACC,GACpBA,GACF0R,EAAQ1R,EAEZ,GACF,CAVAsN,qBAAU,WACRqN,GACF,GAAG,CAACtX,IASJ,IAAMgB,EAAU,CACd,CACExC,MAAO,sBACPyC,UAAW,OACXqH,IAAK,QAEP,CACE9J,MAAO,iBACPyC,UAAW,UAEb,CACEzC,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAU,OAC/B,8BACgB,SAAbxK,EAAK+E,KACJ,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,IACvB1M,QAAM,EACNzC,KAAK,UACL2C,QAAS,WACP4U,GAAgB3R,EAAM4B,IAAIzK,MAAK,SAACC,GAC1BA,EACF2a,IAEAzV,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAGd,GACF,EAAE,iBAIF,MACD,IAIX,OACE,eAAC,IAAK,CACJsX,YAAY,EACZrU,MAAO,CAAEC,MAAO,QAChBnD,MAAO,kBACL,uCACE,6BAAIpD,IACJ,eAAC,KAAO,CACN2G,QACE,gBAAC,KAAI,CACHxD,KAAMA,EACNU,OAAO,WACP0L,SAAU,SAAC1N,GACTga,GAAa,CAAE/J,OAAQjQ,EAAOiQ,OAAQhO,KAAMjC,EAAOiC,KAAMyG,UAAW3F,IAAStD,MAAK,SAACC,GAC7EA,GACF2a,IACA/Y,EAAKM,eAELgD,IAAMC,MAAM,CACVtD,MAAO,uBACPuD,QAAS,2DACTtD,OAAQ,SAEd,GACF,EAAE,UAEF,eAAC,KAAKa,KAAI,CACRJ,KAAK,OACLK,MAAM,aACNC,MAAO,CACL,CACEC,UAAU,IAEZ,SAEF,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CAACJ,KAAK,SAASK,MAAM,SAAQ,SACrC,eAAC,KAAW,CAACoM,IAAK,MAEpB,eAAC,KAAKrM,KAAI,UACR,eAAC,IAAM,CAACK,KAAK,UAAUqN,SAAS,SAAQ,uBAM9CxO,MAAK,UAAKpD,EAAI,eACdmc,QAAQ,QAAO,SAEf,eAAC,IAAM,CAAC5X,KAAK,UAAU+B,MAAO,CAAE8V,MAAO,SAAU,sBAIlD,EAEL9T,WAAY7G,EACZmE,QAASA,EACTwC,OAAS,MACJxD,EAAMoR,WAAW,OAG5B,CACA,OACE,qCACE,sBAAiB1P,MAAO,CAAEyI,QAAS,OAAQsF,cAAe,SAAUD,WAAY,UAAW,SACzF,eAAC,KAAI,CAAwBhR,MAAM,8CAA4BkD,MAAO,CAAEC,MAAO,MAAOmN,aAAc,KAAMzM,UAAW,MAAO,SAEnG4G,GAAsB,UACxCyO,MAAK,SAACvW,EAAGC,GAAC,OAAKwE,SAASxE,EAAEzB,MAAQiG,SAASzE,EAAExB,KAAK,IACnCI,KAAI,SAAC4F,GACnB,OAAO,eAAC0R,EAAc,CAACrX,MAAO4F,SAASD,EAAUhG,MAAOvE,KAAI,UAAKuK,EAAUvK,KAAI,qCAAkCuK,EAAUhG,KAC7H,KANI,qBADH,UAaf,ECzHI/B,GAAyBC,KAAKC,MACJ,QADS,GACvCC,aAAaC,QAAQ,iBAAS,UAAI,MAE9BkN,GAASxC,EAAQ,KACvBwC,GAAOhQ,OAAO,MAEd,IAAM0lB,GAAgB,SAACC,GAKrB,MAA4B3X,mBAAS,GAAE,mBAAhCgE,EAAM,KAAE4T,EAAS,KAExB,OACE,iCACE,eAAC,KAAW,CACV1V,IAAKyV,EAAME,UACXrf,MAAO,CAAEC,MAAO,OAChBrG,KAAK,QACLmG,aAAc,EACduf,UAAW,SAAChhB,GAAK,qCAAuBA,EAAK,EAC7CihB,OAAQ,SAACjhB,GAAK,OAAU,OAALA,QAAK,IAALA,OAAK,EAALA,EAAOyN,MAAM,yBAAmB,EAAE,EACrD7L,SAAU,SAAC5B,GAAK,OAAK8gB,EAAU9gB,EAAM,IAEvC,eAAC,IAAM,CACLoC,QAAM,EACN9G,KAAK,QACLoG,MAAO,CAAE6T,WAAY,IACrBjT,QAAS,WACP2b,GAAkB4C,EAAM1Z,GAAI+F,GAAQxQ,MAAK,SAACC,GACpCA,GAAKkkB,EAAMK,UACjB,GACF,EAAE,sBAMV,EAEMC,GAAkB,kDACtB,WAAY/S,GAAQ,IAAD,IAmWjB,OAnWiB,qBACjB,cAAMA,IAGRnF,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EAEhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBACdC,EAAe,EAAfA,gBACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QACAC,EAAY,EAAZA,aAAY,OAEZ,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OACVsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EAEzD2Q,aAAc,kBACZ,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EAErDS,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CACLxK,KAAK,UACL2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAClE3F,KAAK,QACLoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAIvC,eAAC,IAAM,CACLzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAC7ChV,KAAK,QACLoG,MAAO,CAAEC,MAAO,IAAK,iCAInB,EAERmP,WAAY,SAACC,GAAQ,OACnB,eAACC,GAAA,EAAc,CACbrR,KAAK,SACL+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IACvC,EAEJC,SAAU,SAACnR,EAAOwB,GAAM,OACtBA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EAC1EsS,8BAA+B,SAACra,GAC1BA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACN2gB,aAAc,aACdC,aAAc,OACdxP,QAAS,CACP,CACE,cACA,OACA,mBACA,sBACA,SACA,aACA,aACA,0BACA,+BAGJtO,SAAS,EACT1G,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,cACPyC,UAAW,KACXC,OAAQ,SAACC,EAAiBC,GAAe,OAAKD,EAAEgG,GAAK/F,EAAE+F,EAAE,GACtD,EAAK8I,qBAAqB,OAAK,yBAGlCzR,MAAO,OACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAEmgB,cAAcjgB,cAAcD,EAAEkgB,cAAc,GAC7C,EAAKrR,qBAAqB,kBAAgB,IAC7C1O,OAAQ,SAACnG,EAAcyB,GAAI,OACzB,8BACG,EAAKuR,MAAMmT,SACV,eAAC,IAAM,CACLpW,SAAmC,UAAzB,EAAKiD,MAAMrT,KAAK+E,KAC1BE,MAAO5E,EACPE,KAAK,QACLoG,MAAO,CAAEC,MAAO,KAChBC,SAAU,SAAC5B,GACT+d,GAAkB,CAAE5W,GAAItK,EAAKsK,GAAIqa,UAAWxhB,IAAStD,MACnD,SAACC,GACC,EAAK8kB,UACP,GAEJ,EAAE,SAEA,WAAO,IAAD,EACN,OAAkB,QAAlB,EAAO7jB,GAAOkC,YAAI,aAAX,EAAaC,KAAI,SAACD,GACvB,OACE,eAAC,IAAOO,OAAM,CAACL,MAAOF,EAAKH,KAAK,SAC7BG,EAAK1E,MAGZ,GACF,CARE,KAWH,WAAO,IAAD,EACL,OAAkB,QAAlB,EAAOwC,GAAOkC,YAAI,aAAX,EAAaC,KAAI,SAACD,GACvB,GAAIA,EAAKH,MAAQvE,EAAM,OAAO,6BAAI0E,EAAK1E,MACzC,GACF,CAJC,IAMA,IACN,yBAGDoD,MAAO,mBACPyC,UAAW,QACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE3C,MAAM6C,cAAcD,EAAE5C,MAAM,GAC7B,EAAKyR,qBAAqB,UAAQ,IACrC1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,sBACPyC,UAAW,cACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE4R,YAAY1R,cAAcD,EAAE2R,YAAY,GACzC,EAAK9C,qBAAqB,gBAAc,IAC3C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKA,EAAOM,EAAWN,GAAQ,IAAQ,IAEnE,CACEoD,MAAO,SACPyC,UAAW,SACXC,OAAQ,SAACC,EAAiBC,GAAe,eACvCwE,SAAiB,QAAT,EAACzE,EAAE+L,cAAM,aAAR,EAAUO,MAAM,KAAK,IAAM7H,SAAiB,QAAT,EAACxE,EAAE8L,cAAM,aAAR,EAAUO,MAAM,KAAK,GAAG,GAEzE,CACEjP,MAAO,aACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAEugB,iBAAmBtgB,EAAEsgB,gBAAgB,GACzC,yBAEAljB,MAAO,0BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvC8J,GAAO/J,EAAEuN,kBAAkB0D,OAASlH,GAAO9J,EAAEsN,kBAAkB0D,MAAM,GACpE,EAAKnC,qBAAqB,qBAAmB,IAChD1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,6BAG1DoD,MAAO,6BACPyC,UAAW,mBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvC8J,GAAO/J,EAAEmf,kBAAkBlO,OAASlH,GAAO9J,EAAEkf,kBAAkBlO,MAAM,GACpE,EAAKnC,qBAAqB,qBAAmB,IAChD1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKW,EAAgBX,IAAW,IAG5D,CACEoD,MAAO,qBACP+C,OAAQ,SAACnG,EAAcmK,GAAmB,aACxC,gCAC4B,SAAxB,EAAK6I,MAAMrT,KAAK+E,MACQ,UAAxB,EAAKsO,MAAMrT,KAAK+E,MACK,UAAvByF,EAAM+b,eACS,2BAAf/b,EAAM/G,MAoBF,KAnBF,eAAC,IAAU,CACTA,MACE,6FACmD,wBAAM,uCAI3DyD,UAAW,WACTic,GAAkB3Y,EAAM4B,GAAI,GAAGzK,MAAK,SAACC,GAC/BA,GAAK,EAAK8kB,UAChB,GACF,EACAhjB,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CAACgD,MAAO,CAAEmM,OAAQ,GAAK1L,OAAK,EAAC7G,KAAK,QAAQqE,KAAK,UAAS,uBAK1C,SAAxB,EAAKyO,MAAMrT,KAAK+E,KACf,eAAC,IAAU,CACTtB,MACE,yFAC+C,wBAAM,uCAIvDyD,UAAW,WACT+b,GAAkBzY,EAAM4B,IAAIzK,MAAK,SAACC,GAC5BA,GAAK,EAAK8kB,UAChB,GACF,EACAhjB,OAAO,OACPC,WAAW,QAAO,SAElB,eAAC,IAAM,CACLgD,MAAO,CAAEmM,OAAQ,GACjB1L,OAAK,EACLC,QAAM,EACN9G,KAAK,QACLqE,KAAK,UAAS,mBAKhB,KACJ,eAAC,IAAM,CACLwC,OAAK,EACLT,MAAO,CAAEmM,OAAQ,GACjBvL,QAAS,WACP,EAAKG,SAAS,CACZkf,gBAAgB,EAChBC,eAAgBrc,EAAM4B,IAE1B,EACA7L,KAAK,QACLqE,KAAK,UAAS,6CAIS,SAAxB,EAAKyO,MAAMrT,KAAK+E,MACO,SAAxB,EAAKsO,MAAMrT,KAAK+E,MACS,WAAzB,EAAKsO,MAAMrT,KAAK+E,MACS,eAAzB,EAAKsO,MAAMrT,KAAK+E,MACS,QAAxB,EAAKsO,MAAMrT,KAAK+E,MACW,GAA1ByF,EAAMmc,kBACN,EAAKtT,MAAMmT,SACX,eAAC,KAAO,CACNxf,QACE,eAAC,GAAa,CACZgf,UAAWnb,SAAc,OAALL,QAAK,IAALA,GAAa,QAAR,EAALA,EAAO2H,cAAM,WAAR,EAAL,EAAeO,MAAM,KAAK,IAAM,EACpDtG,GAAI5B,EAAM4B,GACV+Z,SAAU,EAAKO,SAASjP,KAAK,mBAGjChU,MACE,+IAEgB,wBAAM,uCAGxB+Y,QAAQ,QAAO,SAEf,eAAC,IAAM,CACL7V,MAAO,CAAEmM,OAAQ,GACjB1L,OAAK,EACLC,QAAM,EACN9G,KAAK,QACLqE,KAAK,UAAS,sBAKhB,OACD,KAIX,EAUFkiB,0BAA4B,SAACC,EAAUC,GACrCxQ,YAAW,WAAO,IAAD,IACS,QAApB,EAAC,EAAKnD,MAAMa,gBAAQ,OAAO,QAAP,EAAnB,EAAqBxO,aAAK,OAA1B,EAA4BX,KAG/B,EAAK2hB,WAFL,EAAKrT,MAAMwM,QAAQ7B,KAAK,YAI5B,GAAG,IACL,EAAE,EAmCF+F,UAAY,SAACjiB,GACX,IAAMkX,EAAYgL,KAAWC,aAAaniB,GACpC4W,EAAWsL,KAAWE,WAC5BF,KAAWG,kBAAkBzL,EAAUM,EAAW,UAClDgL,KAAetL,EAAU,iBAC3B,EAAC,CAjWD,CA0YC,OA1YA,8CAySD,WAAqB,IAAD,IACM,QAApB,EAAC7Q,KAAKwL,MAAMa,gBAAQ,OAAO,QAAP,EAAnB,EAAqBxO,aAAK,OAA1B,EAA4BX,KAG/B8C,KAAK6e,WAFL7e,KAAKwL,MAAMwM,QAAQ7B,KAAK,YAI5B,GAAC,sBAYD,WAAY,IAAD,OACMnW,KAAKwL,MAAMmT,SAC1B3e,KAAKH,SAAS,CAAEc,SAAS,IAEzB,IAAIsO,EAAU,CACZ,CACE,cACA,OACA,mBACA,sBACA,SACA,aACA,0BACA,gCf9MD,SAAsC,GAAD,iCekNxCuU,CAAuBxjB,KAAKwL,MAAMa,SAASxO,MAAMX,MAAMpD,MAAK,SAACG,GACvD,OAAJA,QAAI,IAAJA,KAAMic,SAAQ,SAACmJ,GACbpQ,EAAQkH,KAAK,CACXkJ,EAAK9a,GACL8a,EAAKX,cACLW,EAAKzjB,MACLyjB,EAAKlP,YACLkP,EAAK/U,OACL+U,EAAKP,iBACL3lB,EAAgBkmB,EAAKvT,kBACrB3S,EAAgBkmB,EAAK3B,mBAEzB,IACA,EAAK7d,SAAS,CAAE5F,OAAMgV,UAAStO,SAAS,GAC1C,GACF,GAAC,oBASD,WAAU,IAAD,OACD9C,EAAQmC,KAAKnC,MAEnB,OACE,uCACE,+BACE,eAAC,KAAI,CACHiB,MAAO,CACLyI,QAAS,OACTC,eAAgB,SAChBoF,WAAY,UACZ,SAEF,eAAC,IAAM,CACL9N,MAAK,2BAAO6gB,GAAOC,QAAM,IAAEhL,MAAO,UAClClV,QAAS,kBAAM,EAAKwc,UAAU,EAAKre,MAAMoR,QAAQ,EAAC,uCAOxD,eAAC,IAAK,CACJkE,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CzS,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAC/B7L,KAAK,QACLoG,MAAO,CAAEqJ,SAAU,SACnBxH,QAASX,KAAKnC,MAAM8C,QACpBvC,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,OAEpB,eAAC,GAAkB,CACjBsS,UAAWvM,KAAKnC,MAAMkhB,eACtBlB,QAAS7d,KAAKnC,MAAMmhB,eACpBxS,aAAc,SAACpP,GAAK,OAAK,EAAKyC,SAAS,CAAEkf,eAAgB3hB,GAAQ,MAIzE,KAAC,EA7YqB,CAAS4W,IAAM/S,WAgZjC0e,GAAS,CACbC,OAAQ,CACNjN,WAAY,KAQDsB,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyBsK,ICxchC9gB,GAAqBE,IAArBF,OAAQmI,GAAajI,IAAbiI,SACVC,GAASC,EAAQ,IAmsBR2d,OAjsBf,SAAyBjY,GAAa,IAAD,EAC7BnF,EAA6BpL,KAAKC,MACR,QADa,EAC3CC,aAAaC,QAAQ,iBAAS,QAAI,MAEpC,EAAsCkL,mBAAS,IAAG,mBAA3CC,EAAW,KAAEC,EAAc,KAClC,EAAwCF,mBAAS,IAAU,mBAApDG,EAAY,KAAEC,EAAe,KACpC,EAAwCJ,mBAAS,IAAU,mBAAtCod,GAAF,KAAiB,MAEpC,EAA4Cpd,mBAAS,SAAQ,mBAAtDK,EAAc,KAAEC,EAAiB,KACxC,EAAsCN,mBAAS,CAC7CO,MAAO,GACP9J,KAAM,GACN+J,YAAa,GACbC,SAAU,GACVhE,UAAW,EACXiE,KAAM,GACNC,SAAU,SACVhE,aAAc,EACdH,KAAM,KACN,mBAVKoE,EAAW,KAAEC,EAAc,KAY9BvE,EAklBJ,WACE,OAAQ+D,GACN,IAAK,QACH,OACEO,EAAYL,MACZK,EAAYnK,KACZmK,EAAYH,SACZG,EAAYnE,UACZmE,EAAYF,KACZE,EAAYpE,KACZ,EACAoE,EAAYD,SACZ,EACAC,EAAYjE,aAEhB,IAAK,QACH,OACEiE,EAAYL,MACZK,EAAYnK,KACZmK,EAAYJ,YACZI,EAAYnE,UACZmE,EAAYF,KACZE,EAAYpE,KACZ,EACAoE,EAAYD,SACZ,EACAC,EAAYjE,aAEhB,IAAK,QACH,OACEiE,EAAYL,MACZK,EAAYnK,KACZmK,EAAYpE,KACZ,EACAoE,EAAYD,SACZ,EACAC,EAAYjE,aAEhB,QACE,MAAO,GAEb,CA3nBiBmE,GACjB,EAAe3L,KAAKC,UAAbC,EAAsB,iBAAlB,GAILqW,EAFoB2R,cAAlBzQ,SAEsBrI,MAAM,KAAK,GA0BzC,OAxBAxD,qBAAU,WACR9D,GAAgByO,GAAclY,MAAK,SAACoV,UAC3BA,EAAarM,YACbqM,EAAapM,KAEpB4gB,EAAgB,CACdxU,eACA0U,cAAe,UACf3gB,aAActK,OAAOuW,EAAajM,gBAEpCtH,EAAKkM,eAAe,2BACfqH,GAAY,IACf0U,cAAe,UACf3gB,aAActK,OAAOuW,EAAajM,gBAEtC,GACF,GAAG,CAAC+O,IAEJ3K,qBAAU,WACR1B,KAAkB7L,MAAK,SAACC,GACtB2M,EAAgB3M,EAClB,GACF,GAAG,IAGD,gBAACuN,GAAI,CACHxI,MAAO,CACLyI,QAAS,OACTC,eAAgB,eAChBC,SAAU,eACVC,SAAU,QACV,UAEF,gBAAC,KAAI,CACH/L,KAAMA,EACNgM,eAAgB,WACd,IAAIC,EAC6B,eAA/BjM,EAAK2B,cAAc,SACf3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,SACd,SAAzC3B,EAAK2B,cAAc,mBACnB3B,EAAK2B,cAAc,SACnB,IACA3B,EAAK2B,cAAc,aACnB,MACA3B,EAAK2B,cAAc,eACnB3B,EAAK2B,cAAc,cACnB,MACA3B,EAAK2B,cAAc,YACsB,SAAzC3B,EAAK2B,cAAc,mBACnB3B,EAAK2B,cAAc,SACnB,IACA3B,EAAK2B,cAAc,aACnB,MACA3B,EAAK2B,cAAc,YACnB,IACA3B,EAAK2B,cAAc,cACsB,SAAzC3B,EAAK2B,cAAc,mBACnB3B,EAAK2B,cAAc,SAAW,IAAM3B,EAAK2B,cAAc,QACvD,GACNkJ,EAAe5D,EAAa,IAAMgF,EAAQ3O,eAExC0C,EAAK2B,cAAc,UACY,eAA/B3B,EAAK2B,cAAc,UAEnB3B,EAAKkM,eAAe,CAAEC,cAAenM,EAAK2B,cAAc,UAE5D,EACAyK,SAAQ,iDAAE,WAAO1N,GAAM,iFACS,OAA9B8B,QAAQC,IAAI,SAAU/B,GAAQ,SACT+I,GAAY/I,EAAQuI,GAAY,KAAD,EAA9CsO,EAAM,OACZ/U,QAAQC,IAAI,SAAU8U,GAItB,2CACD,mDARO,GASRjJ,SAAU,CAAE3H,KAAM,GAClB4H,WAAY,CAAE5H,KAAM,IACpBxB,MAAO,CAAEqJ,SAAU,qBAAsBC,SAAU,SACnD3L,cAAc,EAAM,UAEpB,eAAC,KAAKC,KAAI,CAACJ,KAAK,OAAO+L,aAAcC,OAAU3L,MAAM,QAAQE,UAAQ,WACnE,eAAC,KAAU,CAAC0L,UAAQ,MAGtB,eAAC,KAAK7L,KAAI,CACRJ,KAAK,WACLK,MAAM,2BACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,IAAK1L,QAAS,oDAEvBD,UAAQ,WAER,eAAC,KAAY,CACXiC,MAAO,CAAEC,MAAO,KAChB0J,QAAShC,EACTiC,YAAY,6BACZC,aAAc,SAACC,EAAYC,GAAM,OAE9B,IADDA,EAAQzL,MAAMnE,cAAc6P,QAAQF,EAAW3P,cAC7C,MAIR,eAAC,KAAKyD,KAAI,CACRJ,KAAK,UACLK,MAAM,SACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,IAAK1L,QAAS,oDAEvBD,UAAQ,WAER,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CACRJ,KAAK,eACLK,MAAM,aACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CACE0L,IAAK,GACLO,IAAK,GACLjM,QAAS,iEAGbD,UAAQ,WAER,eAAC,KAAK,CAACmM,YAAY,MAAMlK,MAAO,CAAEC,MAAO,YAE3C,eAAC,KAAKrC,KAAI,CACRJ,KAAK,kBACLK,MAAM,mBACN0L,aAAa,QACbxL,UAAQ,WAER,gBAAC,KAAMI,MAAK,CACV+B,SAAU,SAACiK,GACTrC,EAAkBqC,EAAEC,OAAO9L,MAC7B,EAAE,UAEF,eAAC,KAAK,CAACA,MAAM,QAAO,mBACpB,eAAC,KAAK,CAACA,MAAM,QAAO,mBACpB,eAAC,KAAK,CAACA,MAAM,QAAO,6BAGxB,eAAC,KAAKV,KAAI,CAACJ,KAAK,QAAQK,MAAM,QAAQE,UAAQ,WAC5C,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAM8J,EAAQR,EAAWQ,MAAMrB,QAC7B,SAACqB,GAAK,OAAKA,EAAM9J,MAAQA,CAAI,IAE/BoK,EAAe,2BAAKD,GAAW,IAAEL,MAAOA,EAAM,GAAGuC,WACnD,EAAE,SAGO/C,EAAWQ,MAAM1J,KAAI,SAAC0J,GAC3B,OACE,eAAC,GAAM,CAAkBzJ,MAAOyJ,EAAM9J,KAAK,SACxC8J,EAAMrO,MADIqO,EAAM9J,KAIvB,QAIa,SAAlB4J,GAAkD,KAArBO,EAAYL,MACxC,eAAC,KAAKnK,KAAI,CAACJ,KAAK,QAAQK,MAAM,QAAQE,UAAQ,WAC5C,eAAC,IAAM,UAEIwJ,EAAWgD,iBAAiBlM,KAAI,SAAC0J,GACtC,OACE,eAAC,GAAM,CAAkBzJ,MAAOyJ,EAAMrO,KAAK,SACxCqO,EAAMrO,MADIqO,EAAMrO,KAIvB,QAIJ,KAEJ,eAAC,KAAKkE,KAAI,CAACJ,KAAK,OAAOK,MAAM,MAAME,UAAQ,WACrB,UAAnB8J,GAAiD,UAAnBA,EAC7B,eAAC,IAAM,CACLwC,SAAU,SAACG,GACT,IAAMvM,EAAOsJ,EAAWtJ,KAAKyI,QAC3B,SAACzI,GAAI,OAAKA,EAAKA,MAAQuM,CAAK,IAE9BnC,EAAe,2BAAKD,GAAW,IAAEnK,KAAMA,EAAK,GAAGqM,WACjD,EAAE,SAGO/C,EAAWtJ,KAAKI,KAAI,SAACJ,GAC1B,OACE,eAAC,GAAM,CAAiBK,MAAOL,EAAKA,KAAK,SACtCA,EAAKvE,MADKuE,EAAKA,KAItB,MAIJ,eAAC,IAAM,CACLoM,SAAU,SAACG,GACT,IAAMvM,EAAOsJ,EAAWkD,aAAa/D,QACnC,SAAC+D,GAAY,OAAKA,EAAaxM,MAAQuM,CAAK,IAE9CnC,EAAe,2BAAKD,GAAW,IAAEnK,KAAMA,EAAK,GAAGqM,WACjD,EAAE,SAGO/C,EAAWkD,aAAapM,KAAI,SAACoM,GAClC,OACE,eAAC,GAAM,CAAyBnM,MAAOmM,EAAaxM,KAAK,SACtDwM,EAAa/Q,MADH+Q,EAAaxM,KAI9B,QAKW,SAAlB4J,GAA+C,SAAlBA,EAC5B,uCACE,eAAC,KAAKjK,KAAI,CACRJ,KAAK,gBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,cACNE,UAAQ,WAER,eAAC,KAAK,MAER,eAAC,KAAKH,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,gBAAe,SACnD,gBAAC,KAAMM,MAAK,WACV,eAAC,KAAK,CAACG,MAAM,UAAS,qBACtB,eAAC,KAAK,CAACA,MAAM,MAAK,sCAItB,eAAC,KAAKV,KAAI,CACRJ,KAAK,mBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,WACNE,UAAQ,WAER,eAAC,IAAM,UAEIwJ,EAAWmD,iBAAiBrM,KAAI,SAACqM,GACtC,OACE,eAAC,GAAM,CAELpM,MAAOoM,EAAiBzM,KAAK,SAE5ByM,EAAiBhR,MAHbgR,EAAiBzM,KAM5B,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,YAAYK,MAAM,aAAaE,UAAQ,WACrD,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAMgG,EAAYsD,EAAWtD,UAAUyC,QACrC,SAACzC,GAAS,OAAKA,EAAUhG,MAAQA,CAAI,IAEvCoK,EAAe,2BACVD,GAAW,IACdnE,UAAWC,SAASD,EAAU,GAAGqG,YAErC,EAAE,SAEF,eAAC,GAAQ,CAACzM,MAAM,QAAO,SAEZ0J,EAAWtD,UAAU5F,KAAI,SAAC4F,GAC/B,OACE,eAAC,GAAM,CAAsB3F,MAAO2F,EAAUhG,KAAK,SAChDgG,EAAUvK,MADAuK,EAAUhG,KAI3B,UAKR,eAAC,KAAKL,KAAI,CAACJ,KAAK,WAAWK,MAAM,eAAYE,UAAQ,WACnD,eAAC,IAAM,UAEIwJ,EAAWoD,SAAStM,KAAI,SAACsM,GAC9B,OACE,eAAC,GAAM,CAAqBrM,MAAOqM,EAAS1M,KAAK,SAC9C0M,EAASjR,MADCiR,EAAS1M,KAI1B,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,OAAOK,MAAM,QAAQE,UAAQ,WAC3C,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAMiK,EAAOX,EAAWW,KAAKxB,QAC3B,SAACwB,GAAI,OAAKA,EAAKjK,MAAQA,CAAI,IAE7BoK,EAAe,2BAAKD,GAAW,IAAEF,KAAMA,EAAK,GAAGoC,WACjD,EAAE,SAGO/C,EAAWW,KAAK7J,KAAI,SAAC6J,GAC1B,OACE,eAAC,GAAM,CAAiB5J,MAAO4J,EAAKjK,KAAK,SACtCiK,EAAKxO,MADKwO,EAAKjK,KAItB,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,YAAYK,MAAM,UAAUE,UAAQ,WAClD,eAAC,IAAM,UAEIwJ,EAAWqD,UAAUvM,KAAI,SAACuM,GAC/B,OACE,eAAC,GAAM,CAAsBtM,MAAOsM,EAAU3M,KAAK,SAChD2M,EAAUlR,MADAkR,EAAU3M,KAI3B,QAIN,eAAC,KAAKL,KAAI,CACRJ,KAAK,YACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,YACNE,UAAQ,WAER,eAAC,IAAM,UAEIwJ,EAAWsD,UAAUxM,KAAI,SAACwM,GAC/B,OACE,eAAC,GAAM,CAAsBvM,MAAOuM,EAAU5M,KAAK,SAChD4M,EAAUnR,MADAmR,EAAU5M,KAI3B,WAKN,KACe,SAAlB4J,EACC,uCACE,eAAC,KAAKjK,KAAI,CAACJ,KAAK,WAAWK,MAAM,WAAWE,UAAQ,WAClD,eAAC,IAAM,CACLsM,SAAU,SAACG,GACT,IAAMvC,EAAWV,EAAWU,SAASvB,QACnC,SAACzI,GAAI,OAAKA,EAAKA,MAAQuM,CAAK,IAE9BnC,EAAe,2BACVD,GAAW,IACdH,SAAUA,EAAS,GAAGqC,WAE1B,EAAE,SAGO/C,EAAWU,SAAS5J,KAAI,SAAC4J,GAC9B,OACE,eAAC,GAAM,CAAqB3J,MAAO2J,EAAShK,KAAK,SAC9CgK,EAASvO,MADCuO,EAAShK,KAI1B,QAKN,eAAC,KAAKL,KAAI,CACRJ,KAAK,gBACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,8BACNE,UAAQ,WAER,eAAC,KAAK,CAAC+M,UAAW,OAEpB,eAAC,KAAKlN,KAAI,CACRJ,KAAK,aACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,GAAI1L,QAAS,uDAEtBH,MAAM,oBACNE,UAAQ,WAER,eAAC,KAAK,CAAC+M,UAAW,UAGpB,KACe,SAAlBjD,EACC,uCACE,eAAC,KAAKjK,KAAI,CAACJ,KAAK,cAAcK,MAAM,WAAWE,UAAQ,WACrD,eAAC,IAAM,CACLsM,SAAU,SAACpM,GACT,IAAM+J,EAAcT,EAAWS,YAAYtB,QACzC,SAACsB,GAAW,OAAKA,EAAY/J,MAAQA,CAAI,IAE3CoK,EAAe,2BACVD,GAAW,IACdJ,YAAaA,EAAY,GAAGsC,WAEhC,EAAE,SAGO/C,EAAWS,YAAY3J,KAAI,SAAC2J,GACjC,OACE,eAAC,GAAM,CAAwB1J,MAAO0J,EAAY/J,KAAK,SACpD+J,EAAYtO,MADFsO,EAAY/J,KAI7B,QAKa,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,eAAeK,MAAM,aAAaE,UAAQ,WACxD,eAAC,IAAM,UAEIwJ,EAAWwD,aAAa1M,KAAI,SAAC0M,GAClC,OACE,eAAC,GAAM,CAELzM,MAAOyM,EAAa9M,KAAK,SAExB8M,EAAarR,MAHTqR,EAAa9M,KAMxB,QAIJ,KAEe,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,aAAaK,MAAM,uBAAeE,UAAQ,WACxD,eAAC,IAAM,UAEIwJ,EAAWyD,WAAW3M,KAAI,SAAC2M,GAChC,OACE,eAAC,GAAM,CAAuB1M,MAAO0M,EAAW/M,KAAK,SAClD+M,EAAWtR,MADDsR,EAAW/M,KAI5B,QAIJ,KACe,SAAlB4J,EACC,eAAC,KAAKjK,KAAI,CAACJ,KAAK,WAAWK,MAAM,eAAeE,UAAQ,WACtD,eAAC,IAAM,UAEIwJ,EAAW0D,SAAS5M,KAAI,SAAC4M,GAC9B,OACE,eAAC,GAAM,CAAqB3M,MAAO2M,EAAShN,KAAK,SAC9CgN,EAASvR,MADCuR,EAAShN,KAI1B,QAIJ,QAEJ,KAEJ,eAAC,KAAKL,KAAI,CACRJ,KAAK,WACLK,MAAM,kBACNC,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,EAAG1L,QAAS,mDACnB,CAAEiM,IAAK,EAAGjM,QAAS,qDAErBD,UAAQ,WAER,eAAC,KAAK,CACJ+M,UAAW,EACX5K,SAAU,SAACiK,GACT9B,EAAe,2BACVD,GAAW,IACdD,SAAU1O,EAAQ0Q,EAAEC,OAAO9L,MAAO,IAAK,KAE3C,MAGJ,eAAC,KAAKV,KAAI,CACRJ,KAAK,eACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,0CAC3B,CAAE0L,IAAK,EAAG1L,QAAS,uDAErBH,MAAM,qBACNE,UAAQ,WAER,eAAC,KAAK,CACJ2L,IAAK,GACLO,IAAK,EACLhM,KAAK,SACLiC,SAAU,SAACiK,GACT9B,EAAe,2BACVD,GAAW,IACdjE,aAAcD,SAASiG,EAAEC,OAAO9L,SAEpC,MAGJ,eAAC,KAAKV,KAAI,CAACJ,KAAK,OAAOK,MAAM,WAAM0L,aAAcC,OAAUzL,UAAQ,WACjE,eAAC,KAAU,CAAC0L,UAAQ,EAACyB,OAAO,WAG9B,eAAC,KAAKtN,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,kBAAaE,UAAQ,WACzD,eAAC,IAAM,UAEIwJ,EAAW4D,cAAc9M,KAAI,SAAC8M,GACnC,OACE,eAAC,GAAM,CAA0B7M,MAAO6M,EAAclN,KAAK,SACxDkN,EAAczR,MADJyR,EAAclN,KAI/B,QAKN,eAAC,KAAKL,KAAI,CACRJ,KAAK,eACLM,MAAO,CAAC,CAAE4L,IAAK,IAAK1L,QAAS,uDAC7BH,MAAM,mBACNE,UAAQ,WAER,eAAC,KAAMqN,SAAQ,CAACN,UAAW,QAE7B,eAAC,KAAKlN,KAAI,CAACJ,KAAK,eAAeK,MAAM,oBAAeE,UAAQ,WAC1D,eAAC,IAAM,UAEIwJ,EAAW8D,aAAahN,KAAI,SAACgN,GAClC,OACE,eAAC,GAAM,CAAyB/M,MAAO+M,EAAapN,KAAK,SACtDoN,EAAa3R,MADH2R,EAAapN,KAI9B,QAIN,eAAC,KAAKL,KAAI,CAACJ,KAAK,gBAAgBK,MAAM,UAAS,SAC7C,eAAC,KAAK,CAAC4L,UAAQ,EAACG,YAAa9F,MAE/B,eAAC,KAAKlG,KAAI,CAACwL,WAAY,CAAE5H,KAAM,GAAIC,OAAQ,GAAI,SAC7C,eAAC,IAAM,CAAC7H,KAAK,QAAQ6G,OAAK,EAACxC,KAAK,UAAUqN,SAAS,SAAQ,2CAK/D,sBAAKtL,MAAO,CAAEyI,QAAS,QAASxI,MAAO,eAAgB,SACrD,eAAC,GAAM,CAAC3B,MAAOmJ,EAAa8D,SAAS,MAAM3R,KAAM,UAgFzD,EC7qBAL,IAAM0U,OAAOC,MAEb3U,IAAMC,OAAO,MAEb,IAAMuN,GAASC,EAAQ,IAEhB,SAASmH,GAAiBvH,EAAKtI,GACpC,GAAIA,EACF,OACE,uBAAK0B,MAAO,CAAEyI,QAAS,QAAS,UAC9B,qBAAGzI,MAAO,CAAEoO,WAAY,OAAQC,YAAa,OAAQ,UAAEzH,EAAG,OAC1D,6BAAItI,MAIZ,CAAC,I,MAEKgQ,GAAW,kDACf,WAAY5B,GAAQ,IAAD,QAM4C,OAN5C,qBACjB,cAAMA,IAQRnF,WAAapL,KAAKC,MAAoC,QAA/B,EAACC,aAAaC,QAAQ,iBAAS,QAAI,MAAM,EA2JhEiS,qBAAuB,SAAChP,GAAS,MAAM,CACrCiP,eAAgB,gBACdC,EAAe,EAAfA,gBACAC,EAAY,EAAZA,aACAC,EAAO,EAAPA,QACAC,EAAY,EAAZA,aAAY,OAEZ,uBAAK5O,MAAO,CAAE6O,QAAS,GAAI,UACzB,eAAC,KAAK,CACJC,IAAK,SAACC,GACJ,EAAKC,YAAcD,CACrB,EACAnF,YAAW,iBAAYrK,GACvBjB,MAAOoQ,EAAa,GACpBxO,SAAU,SAACiK,GAAC,OACVsE,EAAgBtE,EAAEC,OAAO9L,MAAQ,CAAC6L,EAAEC,OAAO9L,OAAS,GAAG,EAEzD2Q,aAAc,kBACZ,EAAKC,aAAaR,EAAcC,EAASpP,EAAU,EAErDS,MAAO,CACLC,MAAO,IACPmN,aAAc,EACd3E,QAAS,WAGb,eAAC,IAAM,CACLxK,KAAK,UACL2C,QAAS,kBAAM,EAAKsO,aAAaR,EAAcC,EAASpP,EAAU,EAClE3F,KAAK,QACLoG,MAAO,CAAEC,MAAO,GAAIoO,YAAa,GAAI,iBAIvC,eAAC,IAAM,CACLzN,QAAS,kBAAM,EAAKuO,YAAYP,EAAa,EAC7ChV,KAAK,QACLoG,MAAO,CAAEC,MAAO,IAAK,iCAInB,EAERmP,WAAY,SAACC,GAAQ,OACnB,eAACC,GAAA,EAAc,CACbrR,KAAK,SACL+B,MAAO,CAAEuP,MAAOF,EAAW,eAAYG,IACvC,EAEJC,SAAU,SAACnR,EAAOwB,GAAM,OACtBA,EAAOP,GAAWmQ,WAAWnL,cAAcoL,SAASrR,EAAMiG,cAAc,EAC1EqL,2BAA4B,SAACpT,GACvBA,GACFqT,YAAW,kBAAM,EAAKb,YAAYc,QAAQ,GAE9C,EACAjQ,OAAQ,SAACnG,GAAI,OAAKA,CAAI,EACvB,EAAE,EAEHwV,aAAe,SAACR,EAAcC,EAASpP,GACrCoP,IACA,EAAK5N,SAAS,CACZgP,WAAYrB,EAAa,GACzBsB,eAAgBzQ,GAEpB,EAAE,EAEF4P,YAAc,SAACP,GACbA,IACA,EAAK7N,SAAS,CAAEgP,WAAY,IAC9B,EAAE,EAEFhR,MAAQ,CACNkR,gBAAiB,GACjBC,mBAAmB,EACnBC,QAAS,CACP,CACE,UACA,kBACA,sBACA,kBACA,UACA,QACA,oBACA,UAGJC,aAAc,CAAC,EACfvO,SAAS,EACTjI,KAAM,QACNyW,IAAK,OACLC,OAAQ,cACRC,UAAU,EACVpV,KAAM,GACNmE,QAAS,CAAC,aAENxC,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE0I,SAASxI,cAAcD,EAAEyI,SAAS,GACnC,EAAKoG,qBAAqB,aAAW,aAGxCzR,MAAO,kBACPyC,UAAW,WACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE+Q,SAAS7Q,cAAcD,EAAE8Q,SAAS,GACnC,EAAKjC,qBAAqB,aAAW,aAGxCzR,MAAO,aACPyC,UAAW,gBACR,EAAKgP,qBAAqB,iBAAe,aAG5CzR,MAAO,WACPyC,UAAW,WACR,EAAKgP,qBAAqB,YAAU,aAGvCzR,MAAO,UACPyC,UAAW,gBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE4E,cAAc1E,cAAcD,EAAE2E,cAAc,GAC7C,EAAKkK,qBAAqB,kBAAgB,yBAG7CzR,MAAO,kBACPyC,UAAW,kBACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE2E,gBAAgBzE,cAAcD,EAAE0E,gBAAgB,GACjD,EAAKmK,qBAAqB,oBAAkB,IAC/C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKM,EAAWN,IAAW,6BAGrDoD,MAAO,SACP0C,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAEgR,eAAiB/Q,EAAE+Q,cAAc,GAClC,EAAKlC,qBAAqB,iBAAe,IAC5C1O,OAAQ,SAACnG,EAAcmK,GAAU,OAC/B,8BACGhK,OAAOgK,EAAMM,aAAeN,EAAM4M,gBACjC,IACA5M,EAAMM,cACL,IACN,aAGDrH,MAAO,sBACPyC,UAAW,OAEXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCnG,IAAMkG,EAAEsE,KAAM,sBAAsB2M,OACpCnX,IAAMmG,EAAEqE,KAAM,sBAAsB2M,MAAM,GACzC,EAAKnC,qBAAqB,SAAO,yBAIpCzR,MAAO,oBACPyC,UAAW,eACXC,OAAQ,SAACC,EAAiBC,GAAe,OACvCD,EAAE4L,aAAa1L,cAAcD,EAAE2L,aAAa,GAC3C,EAAKkD,qBAAqB,iBAAe,IAC5C1O,OAAQ,SAACnG,GAAY,OAAK,8BAAKA,EAAKS,eAAmB,MAG3D,EA0CFwW,kBAAoB,WAClB,EAAKC,YACL1L,KAAqBlK,MAAK,SAACqK,GACrBA,GACF,EAAKtE,SAAS,CAAEkP,gBAAiB5K,GAErC,GACF,EAzXE,EAAKue,MACgB,QADX,EACR,EAAKlX,MAAMa,gBAAQ,aAAnB,EAAqB6G,SAASrI,MAAM,MACf,QAAnB,IAAKW,MAAMa,gBAAQ,aAAnB,EAAqB6G,SAASrI,MAAM,KAAK5K,QAAS,GAEtD,EAAK0P,mBAAqB,EAAKA,mBAAmBC,KAAK,iBAAM,CAC/D,CAkmBC,OAlmBA,+CAID,SAAmBhR,GAAS,IAAD,OACzB,OAAOiR,OAAOC,KAAK9P,KAAKnC,MAAMqR,cAAc/R,KAAI,SAAC4S,GAC/C,OAAOA,GAAUnR,EAAO2F,GACpB,EAAK1G,MAAMqR,aAAaa,GAAQ5S,KAAI,SAAC4S,GAAY,IAAD,EAC9C,OACE,uCACE,uBACEjR,MAAO,CACLC,MAAO,MACPU,UAAW,GACX8H,QAAS,OACTsF,cAAe,MACfrF,eAAgB,iBAChB,UAEF,iCACGyF,GACC,UACAnU,EAAWiX,EAAO5M,gBAEnB8J,GACC,gBACAnU,EAAWiX,EAAOC,cAEnB/C,GACC,uBACA3T,EAAqByW,EAAO1D,WACzB0D,EAAOE,QAAO,YAAQF,EAAOE,QAAO,KAAM,MAE9ChD,GACC,6BACA9T,EAAgB4W,EAAOjE,sBAG3B,uBAAKhN,MAAO,CAAEC,MAAO,eAAgB,UACd,aAApBgR,EAAO1D,UACY,UAApB0D,EAAO1D,UACiB,SAAxB,EAAKb,MAAMrT,KAAK+E,KACd,eAAC,IAAM,CACL4B,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClChC,KAAK,UACL2C,QAAS,WACP,EAAKG,SAAS,CACZmP,mBAAmB,EACnBkB,cAAe,CACb/M,cAAe4M,EAAO5M,cACtB2B,SAAUlG,EAAO2F,KAGvB,EAAE,uCAIF,KACJ,eAAC,IAAM,CACLzF,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClCW,QAAS,WACP,IAAI6G,EACFwJ,EAAO5M,cAAgB,IAAMvE,EAAOuR,YACtC,EAAKnI,YAAYzB,EAAawJ,EAAO5M,cACvC,EAAE,iCAKJ,eAAC,IAAM,CACLrE,MAAO,CAAEoN,aAAc,GAAInN,MAAO,QAClCW,QAAS,WACPvD,QAAQC,IAAIwC,EAAO2F,IACnB,EAAK1E,SAAS,CACZuQ,qBAAqB,EACrBC,eAAgBN,EAAOxL,GACvB2L,cAAe,CACb/M,cAAe4M,EAAO5M,cACtB2B,SAAUlG,EAAO2F,KAGvB,EAAE,yDAIHwL,EAAOO,aACN,eAAC,IAAM,CACL/Q,OAAK,EACLG,QAAS,WACP0F,IACG1L,IAAI,2BAA4B,CAC/B6W,aAAc,SAEfzW,MAAK,SAACC,GACL,IAAMyW,EAAY1K,EAAQ,KAEtB2K,EAAS,IAAIC,WACjBD,EAAOE,kBAAkB5W,EAAIE,MAC7BwW,EAAOG,OAAS,SAAU3H,GACxB,IAAM4H,EAAW,IAAIC,KAAQC,SAC7BF,EAASG,KAAKC,KAAKhI,EAAEC,OAAOgI,QAAQpX,MAAK,WACvC,IAAIqX,EAAYN,EAASO,aAAa,GAClCvQ,EAAMsQ,EAAUE,OAAO,IAC3BxQ,EAAIyQ,QAAQ,GAAGlU,MAAQ2S,EAAOO,aAC9BzP,EAAI0Q,SAEJ,IAAIC,EAAOL,EAAUE,OAAO,GAC5BG,EAAKF,QAAQ,GAAGlU,MAAQ2S,EAAO5M,cAC/BqO,EAAKF,QAAQ,GAAGlU,MAAQ2S,EAAO0B,aAC/BD,EAAKF,QAAQ,GAAGlU,MAAQjE,EACtB4W,EAAO2B,WAETF,EAAKD,SAELV,EAASG,KAAKW,cAAc7X,MAAK,SAAC8X,GAChC,IAAMC,EAAO,IAAIC,KAAK,CAACF,GAAS,CAC9B7U,KAAM,oFAGRyT,EAAUuB,OAAOF,EAAM,cACzB,GACF,GACF,CACF,GACJ,EAAE,yBAIF,KACsB,UAAV,QAAf,IAAKrG,MAAMrT,YAAI,aAAf,EAAiB+E,OACE,UAApB6S,EAAO1D,SACL,eAAC,IAAU,CACTzQ,MAAM,6FACNyD,UAAW,kBAAM0F,GAAoBgL,EAAOxL,GAAG,EAC/C1I,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CACL0D,QAAM,EACND,OAAK,EACLT,MAAO,CAAEoN,aAAc,IACvBnP,KAAK,UAAS,iCAKhB,WAGR,eAAC,IAAO,MAGd,IACA,IACN,GACF,GAAC,yBA0KD,SAAYK,EAAe4U,GACzB,IAAIzH,EAAcC,OAAOC,KAAK,GAAI,GAAI,2BAElCK,EAAMC,0BACR,uBAAKjM,MAAO,CAAEC,MAAO,OAAQiM,OAAQ,QAAS,UAC5C,eAAC,GAAM,CACL5N,MAAOA,EACP0B,MAAO,CAAEkM,OAAQ,OAAQjM,MAAO,OAAQkM,OAAQ,OAChDZ,SAAS,QAEX,oBAAGvL,MAAO,CAAEmM,OAAQ,IAAK,SAAE+G,QAGpB,OAAXzH,QAAW,IAAXA,KAAaW,SAASC,MAAMxS,OAAOmS,IAEnCP,EAAYW,SAASE,KAAKtM,MAAMmM,OAAS,EAC9B,OAAXV,QAAW,IAAXA,KAAaW,SAASG,QACX,OAAXd,QAAW,IAAXA,KAAae,OACf,GAAC,gCAED,SAAmB2G,GAEfjS,KAAKwL,MAAM0G,mBAAqBD,EAAUC,kBAC1ClS,KAAKwL,MAAM2G,oBAAsBF,EAAUE,mBAE3CnS,KAAK0P,WAET,GAAC,uBAED,WAAa,IAAD,OACV1P,KAAKwL,MAAM0G,kBjCrLR,SAAkC,GAAD,gCiCsLlC2R,CAAmB7jB,KAAK0iB,OAAO5oB,MAAK,SAACoX,GACnC,IAAImB,EAAmBnB,EAAO/T,KAAI,SAACwF,GAEjC,OADAA,EAAME,KAAOxK,IAAMsK,EAAME,MAAMxJ,OAAO,sBAC/BsJ,CACT,IACA,EAAK9C,SAAS,CAAE5F,KAAMoY,GACxB,GACJ,GAAC,oBAYD,WAAU,IAAD,WACDxU,EAAQmC,KAAKnC,MAEnB,OACE,uBACEiB,MAAO,CACLC,MAAO,OACPoJ,SAAU,OACV6C,OAAQ,OACRwH,UAAW,QACX,UAEF,eAAC,IAAK,CACJ5R,OAAQ,SAACC,GAAG,MAAK,MAAQA,EAAI0D,EAAE,EAC/B7L,KAAK,QACLiI,QAASX,KAAKnC,MAAM8C,QACpB8R,WAAY,CACVC,kBAAmB,SAAC9T,GAAM,uCACxB,uBAEEE,MAAO,CAAE6T,WAAY,QAAS,UAE7B1F,GAAiB,aAAQrO,EAAOuR,aAChClD,GAAiB,QAASrO,EAAOiE,MACjCoK,GACC,QAGI,QAHG,EACP,EAAK5G,WAAWQ,MAAMrB,QACpB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiI,KAAK,IAC9B,UAAE,aAFJ,EAEMrO,MAEPyU,GAAiB,kBAAcrO,EAAOqI,UACtCgG,GACC,4BACAtU,OAAOiG,EAAOqE,eAEfgK,GACC,MAC6D,QAA7D,IAAK5G,WAAWtJ,KAAKyI,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAAE,UAAE,OAA7D,EACIvE,KAGI,QAHA,EACJ,EAAK6N,WAAWtJ,KAAKyI,QACnB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAC7B,UAAE,aAFJ,EAEMvE,KAGF,QAHM,EACV,EAAK6N,WAAWkD,aAAa/D,QAC3B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO7B,IAAI,IAC7B,UAAE,aAFJ,EAEMvE,MAEXyU,GACC,WAGI,QAHM,EACV,EAAK5G,WAAWS,YAAYtB,QAC1B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOkI,WAAW,IACpC,UAAE,aAFJ,EAEMtO,MAEPyU,GACC,eACArO,EAAOmE,UAAYnE,EAAOmE,UAAY,MAAQ,MAE/CkK,GACC,kBAGI,QAHa,EACjB,EAAK5G,WAAWmD,iBAAiBhE,QAC/B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO4K,gBAAgB,IACzC,UAAE,aAFJ,EAEMhR,MAEPyU,GACC,QAC6D,QADtD,EACP,EAAK5G,WAAWW,KAAKxB,QAAO,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOoI,IAAI,IAAE,UAAE,aAA7D,EACIxO,MAELyU,GAAiB,uBAAcrO,EAAOkE,MACtCmK,GACC,YAGI,QAHO,EACX,EAAK5G,WAAWsD,UAAUnE,QACxB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO+K,SAAS,IAClC,UAAE,aAFJ,EAEMnR,MAEPyU,GAAiB,8BAAgBrO,EAAOgU,eACxC3F,GACC,eAGI,QAHO,EACX,EAAK5G,WAAWoD,SAASjE,QACvB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO6K,QAAQ,IACjC,UAAE,aAFJ,EAEMjR,MAEPyU,GACC,WAGI,QAHM,EACV,EAAK5G,WAAWU,SAASvB,QACvB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOmI,QAAQ,IACjC,UAAE,aAFJ,EAEMvO,MAEPyU,GAAiB,oBAAgBrO,EAAOiU,YACxC5F,GACC,kBAGI,QAHQ,EACZ,EAAK5G,WAAW4D,cAAczE,QAC5B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOqL,aAAa,IACtC,UAAE,aAFJ,EAEMzR,MAEPyU,GACC,cACAnU,EAAW8F,EAAOkJ,gBAEnBmF,GACC,aAGI,QAHQ,EACZ,EAAK5G,WAAWwD,aAAarE,QAC3B,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAOiL,YAAY,IACrC,UAAE,aAFJ,EAEMrR,MAEPyU,GACC,UAGI,QAHK,EACT,EAAK5G,WAAWqD,UAAUlE,QACxB,SAAChH,GAAC,OAAKA,EAAEzB,OAAS6B,EAAO8K,SAAS,IAClC,UAAE,aAFJ,EAEMlR,MAEPyU,GAAiB,2BAAyBrO,EAAOkU,cAClD,eAAC,IAAM,CACLhU,MAAO,CAAEqO,YAAa,QACtBpQ,KAAK,UACL2C,QAAS,WACP8D,GAA4B5E,EAAO2F,IAAIzK,MACrC,SAACoV,GACC,EAAKrP,SAAS,CACZqP,aAAa,2BACR,EAAKrR,MAAMqR,cAAY,mBACzBtQ,EAAO2F,GAAK2K,KAGnB,GAEJ,EAAE,sCAIH,EAAKS,mBAAmB/Q,GACN,cAAlBA,EAAO5E,QACiB,UAAV,QAAf,IAAKwR,MAAMrT,YAAI,aAAf,EAAiB+E,OAChB,EAAKsO,MAAM0G,iBAeR,KAdF,eAAC,IAAU,CACTtW,MAAM,iEACNyD,UAAW,kBAAMwF,GAAYjG,EAAO2F,GAAG,EACvC1I,OAAO,OACPC,WAAW,aAAO,SAElB,eAAC,IAAM,CACL0D,QAAM,EACNV,MAAO,CAAEoN,aAAc,GAAIiB,YAAa,IACxCpQ,KAAK,UAAS,2CAOpB,eAAC,IAAI,CACH+B,MAAO,CACLyI,QACE3I,EAAOqE,eAAiBrE,EAAO2Q,gBAAkB,OACnDlB,MAAO,QACPnC,aAAc,GACd6G,gBAAiB,UACjBpF,QAAS,MACTqF,aAAc,OAEhBC,GAAI,CACFC,SAAS,cAAD,OAAgBtU,EAAOuE,gBAC/B,0BA9IC,iBAAmBvE,EAAO2F,GAkJ3B,GAGV4O,WAAY,CAAEC,gBAAiB,GAAIC,SAAU,CAAC,gBAC9CjV,QAAS4B,KAAKnC,MAAMO,QACpB0C,WAAYjD,EAAM5D,OAGpB,gBAAC,KAAK,CACJ2B,OAC0B,QAAxB,EAAAoE,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,eAAgB,8BAE5C7H,QAAS0E,KAAKnC,MAAMmR,kBACpBjT,KAAM,WACJ,EAAK8D,SAAS,CAAEmP,mBAAmB,IACnC9K,GAAe,CACboP,OAAQ,EAAKzV,MAAM0V,eACnBC,OAAQ,EAAK3V,MAAMqS,eAEvB,EACA1U,SAAU,WACR,EAAKqE,SAAS,CAAEmP,mBAAmB,GACrC,EAAE,UAEF,wGACA,eAAC,IAAM,CACLyE,YAAU,EACVC,iBAAiB,WACjB/K,aAAc,SAACgL,EAAO9K,GAAM,OAC1BA,EAAO+K,SAASvQ,cAAcyF,QAAQ6K,EAAMtQ,gBAAkB,CAAC,EAEjEvE,MAAO,CAAEC,MAAO,QAChBoK,SAAU,SAAC/L,GACT,EAAKyC,SAAS,CACZ0T,eAAgB,CACdpQ,cAAe/F,EAAMyN,MAAM,KAAK,GAChC/F,SAAU+O,OAAO7Q,SAAS5F,EAAMyN,MAAM,KAAK,MAGjD,EACAnC,YAAY,gCACZoL,0BAA0B,EAAK,SAE9B9T,KAAKnC,MAAMkR,gBAAgB5R,KAAI,SAAC4W,GAC/B,OACE,eAAC,IAAOtW,OAAM,CACZL,MAAO2W,EAAQ5Q,cAAgB,IAAM4Q,EAAQjP,SAAS,SAErDiP,EAAQ5Q,cACP,IACA4Q,EAAQzE,SACR,IACAxW,EAAWib,EAAQ1H,WAG3B,SAGHrM,KAAKnC,MAAMuS,oBACV,eAAC,GAAY,CACX7D,UAAWvM,KAAKnC,MAAMuS,oBACtBzM,WAAY3D,KAAKnC,MAAMwS,eACvBlN,cAAuC,QAA1B,EAAEnD,KAAKnC,MAAMqS,qBAAa,aAAxB,EAA0B/M,cACzCqJ,aAAc,SAAClR,GAAO,OACpB,EAAKuE,SAAS,CAAEuQ,oBAAqB9U,GAAU,IAGjD,OAGV,KAAC,EA1mBc,CAAS0Y,IAAM/S,WAinBjBgT,gBAJS,SAACpW,EAAOqW,GAAQ,MAAM,CAC5C/b,KAAM0F,EAAM3F,KAAKC,KAClB,GAEc8b,CAAyB7G,IC5mBxC/U,IAAMC,OAAO,MAygBN,IAAMwrB,GAAgBlD,IAAOC,IAAG,+DAK1BvZ,GAAOsZ,IAAOC,IAAG,wLAQfkD,GAphBf,WACE,IAAM/L,EAAUC,cACVpW,EAAWmiB,cACX7rB,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAE9D,EAA0BmO,mBAAoB,SAAQ,mBAA/C2d,EAAK,KAAEC,EAAQ,KAKtB,OACE,gBAACJ,GAAa,WACZ,gBAAC,IAAI,CACHK,oBAAqB,CAAC3Z,OAAO6B,SAAS+X,KAAKvZ,MAAM,KAAK,IACtDnL,QAAS,SAACxD,GACR,OAAQA,EAAKwJ,KACX,IAAK,uBACHsS,EAAQ7B,KAAK,wBACb,MACF,IAAK,qBACH6B,EAAQ7B,KAAK,sBACb,MACF,IAAK,oBACH6B,EAAQ7B,KAAK,qBACb,MACF,IAAK,kBACH6B,EAAQ7B,KAAK,mBACb,MACF,IAAK,eACH6B,EAAQ7B,KAAK,gBACb,MACF,IAAK,cACH6B,EAAQ7B,KAAK,gBACb,MACF,IAAK,UACH6B,EAAQ7B,KAAK,YACb,MACF,IAAK,QACH6B,EAAQ7B,KAAK,UACb,MACF,IAAK,aACH6B,EAAQ7B,KAAK,eACb,MACF,IAAK,gBACH6B,EAAQ7B,KAAK,kBACb,MACF,IAAK,eACH6B,EAAQ7B,KAAK,iBACb,MACF,IAAK,eACH6B,EAAQ7B,KAAK,iBACb,MACF,IAAK,oBACH6B,EAAQ7B,KAAK,2BACb,MACF,IAAK,gBACH6B,EAAQ7B,KAAK,uBACb,MACF,IAAK,gBACH6B,EAAQ7B,KAAK,uBACb,MACF,IAAK,kBACH6B,EAAQ7B,KAAK,aACb,MACF,IAAK,iBACH6B,EAAQ7B,KAAK,mBACb,MACF,IAAK,kBACH6B,EAAQ7B,KAAK,oBACb,MACF,IAAK,SACH6B,EAAQ7B,KAAK,WACb,MACF,IAAK,qBACH6B,EAAQ7B,KAAK,uBACb,MACF,IAAK,uBACH6B,EAAQ7B,KAAK,yBACb,MAEF,IAAK,kBACH6B,EAAQ7B,KAAK,oBACb,MACF,IAAK,cACH6B,EAAQ7B,KAAK,gBACb,MACF,IAAK,eACH6B,EAAQ7B,KAAK,iBACb,MACF,IAAK,cACH6B,EAAQ7B,KAAK,gBACb,MACF,IAAK,oBACH6B,EAAQ7B,KAAK,sBACb,MACF,IAAK,gBACH6B,EAAQ7B,KAAK,kBACb,MACF,IAAK,qBACH6B,EAAQ7B,KAAK,uBACb,MACF,IAAK,YACH6B,EAAQ7B,KAAK,cACb,MACF,IAAK,YACH6B,EAAQ7B,KAAK,cACb,MAEF,QACE6B,EAAQ7B,KAAK,KArGvB+N,GAwGkB,EAxGD,OAAS,QAyGtB,EACA/X,KAAK,aACL8X,MAAOA,EAAM,UAEb,eAAC,IAAKvnB,KAAI,CACRoC,MAAO,CAAE8V,MAAO,SAEhBnU,KAAM,eAAC4jB,EAAA,EAAmB,IAAI,SAE7BhsB,MAAQgB,OAAO,qBAHZ,aAKS,UAAdlB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,uCACE,eAAC,IAAKR,KAAI,CAAkB+D,KAAM,eAAC6jB,EAAA,EAAY,IAAI,qBAApC,cAGA,UAAdnsB,EAAK+E,KACJ,eAAC,IAAKR,KAAI,CAAa+D,KAAM,eAAC8jB,EAAA,EAAY,IAAI,kDAA/B,SAGb,KACW,UAAdpsB,EAAK+E,KACJ,eAAC,IAAKR,KAAI,CAAmB+D,KAAM,eAAC+jB,EAAA,EAAsB,IAAI,sCAA/C,eAGb,KACJ,gBAAC,IAAKC,QAAO,CAEXhkB,KAAM,eAACikB,EAAA,EAAgB,IACvB9oB,MAAM,kBAAY,UAElB,eAAC,IAAKc,KAAI,CAAc+D,KAAM,eAACikB,EAAA,EAAgB,IAAI,mCAApC,UAGf,eAAC,IAAKhoB,KAAI,CAAsB+D,KAAM,eAACikB,EAAA,EAAgB,IAAI,uCAA5C,kBAGf,eAAC,IAAKhoB,KAAI,CAAuB+D,KAAM,eAACikB,EAAA,EAAgB,IAAI,8CAA7C,mBAGf,eAAC,IAAKhoB,KAAI,CAAqB+D,KAAM,eAACkkB,EAAA,EAAmB,IAAI,oCAA9C,iBAGf,eAAC,IAAKjoB,KAAI,CAAoB+D,KAAM,eAACmkB,EAAA,EAAmB,IAAI,4BAA7C,kBAhBX,oBAqBN,KACW,UAAdzsB,EAAK+E,MACO,YAAb/E,EAAK+E,MACQ,UAAb/E,EAAK+E,MACQ,UAAb/E,EAAK+E,KACH,uCACE,gBAAC,IAAKunB,QAAO,CAEXhkB,KAAM,eAACikB,EAAA,EAAgB,IACvB9oB,MAAM,YAAQ,UAEd,eAAC,IAAKc,KAAI,CAAuB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,+BAA1C,mBAGf,eAAC,IAAKnoB,KAAI,CAAoB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4BAAvC,gBAGf,eAAC,IAAKnoB,KAAI,CAAyB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,uCAA5C,qBAGf,eAAC,IAAKnoB,KAAI,CAAqB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,iCAAxC,iBAGf,eAAC,IAAKnoB,KAAI,CAAqB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,iCAAxC,mBAhBX,sBAqBN,eAAC,IAAKnoB,KAAI,CAAkB+D,KAAM,eAACqkB,EAAA,EAAa,IAAI,wBAArC,iBAIf,KACW,iBAAd3sB,EAAK+E,KACJ,eAAC,IAAKR,KAAI,CAAoB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4BAAvC,gBAGb,KACW,UAAd1sB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,uCACE,gBAAC,IAAKunB,QAAO,CAEXhkB,KAAM,eAACikB,EAAA,EAAgB,IACvB9oB,MAAM,wBAAa,UAEnB,eAAC,IAAKc,KAAI,CAA0B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAA7C,sBAGf,eAAC,IAAKnoB,KAAI,CAA4B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,6CAA/C,wBAGf,eAAC,IAAKnoB,KAAI,CAA0B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAA7C,sBAGf,eAAC,IAAKnoB,KAAI,CAAiB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4BAApC,eAbX,uBAkBN,gBAAC,IAAKJ,QAAO,CAEXhkB,KAAM,eAACikB,EAAA,EAAgB,IACvB9oB,MAAM,0BAAiB,UAEvB,eAAC,IAAKc,KAAI,CAAuB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,8CAA1C,mBAGf,eAAC,IAAKnoB,KAAI,CAAoB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,0CAAvC,gBAGf,eAAC,IAAKnoB,KAAI,CAAmB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4CAAtC,eAGf,eAAC,IAAKnoB,KAAI,CAAmB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAAtC,eAGf,eAAC,IAAKnoB,KAAI,CAAyB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4CAA5C,qBAGf,eAAC,IAAKnoB,KAAI,CAAqB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,iDAAxC,mBAnBX,sBAwBN,KACW,UAAd1sB,EAAK+E,MACQ,WAAd/E,EAAK+E,MACS,eAAd/E,EAAK+E,MACS,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAKR,KAAI,CAA0B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAA7C,sBAGb,KACW,SAAd1sB,EAAK+E,KACJ,uCACE,eAAC,IAAKR,KAAI,CAAkB+D,KAAM,eAAC6jB,EAAA,EAAY,IAAI,qBAApC,cAGf,eAAC,IAAK5nB,KAAI,CAAoB+D,KAAM,eAACmkB,EAAA,EAAmB,IAAI,4BAA7C,gBAGf,eAAC,IAAKloB,KAAI,CAA0B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAA7C,yBAIf,KACW,UAAd1sB,EAAK+E,KACJ,qCACE,gBAAC,IAAKunB,QAAO,CACXR,MAAOA,EAEPxjB,KAAM,eAACmkB,EAAA,EAAmB,IAC1BhpB,MAAM,uBAAgB,UAEtB,eAAC,IAAKc,KAAI,CAAuB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,wCAA1C,mBAGf,eAAC,IAAKnoB,KAAI,CAA0B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,0CAA7C,sBAGf,eAAC,IAAKnoB,KAAI,CAAyB+D,KAAM,eAACokB,EAAA,EAAa,IAAI,2BAA5C,qBAGf,eAAC,IAAKnoB,KAAI,CAA4B+D,KAAM,eAACokB,EAAA,EAAa,IAAI,4BAA/C,0BAbX,kBAkBN,KACJ,eAAC,IAAKnoB,KAAI,CACRgD,QAAS,WACPmC,EnCvTV,iDAAO,WAAOA,GAAkB,2EAC9BC,eAAeijB,WAAW,QAC1BljB,EAAS,CAAE9E,KAAMoE,KAAU,2CAC5B,mDAHD,GmCwTQ,EACArC,MAAO,CAAE8V,MAAO,SAEhBnU,KAAM,eAACukB,EAAA,EAAc,IAAI,wCADrB,aAMR,gBAAC,IAAM,WACU,UAAd7sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,wBAAuB,SACjC,eAAC,GAA0B,MAE3B,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,gBAAe,SACzB,eAAC,GAAkB,MAEnB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,mBAAkB,SAC5B,eAAC,GAAqB,MAEtB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,qBAAoB,SAC9B,eAAC,GAAuB,MAExB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,sBAAqB,SAC/B,eAAC,GAAwB,MAEzB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CACJ+nB,KAAK,6BACLtmB,OAAQ,SAAC6M,GAAK,OAAK,eAAC0Z,GAAmB,eAAK1Z,GAAS,IAErD,KACW,UAAdrT,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,sBAAsBE,OAAK,WACrC,eAAC,GAAwB,MAEzB,KACW,UAAdhtB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,aAAaE,OAAK,WAC5B,eAACC,GAAe,MAEhB,KACW,UAAdjtB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,eAAc,SACxB,eAAC,GAAiB,MAElB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,4BAA2B,SACrC,eAAC,GAAe,MAEhB,KACW,UAAd9sB,EAAK+E,KACJ,eAAC,IAAK,CAAC+nB,KAAK,SAAQ,SAClB,eAAC,GAAmB,MAEpB,KACW,UAAd9sB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,iBAAgB,SAC1B,eAAC,GAAmB,MAEpB,KACW,UAAd9sB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,cAAa,SACvB,eAAC,GAAc,MAEf,KACW,UAAd9sB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,iBAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,gBAAe,SACzB,eAAC,GAAkB,MAEnB,KACW,UAAd9sB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,SAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,gBAAe,SACzB,eAAC,GAAkB,MAEnB,KACW,UAAd9sB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,UAAS,SACnB,eAAC,GAAW,CAAC/S,kBAAkB,EAAOC,mBAAmB,MAEzD,KACW,UAAdha,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,kBAAiB,SAC3B,eAAC,GAAW,CAAC/S,kBAAkB,EAAMC,mBAAmB,MAExD,KACW,UAAdha,EAAK+E,KACJ,eAAC,IAAK,CACJ+nB,KAAK,wBACLtmB,OAAQ,SAAC6M,GAAU,OACjB,eAAC6Z,GAAoB,aACnBnT,kBAAkB,EAClBC,mBAAmB,GACf3G,GACJ,IAGJ,KACW,UAAdrT,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,mBAAkB,SAC5B,eAAC,GAAW,CAAC/S,kBAAkB,EAAOC,mBAAmB,MAEzD,KACW,UAAdha,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,YAAW,SACrB,eAAC,GAAmB,MAEpB,KACW,UAAd9sB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,0BAAyB,SACnC,eAAC,GAA4B,MAE7B,KACW,UAAd9sB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,sBAAqB,SAC/B,eAACK,GAAwB,MAEzB,KACW,UAAdntB,EAAK+E,MAAkC,aAAd/E,EAAK+E,KAC7B,eAAC,IAAK,CAAC+nB,KAAK,sBAAqB,SAC/B,eAACM,GAAwB,MAEzB,KACW,UAAdptB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,sBAAsBE,OAAK,WACrC,eAAC,GAAkB,CAACxG,UAAQ,MAE5B,KACW,UAAdxmB,EAAK+E,MACQ,WAAd/E,EAAK+E,MACS,eAAd/E,EAAK+E,MACS,SAAd/E,EAAK+E,KACH,qCACE,eAAC,IAAK,CAAC+nB,KAAK,IAAIE,OAAK,WACnB,eAAC,GAAkB,CAACxG,UAAQ,QAG9B,KACW,UAAdxmB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,wBAAwBE,OAAK,WACvC,eAAC,GAAkB,CAACxG,UAAU,MAE9B,KACW,UAAdxmB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,iBAAiBE,OAAK,WAChC,eAAC,GAAmB,MAEpB,KACW,UAAdhtB,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,mBAAmBE,OAAK,WAClC,eAAC,GAAc,CAACpoB,KAAK,gBAErB,KACW,UAAd5E,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,gBAAgBE,OAAK,WAC/B,eAAC,GAAc,CAACpoB,KAAK,YAErB,KACW,UAAd5E,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,qBAAqBE,OAAK,WACpC,eAAC,GAAc,CAACpoB,KAAK,cAErB,KACW,UAAd5E,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,eAAeE,OAAK,WAC9B,eAAC,GAAc,CAACpoB,KAAK,UAErB,KACW,UAAd5E,EAAK+E,MACQ,aAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,MACS,WAAd/E,EAAK+E,KACH,eAAC,IAAK,CAAC+nB,KAAK,eAAeE,OAAK,WAC9B,eAAC,GAAc,CAACpoB,KAAK,cAErB,KACJ,eAAC,IAAK,CAACkoB,KAAK,IAAG,SACb,eAAC,GAAgB,WAK3B,ECnjBgB1nB,IAAmBC,IAA3Bob,OAA2Bpb,IAAnBD,SAEVlB,IAF6BmB,IAAVE,MAEV,CACbuK,SAAU,CAAE3H,KAAM,IAClB4H,WAAY,CAAE5H,KAAM,MAEhBkb,GAAa,CACjBtT,WAAY,CAAE5H,KAAM,KAuDPklB,OApDf,WACE,IAAM3jB,EAAWmiB,cACjB,EAA8B1d,oBAAS,GAAhCmf,EAAsC,iBAAnB,GAU1B,OACE,eAAC,IAAM,UACL,eAAC,GAAO,UACN,eAAC,IAAG,CAACC,QAAQ,SAASC,MAAM,SAAQ,SAClC,gBAAC,KAAI,CAACC,UAAQ,EAAC9mB,MAAO,CAAEC,MAAO,cAAeiM,OAAQ,eAAgB,UACpE,eAAC,KAAI,UACH,sBAAKlM,MAAO,CAAEyI,QAAS,OAAQyD,OAAQ,OAAQjM,MAAO,OAAQyI,eAAgB,UAAW,SACvF,sBAAKzI,MAAM,MAAMiM,OAAO,MAAM6a,IAAI,cAAcC,IAAI,cAGxD,qBAAI9oB,UAAU,SAAQ,wBACtB,gBAAC,KAAI,2BAAKX,IAAM,IAAEC,KAAK,QAAQyL,SApBxB,SAAC1N,GAChB8B,QAAQC,IAAI,WAAY/B,GACxBwH,EAASF,GAAMtH,EAAOI,KAAMJ,EAAO0rB,UACrC,EAiB6D/J,eAftC,SAACC,GACtB9f,QAAQC,IAAI,UAAW6f,EACzB,EAa6Fxf,cAAc,EAAM,UACrG,eAAC,KAAKC,KAAI,CAACJ,KAAK,OAAOM,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,sDAAqC,SAC7F,eAAC,KAAK,CAAC4L,YAAY,mCAGrB,eAAC,KAAKhM,KAAI,CAACJ,KAAK,WAAWM,MAAO,CAAC,CAAEC,UAAU,EAAMC,QAAS,4CAA8B,SAC1F,eAAC,KAAM8E,SAAQ,CAAC8G,YAAY,aAG9B,gBAAC,KAAKhM,KAAI,2BAAK8e,IAAU,cACvB,eAAC,IAAM,CAAC1c,MAAO,CAAEoN,aAAc,QAAUnP,KAAK,UAAUqN,SAAS,SAASzJ,QAAS8kB,EAAqBlmB,OAAK,8BAG7G,eAAC,IAAI,CAAC0T,GAAG,kBAAkBjW,UAAU,SAAQ,sCAE/C,sBAAKA,UAAU,SAAQ,SACrB,oBAAGgpB,KAAK,2BAA0B,SAChC,sBAAKjnB,MAAM,OAAOiM,OAAO,KAAK6a,IAAI,WAAWC,IAAI,cAGrD,eAAC,KAAI,CAAC9oB,UAAU,SAAQ,gDAOtC,EC1DMX,GAAS,CACb4L,SAAU,CAAE3H,KAAM,IAClB4H,WAAY,CAAE5H,KAAM,KAEhBkb,GAAa,CACjBtT,WAAY,CAAE5H,KAAM,KAoDP2lB,OAjDf,WACE,IAAMpkB,EAAWmiB,cACjB,EAAsD1d,oBAAS,GAAM,mBAA9Dmf,EAAmB,KAoB1B,OApBkD,KAqBhD,gBAACne,GAAI,CAACxI,MAAO,CAAEkM,OAAQ,OAAQzD,QAAS,OAAQsF,cAAe,SAAUqZ,WAAY,MAAOtZ,WAAY,UAAW,UACjH,uDAEA,eAAC,KAAI,CAACgZ,UAAQ,EAAC9mB,MAAO,CAAEC,MAAO,IAAKiM,OAAQ,eAAgB,SAC1D,gBAAC,KAAI,2BAAK3O,IAAM,IAAEC,KAAK,QAAQyL,SAxBpB,SAAC1N,GAChBZ,IAAMa,KAAKX,GAAc,0BAA2B,CAClDmB,KAAMT,EAAOI,OAEZX,MAAK,SAACC,GACc,MAAfA,EAAIC,QACNiF,IAAM+B,QAAQ,CAAEpF,MAAO,2CAAmBuD,QAAS,yCAEvD,IACCjF,OAAM,SAAC6H,GACN9C,IAAMknB,QAAQ,CAAEvqB,MAAO,wBAAoBuD,QAAS,2CACtD,IACF0C,EAASF,GAAMtH,EAAOI,KAAMJ,EAAO0rB,UACrC,EAWyD/J,eATlC,SAACC,GACtB9f,QAAQC,IAAI,UAAW6f,EACzB,EAOyFxf,cAAc,EAAM,UACrG,eAAC,KAAKC,KAAI,CACRJ,KAAK,OACLM,MAAO,CACL,CAAEC,UAAU,EAAMC,QAAS,2CAC3B,CAAEC,KAAM,QAASD,QAAS,gDAC1B,SAEF,eAAC,KAAK,CAAC4L,YAAY,uBAGrB,eAAC,KAAKhM,KAAI,2BAAK8e,IAAU,aACvB,eAAC,IAAM,CAAC1c,MAAO,CAAEoN,aAAc,QAAUnP,KAAK,UAAUqN,SAAS,SAASzJ,QAAS8kB,EAAqBlmB,OAAK,iDAQzH,E,mBC9Be6mB,OAxBf,WACE5kB,KAEA,IAAMrJ,EAAOwT,aAAY,SAAC9N,GAAgB,OAAKA,EAAM3F,KAAKC,IAAI,IAG9D,OACE,eAAC,IAAU,CAACkuB,SAAS,aAAY,SAC/B,eAAC,KAAc,CACbpC,MAAO,CACLqC,UAAWrC,KAAMsC,kBACjB,SAEF,gBAAC,IAAM,WACL,eAAC,IAAK,CAACtB,KAAK,kBAAiB,SAC3B,eAAC,GAAoB,MAEvB,eAAC,IAAK,CAACA,KAAK,IAAG,SAAE9sB,EAAO,eAAC,GAAU,IAAM,eAAC,GAAW,YAK/D,E,UC7BaquB,GAAcC,aAAgB,CAAEvuB,KAAMmJ,K,+BCQtC1H,GAAc,uCAMrB+sB,GAAY5kB,eAAe1G,QAAQ,QACrC,CACElD,KAAM,CAAEC,KAAM8C,KAAKC,MAAMvC,OAAOmJ,eAAe1G,QAAQ,iBAEzDkT,EACStW,GAAQ2uB,aACnBH,GACAE,GACAE,aAAgBC,OAGlBC,IAASnoB,OACP,eAAC,KAAc,CAACrG,OAAQA,KAAO,SAC7B,eAAC,IAAQ,CAACN,MAAOA,GAAM,SACrB,eAAC,GAAG,QAGRkT,SAAS6b,eAAe,Q","file":"static/js/main.1804db43.chunk.js","sourcesContent":["import { store } from './index';\nimport CryptoJS from \"react-native-crypto-js\";\n\nimport 'dayjs/locale/tr'\nimport dayjs, { Dayjs } from 'dayjs';\ndayjs.locale('tr')\n\nexport function GetToken() {\n  const token: string = store.getState().auth.user.token;\n  return token;\n}\n\nexport const padLeft = function (text: string, padChar: string, size: number): string {\n  return (String(padChar).repeat(size) + text).substr(size * -1, size);\n};\n\nexport function Capitalize(s: String) {\n  if (s) {\n    return s?.charAt(0)?.toUpperCase() + s?.slice(1);\n  }\n  return '';\n}\n\nexport function EncryptQR(qrCode: string) {\n  let result = CryptoJS.AES.encrypt(qrCode, 'yigitcan').toString();\n\n  return result;\n}\n\nexport function ConvertDateTime(dateTime: string) {\n  return dayjs(dateTime).format('D MMMM YYYY HH:mm');\n}\n\nexport function ConvertOrderLocation(OrderLocation: string) {\n  switch (OrderLocation) {\n    case 'kollu':\n      return 'Kollu Ãretimde';\n    case 'turbo':\n      return 'Turbo Ãretimde';\n    case 'diger':\n      return 'DiÄer Ãretimde';\n    case 'test':\n      return 'Testte';\n    case 'depo':\n      return 'Depoda';\n    case 'bahce':\n      return 'BahÃ§ede';\n    case 'onaybekliyor':\n      return 'Ãretim OnayÄ± Bekliyor';\n    case 'planlandÄ±':\n      return 'Ãretim PlanÄ±na AlÄ±ndÄ±';\n    case 'teslimat':\n      return 'Teslim Edildi';\n    case 'onproduction':\n      return 'Ãretimde';\n    case 'sendedpaint':\n      return 'Boyaya GÃ¶nderildi';\n    case 'sendedgalvaniz':\n      return 'Galvanize GÃ¶nderildi';\n    case 'receivedgalvaniz':\n      return 'Galvaniz iÅleminde.';\n    case 'receivedpaint':\n      return 'Boya iÅleminde.';\n    case 'sendedsaruhanli':\n      return 'Boyadan Ã§Ä±ktÄ±.';\n    case 'receivedsaruhanli':\n      return 'SaruhanlÄ± Depoda (HazÄ±r).';\n    case 'completed':\n      return 'TamamlandÄ±';\n    default:\n      return Capitalize(OrderLocation);\n  }\n}\n\nexport function ConvertOrderStatus(OrderStatus: string) {\n  switch (OrderStatus) {\n    case 'active':\n      return 'Aktif';\n    case 'cancelled':\n      return 'Ä°ptal Edildi';\n    case 'finished':\n      return 'TamamlandÄ±';\n    default:\n      return Capitalize(OrderStatus);\n  }\n}\n\nexport function ConvertProductionTasksStatus(TasksStatus: string) {\n  switch (TasksStatus) {\n    case 'onproduction':\n      return 'Ãretiliyor';\n    case 'ondelivery':\n      return 'Sevkiyatta';\n    case 'delivered':\n      return 'Sevkiyat TamamlandÄ±';\n    case 'completed':\n      return 'TamamlandÄ±';\n    default:\n      return Capitalize(TasksStatus);\n  }\n}\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\ninterface RegisterValues {\n  Name: string;\n  Surname: string;\n  Role: string;\n  Mail: string;\n}\n\ninterface ChangePasswordValues {\n  Mail: string;\n  Password: string;\n}\n\nexport async function GetAllUsers() {\n  const response = await Axios.get(API_ADDRESS + \"/api/auth/getAllUsers\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function Register(values: RegisterValues) {\n  const response = await Axios.post(API_ADDRESS + \"/api/auth/register\", values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 201) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function ChangePasswordAdmin(values: ChangePasswordValues) {\n  const response = await Axios.post(API_ADDRESS + \"/api/auth/changePasswordAdmin\", values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function DeleteUser(mail: string) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/auth/deleteuser/\" + mail, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function ReopenUser(mail: string) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/auth/ReopenUser/\" + mail,\n    {},\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function ChangeRole(Mail: string, Role: string) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/auth/ChangeRole/\",\n    { Mail, Role },\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n","import React from \"react\";\nimport { Modal, Form, Input, Radio } from \"antd\";\n\ninterface RegistrationFormProps {\n  visible: boolean;\n  onCreate: (values: any) => void;\n  onCancel: () => void;\n}\n\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst RegistrationForm: React.FC<RegistrationFormProps> = ({ visible, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Yeni Bir KullanÄ±cÄ± OluÅtur.\"\n      okText=\"OluÅtur\"\n      cancelText=\"Ä°ptal Et\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form form={form} layout=\"vertical\" name=\"form_in_modal\" initialValues={{ modifier: \"public\" }} requiredMark={false}>\n        <Form.Item\n          name=\"Mail\"\n          label=\"E-mail\"\n          rules={[\n            { required: true, message: \"LÃ¼tfen bir mail adresi girin.\" },\n            { type: \"email\", message: \"LÃ¼tfen geÃ§erli bir mail adresi girin.\" },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Name\" label=\"Ad\" rules={[{ required: true, message: \"LÃ¼tfen bir isim girin.\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Surname\" label=\"Soyad\" rules={[{ required: true, message: \"LÃ¼tfen bir soyisim girin.\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Role\" className=\"collection-create-form_last-form-item\" rules={[{ required: true, message: \"LÃ¼tfen bir sÄ±nÄ±f seÃ§in.\" }]}>\n          <Radio.Group>\n            {(() => {\n              return config.role.map((role) => {\n                return <Radio value={role.type}>{role.text}</Radio>;\n              });\n            })()}\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport { Modal, Form, Input } from \"antd\";\n\ninterface ChangePasswordFormProps {\n  visible: boolean;\n  onCreate: (values: any) => void;\n  onCancel: () => void;\n  mail: string;\n}\n\nconst ChangePasswordForm: React.FC<ChangePasswordFormProps> = ({ visible, mail, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"KullanÄ±cÄ±nÄ±n Åifresini DeÄiÅtir\"\n      okText=\"DeÄiÅtir\"\n      cancelText=\"Ä°ptal Et\"\n      onCancel={onCancel}\n      onOk={() => {\n        if (form.getFieldValue(\"password\") === form.getFieldValue(\"password1\")) {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              onCreate({ ...values, Mail: mail });\n            })\n            .catch((info) => {\n              console.log(\"Validate Failed:\", info);\n            });\n        }\n      }}\n    >\n      <Form form={form} layout=\"vertical\" name=\"form_in_modal\" initialValues={{ modifier: \"public\" }} requiredMark={false}>\n        <Form.Item name=\"Password\" label=\"Åifre\" rules={[{ required: true, message: \"LÃ¼tfen bir Åifre girin.\" }]}>\n          <Input type=\"password\" />\n        </Form.Item>\n        <Form.Item name=\"Password1\" label=\"Åifre (Tekrar)\" rules={[{ required: true, message: \"LÃ¼tfen aynÄ± Åifreyi tekrar girin.\" }]}>\n          <Input type=\"password\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ChangePasswordForm;\n","import { Table, Button, Modal, Popconfirm, Select, Layout, Col, Row, Divider } from \"antd\";\nimport { Component } from \"react\";\nimport { Body } from \"./MainScreen\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport { DeleteUser, ReopenUser, GetAllUsers, Register, ChangePasswordAdmin, ChangeRole } from \"../services/UsersService\";\nimport RegistrationForm from \"../components/RegistrationForm\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { Footer } from \"antd/es/layout/layout\";\n\nconst { Content, Sider } = Layout;\n\n\ninterface Employe {\n  name: string;\n  surname: string;\n  mail: string;\n  role: string;\n  isDeleted: boolean;\n}\n\nconst { Option } = Select;\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nclass ManageEmployeScreen extends Component {\n  state = {\n    selectedRowKeys: [],\n    changePasswordMail: \"\",\n    registrationButtonLoading: false, //Yeni kullanÄ±cÄ± ekleme butonunun status'u\n    registrationFormVisible: false, //Yeni kullanÄ±cÄ± ekleme formu gÃ¶rÃ¼nÃ¼r mÃ¼\n    changePasswordFormVisible: false, //KullanÄ±cÄ±nÄ±n Åifre deÄiÅtirme formu gÃ¶rÃ¼nÃ¼r mÃ¼\n    tableLoading: true,\n    data: [],\n  };\n\n  columns: ColumnsType<Employe> = [\n    {\n      title: \"Ad\",\n      dataIndex: \"name\",\n      sorter: (a: Employe, b: Employe) => a.name.localeCompare(b.name)\n    },\n    {\n      title: \"Soyad\",\n      dataIndex: \"surname\",\n      sorter: (a: Employe, b: Employe) => a.surname.localeCompare(b.surname)\n    },\n    {\n      title: \"E-Mail\",\n      dataIndex: \"mail\",\n      sorter: (a: Employe, b: Employe) => a.mail.localeCompare(b.mail)\n    },\n    {\n      title: \"Rol\",\n      render: (value, record) => {\n        return (\n          <>\n            <Select\n              defaultValue={record.role}\n              style={{ width: 120 }}\n              onChange={async (value) => {\n                const result = await ChangeRole(record.mail, value);\n                if (!result) {\n                  Modal.error({\n                    title: \"Bir hata oluÅtu\",\n                    content: <p>KullanÄ±cÄ±nÄ±n rolÃ¼ deÄiÅtirilemedi lÃ¼tfen tekrar deneyin.</p>,\n                    okText: \"Tamam\",\n                  });\n                }\n              }}\n            >\n              {(() => {\n                return config.role.map((role) => {\n                  return <Option value={role.type}>{role.text}</Option>;\n                });\n              })()}\n            </Select>\n          </>\n        );\n      },\n    },\n    {\n      title: \"Ä°Ålemler\",\n      width: 10,\n      render: (value, record) => {\n        return (\n          <>\n            <Popconfirm\n              title={`Bu kullanÄ±cÄ±yÄ± ${record.isDeleted ? \"aÃ§mak\" : \"silmek\"} istediÄinizden emin misiniz?`}\n              onConfirm={async () => {\n                if (record.isDeleted) {\n                  if (await ReopenUser(record.mail)) {\n                    this.getTableData();\n                  }\n                } else {\n                  if (await DeleteUser(record.mail)) {\n                    this.getTableData();\n                  }\n                }\n              }}\n              okText=\"Evet\"\n              cancelText=\"HayÄ±r\"\n            >\n              <Button block danger type=\"primary\">\n                {record.isDeleted ? \"Yeniden AÃ§\" : \"KullanÄ±cÄ±yÄ± Sil\"}\n              </Button>\n            </Popconfirm>\n            <Button\n              style={{ marginTop: 5 }}\n              onClick={() => {\n                this.showChangePasswordForm(record.mail);\n              }}\n              block\n              type=\"default\"\n            >\n              Åifre DeÄiÅtir\n            </Button>\n          </>\n        );\n      },\n    },\n  ];\n\n  async getTableData() {\n    let users = await GetAllUsers();\n    if (users) {\n      this.setState({ data: users });\n    }\n    this.setState({ tableLoading: false });\n  }\n\n  componentDidMount() {\n    this.getTableData();\n  }\n\n  showRegistrationForm = () => {\n    this.setState({ registrationButtonLoading: true, registrationFormVisible: true });\n  };\n\n  showChangePasswordForm = (mail: string) => {\n    this.setState({ changePasswordFormVisible: true, changePasswordMail: mail });\n  };\n\n  onSelectChange = (selectedRowKeys: string) => {\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { registrationButtonLoading, tableLoading, selectedRowKeys, data, registrationFormVisible, changePasswordFormVisible, changePasswordMail } = this.state;\n\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Content>\n          <Divider orientation=\"center\" plain>\n            <Row>\n              <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>\n                <Button type=\"primary\" onClick={this.showRegistrationForm} icon={<UserAddOutlined />} loading={registrationButtonLoading}>\n                  KullanÄ±cÄ± Ekle\n                </Button>\n              </Col>\n            </Row>\n          </Divider>\n\n          <Table loading={tableLoading} rowKey={(row) => row.mail} columns={this.columns} dataSource={data} />\n          <RegistrationForm\n            visible={registrationFormVisible}\n            onCreate={async (values) => {\n              let user = await Register(values);\n              if (user) {\n                let data = [].concat(this.state.data, user);\n                this.setState({ data, registrationFormVisible: false, registrationButtonLoading: false });\n              } else {\n                Modal.error({\n                  title: \"Bir hata oluÅtu\",\n                  content: <p>Bu mail adresi daha Ã¶nce kayÄ±t olmuÅ olabilir.</p>,\n                  okText: \"Tamam\",\n                });\n              }\n            }}\n            onCancel={() => {\n              this.setState({ registrationButtonLoading: false, registrationFormVisible: false });\n            }}\n          />\n          <ChangePasswordForm\n            visible={changePasswordFormVisible}\n            mail={changePasswordMail}\n            onCreate={async (values) => {\n              let user = await ChangePasswordAdmin(values);\n              if (user) {\n                this.setState({ changePasswordFormVisible: false });\n                Modal.success({\n                  title: \"Ä°Ålem baÅarÄ±lÄ±\",\n                  content: <p>KullanÄ±cÄ±nÄ±n Åifresi baÅarÄ±yla deÄiÅti.</p>,\n                  okText: \"Tamam\",\n                });\n              } else {\n                Modal.error({\n                  title: \"Bir hata oluÅtu\",\n                  content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                  okText: \"Tamam\",\n                });\n              }\n            }}\n            onCancel={() => {\n              this.setState({ changePasswordFormVisible: false });\n            }}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default ManageEmployeScreen;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CONFIG = \"CONFIG\";\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\nconst initialState = {\n  user: null,\n};\n\nfunction AuthReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, user: action.payload };\n    case LOGOUT:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n}\n\nexport default AuthReducer;\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { API_ADDRESS } from \"../..\";\nimport { LOGIN, LOGOUT } from \"../reducers/authReducer\";\n\nexport async function getConfig() {\n  await Axios.get(API_ADDRESS + \"/api/config\").then((res) => {\n    localStorage.setItem(\"config\", JSON.stringify(res.data));\n  });\n  return true;\n}\n\nexport function login(Mail: string, Password: string) {\n  return async (dispatch: Dispatch) => {\n    Axios.post(API_ADDRESS + \"/api/auth/login\", { Mail, Password })\n      .then((res) => {\n        sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n        dispatch({ type: LOGIN, payload: res.data });\n      })\n      .catch((err) => {\n        if (err?.response?.status === 401) {\n          Modal.error({\n            title: \"GiriÅ Yetkiniz Yok\",\n            content: <p>LÃ¼tfen admin ile iletiÅime geÃ§in..</p>,\n            okText: \"Tamam\",\n          });\n        } else {\n          Modal.error({\n            title: \"Bilgileriniz YanlÄ±Å\",\n            content: <p>LÃ¼tfen bilgilerinizi kontrol edin..</p>,\n            okText: \"Tamam\",\n          });\n        }\n      });\n  };\n}\n\nexport function logout() {\n  return async (dispatch: Dispatch) => {\n    sessionStorage.removeItem(\"user\");\n    dispatch({ type: LOGOUT });\n  };\n}\n","import Axios from \"axios\";\nimport { GetToken } from \"../helper\";\n\nimport { Modal } from \"antd\";\nimport { API_ADDRESS } from \"..\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\ndayjs.locale(\"tr\");\n\nexport interface IOrder {\n  description: string;\n  date: string;\n  customer: string;\n  phone_number: string;\n  address: string;\n  production_unit: string;\n  order_no: string;\n  order_tooker: string;\n  order_amount: number;\n  status: string;\n  type: string;\n  serial_number: string;\n  cooler_type: string;\n  tank_size: number;\n  pump: string;\n  pump_serial: string;\n  year: string;\n  tow_type: string;\n  meme_type: string;\n  meme_distance: string;\n  arm_type: string;\n  arm_length: string;\n  chassis_color: string;\n  caldron_type: string;\n  caldron_color: string;\n  commander: string;\n  alt_features: string;\n  brand: string;\n}\n\nexport interface ITurboOrder extends IOrder {\n  caldron_type: string;\n  fan_radius: string;\n  fan_type: string;\n}\n\nexport interface ISleevedOrder extends IOrder {\n  arm_length: string;\n  arm_type: string;\n  meme_distance: string;\n  meme_type: string;\n}\n\nexport interface GenericOrder extends ITurboOrder, ISleevedOrder {\n  id: number;\n  machine_id: number;\n  last_location_date: string;\n}\n\nexport class GetTaskRequestConfig {\n  turbo: boolean = false;\n  kollu: boolean = false;\n  diger: boolean = false;\n  test: boolean = false;\n  bahce: boolean = false;\n  depo: boolean = false;\n  iptal: boolean = false;\n  teslimat: boolean = false;\n  onaybekliyor: boolean = false;\n}\n\nexport async function TakeOrder(\n  order: ITurboOrder | ISleevedOrder,\n  serialCode: string\n) {\n  order.date = dayjs().format(\"YYYY-MM-DD HH:mm\");\n  order.year = dayjs().format(\"YY\");\n  if (order.tank_size) order.tank_size = parseInt(String(order.tank_size));\n  if (order.order_amount)\n    order.order_amount = parseInt(String(order.order_amount));\n  order.status = order.production_unit;\n  order.serial_number = serialCode;\n\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/TakeOrder/\",\n    order,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>SipariÅ baÅarÄ±yla oluÅturuldu.</p>,\n          okText: \"Tamam\",\n        });\n        return true;\n      }\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function UpdateOrder(\n  order: ITurboOrder | ISleevedOrder,\n  serialCode: string\n) {\n  order.date = dayjs().format(\"YYYY-MM-DD HH:mm\");\n  order.year = dayjs().format(\"YY\");\n  if (order.tank_size) order.tank_size = parseInt(String(order.tank_size));\n  if (order.order_amount)\n    order.order_amount = parseInt(String(order.order_amount));\n  order.status = order.production_unit;\n  order.serial_number = serialCode;\n\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/EditOrder/\",\n    order,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>SipariÅ baÅarÄ±yla oluÅturuldu.</p>,\n          okText: \"Tamam\",\n        });\n        return true;\n      }\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetFinishedOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetFinishedOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetCancelledOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetCancelledOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetAllOrders() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetAllOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetAllOrdersByType(type: string) {\n  const response = await Axios.get(\n    API_ADDRESS + `/api/order/GetAllOrdersByType?type=${type.toLowerCase()}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetPendingOrders() {\n  const response = await Axios.get(API_ADDRESS + \"/api/task/GetPendingOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetProductionReadyOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/task/GetProductionReadyOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetOrderDetails(serial_number: string) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getOrderById/${serial_number}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetMachineListFromOrderById(orderId: number) {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetOrderMachineDetailsById/\" + orderId,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetOrderHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getOrderHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetArmHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getArmHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFanHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getFanHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetChassisHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getChassisHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetGenericTaskHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/task/GetGenericTaskHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetDeliveryReport() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetDeliveries\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetOrderReport() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetMovableMachines() {\n  let requestConfig = new GetTaskRequestConfig();\n  requestConfig.bahce = true;\n  requestConfig.depo = true;\n\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/task/GetAllMachinesStatus\",\n    requestConfig,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\ninterface ISwitchMachines {\n  machine1: { serial_number: string; order_id: string };\n  machine2: { serial_number: string; order_id: string };\n}\n\nexport async function SwitchMachines(machines: ISwitchMachines) {\n  console.log(machines);\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/SwitchMachines\",\n    machines,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>SipariÅ baÅarÄ±yla kaydÄ±rÄ±ldÄ±.LÃ¼tfen sayfayÄ± yenileyin</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n    });\n\n  return response;\n}\n\nexport async function GetAllTankProducerOrders() {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/GetAllTankProducerOrders`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n      return [];\n    })\n    .catch((err) => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function sendToTankProducer(place: String, id: String) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/order/SendToTankProducerOrders/`,\n    { CurrentPosition: place, Id: id },\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n        return res.data;\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function sendTo(place: String, id: number, testComment?: String) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/order/MoveTo/${place}/${id}/${testComment}`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoFanTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoFanTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoArmTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoArmTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoChassisTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoChassisTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoSendTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoMoveTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Ä°Ålem baÅarÄ±yla gerÃ§ekleÅti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetActiveOrders() {\n  let requestConfig = new GetTaskRequestConfig();\n  requestConfig.turbo = true;\n  requestConfig.kollu = true;\n  requestConfig.diger = true;\n  requestConfig.test = true;\n  requestConfig.depo = true;\n  requestConfig.bahce = true;\n\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/task/GetAllMachinesStatus\",\n    requestConfig,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteOrder(order_id: String) {\n  debugger;\n  const response = await Axios.post(\n    `${API_ADDRESS}/api/order/DeleteOrder/`,\n    { Id: order_id },\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>SipariÅ baÅarÄ±yla iptal edildi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteSingleMachine(machine_id: string) {\n  debugger;\n  const response = await Axios.delete(\n    `${API_ADDRESS}/api/order/DeleteSingleMachine/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>Makine baÅarÄ±yla silindi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetShortcuts() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Task/GetLayout\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  }).then((res) => {\n    return res.data;\n  });\n\n  return response;\n}\n\nexport async function AddShortcut(items: any, selectedData: string) {\n  const response = await axios\n    .post(\n      API_ADDRESS + `/api/Task/SaveLayoutInfo/`,\n      {\n        layout: items?.length\n          ? [...items, selectedData].join(\",\")\n          : selectedData,\n      },\n      {\n        headers: {\n          Authorization: \"Bearer \" + GetToken(),\n        },\n      }\n    )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>KÄ±sayol baÅarÄ±yla eklendi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return res.data.layout;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return \"\";\n    });\n\n  return response;\n}\nexport async function RemoveShortcuts(items: string[], removedItem: string) {\n  const response = await axios\n    .post(\n      API_ADDRESS + `/api/Task/SaveLayoutInfo/`,\n      { layout: items.filter((data) => data !== removedItem).join(\",\") },\n      {\n        headers: {\n          Authorization: \"Bearer \" + GetToken(),\n        },\n      }\n    )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"BaÅarÄ±lÄ±\",\n          content: <p>KÄ±sayol baÅarÄ±yla kaldÄ±rÄ±ldÄ±.</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return res.data.layout;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluÅtu, lÃ¼tfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return \"\";\n    });\n\n  return response;\n}\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport function addConfig(key: string, values: Object) {\n  return Axios.post(`${API_ADDRESS}/api/config/${key}`, values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      Modal.success({ title: \"Ä°Ålem BaÅarili.\", content: \"Yeni Ã¶zellik baÅariyla eklendi, gÃ¶rmek iÃ§in sayfayi yenileyin..\" });\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({ title: \"Bir Hata OluÅtu.\", content: \"LÃ¼tfen tekrar deneyin.\" });\n      return false;\n    });\n}\n\nexport function getCustomerList() {\n  return Axios.get(`${API_ADDRESS}/api/config/GetCustomerList`, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return [];\n    });\n}\n","/* eslint-disable eqeqeq */\nimport { AutoComplete, Button, DatePicker, Form, Input, Radio, Select } from 'antd';\nimport React, { useEffect, useState } from 'react';\nimport { renderToString } from 'react-dom/server';\nimport { Body } from './MainScreen';\nimport moment from 'moment';\nimport IAgrotekConfig from '../IAgrotekConfig';\nimport { padLeft } from '../helper';\nimport { TakeOrder } from '../services/OrderService';\nimport { getCustomerList } from '../services/ConfigService';\n\nconst { Option, OptGroup } = Select;\nconst QRCode = require('qrcode.react');\n\nfunction CreateOrderScreen() {\n  const configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n  const [qrCodeValue, setQrCodeValue] = useState('');\n  const [customerList, setCustomerList] = useState([] as any);\n  const [productionUnit, setProductionUnit] = useState('turbo');\n  const [serialState, setSerialState] = useState({\n    brand: '',\n    type: '',\n    cooler_type: '',\n    arm_type: '',\n    tank_size: 0,\n    pump: '',\n    order_no: '000000',\n    order_amount: 0,\n    year: '',\n  });\n\n  let serialCode = SerialCodeGenerator();\n  const [form] = Form.useForm();\n\n  useEffect(() => {\n    getCustomerList().then((res) => {\n      setCustomerList(res);\n    });\n  }, []);\n\n  return (\n    <Body style={{ display: 'flex', justifyContent: 'space-evenly', flexWrap: 'wrap-reverse', overflow: 'auto' }}>\n      <Form\n        form={form}\n        onFieldsChange={() => {\n          let product = form.getFieldValue('brand') == 'turktraktor' ? form.getFieldValue('brand') + ' ' + form.getFieldValue('model') : form.getFieldValue('production_unit') == 'turbo' ? form.getFieldValue('brand') + ' ' + form.getFieldValue('tank_size') + 'LT ' + form.getFieldValue('cooler_type') + form.getFieldValue('fan_radius') + 'cm ' + form.getFieldValue('fan_type') : form.getFieldValue('production_unit') == 'kollu' ? form.getFieldValue('brand') + ' ' + form.getFieldValue('tank_size') + 'LT ' + form.getFieldValue('arm_type') + ' ' + form.getFieldValue('arm_length') : form.getFieldValue('production_unit') == 'diger' ? form.getFieldValue('brand') + ' ' + form.getFieldValue('type') : '';\n          setQrCodeValue(serialCode + ',' + product.toUpperCase());\n          if (form.getFieldValue('model') && form.getFieldValue('brand') == 'turktraktor') {\n            form.setFieldsValue({ caldron_color: form.getFieldValue('model') });\n          }\n        }}\n        onFinish={async (values) => {\n          const result = await TakeOrder(values, serialCode);\n          if (result === true) {\n            printQRCode(values.order_amount);\n            form.resetFields();\n          }\n        }}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 24 }}\n        style={{ maxWidth: 'calc(100% - 168px)', minWidth: '450px' }}\n        requiredMark={false}\n      >\n        <Form.Item name=\"date\" initialValue={moment()} label=\"Tarih\" required>\n          <DatePicker disabled />\n        </Form.Item>\n\n        <Form.Item\n          name=\"customer\"\n          label=\"MÃ¼Återi AdÄ±\"\n          rules={[\n            { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n            { max: 250, message: 'Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.' },\n          ]}\n          required\n        >\n          <AutoComplete style={{ width: 200 }} options={customerList} placeholder=\"aramak iÃ§in yazÄ±n.\" filterOption={(inputValue, option) => option!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1} />\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          label=\"Adresi\"\n          rules={[\n            { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n            { max: 250, message: 'Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.' },\n          ]}\n          required\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"phone_number\"\n          label=\"Telefon No\"\n          rules={[\n            { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n            { max: 10, min: 10, message: 'Telefon numarasÄ± 10 haneden oluÅmalÄ±dÄ±r.' },\n          ]}\n          required\n        >\n          <Input addonBefore=\"+90\" style={{ width: '100%' }} />\n        </Form.Item>\n        <Form.Item name=\"production_unit\" label=\"Ãretim Birimi\" initialValue=\"turbo\" required>\n          <Radio.Group\n            onChange={(e) => {\n              setProductionUnit(e.target.value);\n            }}\n          >\n            <Radio value=\"turbo\">Turbo</Radio>\n            <Radio value=\"kollu\">Kollu</Radio>\n            <Radio value=\"diger\">DiÄer</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"brand\" label=\"Marka\" required>\n          <Select\n            onSelect={(type) => {\n              const brand = configFile.brand.filter((brand) => brand.type == type);\n              setSerialState({ ...serialState, brand: brand[0].shortend });\n            }}\n          >\n            {(function myFunction() {\n              return configFile.brand.map((brand) => {\n                return (\n                  <Option key={brand.type} value={brand.type}>\n                    {brand.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        {productionUnit == 'turbo' && serialState.brand == 'T' ? (\n          <Form.Item name=\"model\" label=\"Model\" required>\n            <Select>\n              {(function myFunction() {\n                return configFile.turktraktormodel.map((brand) => {\n                  return (\n                    <Option key={brand.text} value={brand.text}>\n                      {brand.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          </Form.Item>\n        ) : null}\n\n        <Form.Item name=\"type\" label=\"Tip\" required>\n          {productionUnit === 'turbo' || productionUnit === 'kollu' ? (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.type.filter((type) => type.type == btype);\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.type.map((type) => {\n                  return (\n                    <Option key={type.type} value={type.type}>\n                      {type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          ) : (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.machine_type.filter((machine_type) => machine_type.type == btype);\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.machine_type.map((machine_type) => {\n                  return (\n                    <Option key={machine_type.type} value={machine_type.type}>\n                      {machine_type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          )}\n        </Form.Item>\n        {productionUnit == 'kollu' || productionUnit == 'turbo' ? (\n          <>\n            <Form.Item\n              name=\"caldron_color\"\n              rules={[\n                { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n                { max: 32, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n              ]}\n              label=\"Kazan Rengi\"\n              required\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"caldron_stock\" label=\"Kazan Tedarik\">\n              <Radio.Group>\n                <Radio value=\"onstock\">Stoktan</Radio>\n                <Radio value=\"new\">Kazan Ãreticiden</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"caldron_material\"\n              rules={[\n                { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n                { max: 19, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n              ]}\n              label=\"Materyal\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.caldron_material.map((caldron_material) => {\n                    return (\n                      <Option key={caldron_material.type} value={caldron_material.type}>\n                        {caldron_material.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tank_size\" label=\"Depo Hacmi\" required>\n              <Select\n                onSelect={(type) => {\n                  const tank_size = configFile.tank_size.filter((tank_size) => tank_size.type == type);\n                  setSerialState({ ...serialState, tank_size: parseInt(tank_size[0].shortend) });\n                }}\n              >\n                <OptGroup label=\"Litre\">\n                  {(function myFunction() {\n                    return configFile.tank_size.map((tank_size) => {\n                      return (\n                        <Option key={tank_size.type} value={tank_size.type}>\n                          {tank_size.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </OptGroup>\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tow_type\" label=\"Ãeki Tipi\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.tow_type.map((tow_type) => {\n                    return (\n                      <Option key={tow_type.type} value={tow_type.type}>\n                        {tow_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"pump\" label=\"Pompa\" required>\n              <Select\n                onSelect={(type) => {\n                  const pump = configFile.pump.filter((pump) => pump.type == type);\n                  setSerialState({ ...serialState, pump: pump[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.pump.map((pump) => {\n                    return (\n                      <Option key={pump.type} value={pump.type}>\n                        {pump.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"commander\" label=\"Kumanda\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.commander.map((commander) => {\n                    return (\n                      <Option key={commander.type} value={commander.type}>\n                        {commander.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name=\"meme_type\"\n              rules={[\n                { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n                { max: 19, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n              ]}\n              label=\"Meme Tipi\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.meme_type.map((meme_type) => {\n                    return (\n                      <Option key={meme_type.type} value={meme_type.type}>\n                        {meme_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == 'kollu' ? (\n          <>\n            <Form.Item name=\"arm_type\" label=\"Kol Tipi\" required>\n              <Select\n                onSelect={(btype) => {\n                  const arm_type = configFile.arm_type.filter((type) => type.type == btype);\n                  setSerialState({ ...serialState, arm_type: arm_type[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.arm_type.map((arm_type) => {\n                    return (\n                      <Option key={arm_type.type} value={arm_type.type}>\n                        {arm_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"meme_distance\"\n              rules={[\n                { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n                { max: 19, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n              ]}\n              label=\"Meme AralÄ±ÄÄ±\"\n              required\n            >\n              <Input maxLength={19} />\n            </Form.Item>\n            <Form.Item\n              name=\"arm_length\"\n              rules={[\n                { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n                { max: 30, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n              ]}\n              label=\"Kol UzunluÄu\"\n              required\n            >\n              <Input maxLength={20} />\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == 'turbo' ? (\n          <>\n            <Form.Item name=\"cooler_type\" label=\"Fan Tipi\" required>\n              <Select\n                onSelect={(type) => {\n                  const cooler_type = configFile.cooler_type.filter((cooler_type) => cooler_type.type == type);\n                  setSerialState({ ...serialState, cooler_type: cooler_type[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.cooler_type.map((cooler_type) => {\n                    return (\n                      <Option key={cooler_type.type} value={cooler_type.type}>\n                        {cooler_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            {productionUnit == 'turbo' ? (\n              <Form.Item name=\"caldron_type\" label=\"Kazan Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.caldron_type.map((caldron_type) => {\n                      return (\n                        <Option key={caldron_type.type} value={caldron_type.type}>\n                          {caldron_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n\n            {productionUnit == 'turbo' ? (\n              <Form.Item name=\"fan_radius\" label=\"Pervane ÃapÄ±\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_radius.map((fan_radius) => {\n                      return (\n                        <Option key={fan_radius.type} value={fan_radius.type}>\n                          {fan_radius.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n            {productionUnit == 'turbo' ? (\n              <Form.Item name=\"fan_type\" label=\"Pervane Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_type.map((fan_type) => {\n                      return (\n                        <Option key={fan_type.type} value={fan_type.type}>\n                          {fan_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n          </>\n        ) : null}\n\n        <Form.Item\n          name=\"order_no\"\n          label=\"SipariÅ No\"\n          rules={[\n            { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n            { max: 6, message: 'Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.' },\n            { min: 6, message: 'SipariÅ No 6 Karakter olmalÄ±dÄ±r..' },\n          ]}\n          required\n        >\n          <Input\n            maxLength={6}\n            onChange={(e) => {\n              setSerialState({ ...serialState, order_no: padLeft(e.target.value, '0', 6) });\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"order_amount\"\n          rules={[\n            { required: true, message: 'Bu alan boÅ bÄ±rakÄ±lamaz' },\n            { max: 5, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' },\n          ]}\n          label=\"SipariÅ Adedi\"\n          required\n        >\n          <Input\n            max={99}\n            min={1}\n            type=\"number\"\n            onChange={(e) => {\n              setSerialState({ ...serialState, order_amount: parseInt(e.target.value) });\n            }}\n          />\n        </Form.Item>\n        <Form.Item name=\"year\" label=\"YÄ±l\" initialValue={moment()} required>\n          <DatePicker disabled picker=\"year\" />\n        </Form.Item>\n\n        <Form.Item name=\"chassis_color\" label=\"Åase Rengi\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.chassis_color.map((chassis_color) => {\n                return (\n                  <Option key={chassis_color.type} value={chassis_color.type}>\n                    {chassis_color.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n\n        <Form.Item name=\"alt_features\" rules={[{ max: 250, message: 'Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.' }]} label=\"Ek Ãzellikler\" required>\n          <Input.TextArea maxLength={250} />\n        </Form.Item>\n        <Form.Item name=\"order_tooker\" label=\"SipariÅ Alan\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.order_tooker.map((order_tooker) => {\n                return (\n                  <Option key={order_tooker.type} value={order_tooker.type}>\n                    {order_tooker.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"serial_number\" label=\"Seri No\">\n          <Input disabled placeholder={serialCode} />\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button size=\"large\" block type=\"primary\" htmlType=\"submit\">\n            SipariÅi OluÅtur\n          </Button>\n        </Form.Item>\n      </Form>\n      <div style={{ display: 'block', width: 'min-content' }}>\n        <QRCode value={qrCodeValue} renderAs=\"svg\" size={178} />\n        {/*<Button type=\"primary\" icon={<PrinterOutlined />} disabled={serialCode.length < 10} onClick={printQRCode} block>\n          YazdÄ±r\n          </Button>*/}\n      </div>\n    </Body>\n  );\n\n  function SerialCodeGenerator(): string {\n    switch (productionUnit) {\n      case 'kollu':\n        return serialState.brand + serialState.type + serialState.arm_type + serialState.tank_size + serialState.pump + serialState.year + 0 + serialState.order_no + 0 + serialState.order_amount;\n      case 'turbo':\n        return serialState.brand + serialState.type + serialState.cooler_type + serialState.tank_size + serialState.pump + serialState.year + 0 + serialState.order_no + 0 + serialState.order_amount;\n      case 'diger':\n        return serialState.brand + serialState.type + serialState.year + 0 + serialState.order_no + 0 + serialState.order_amount;\n      default:\n        return '';\n    }\n  }\n\n  function printQRCode(amount: number) {\n    let printWindow = window.open('', '', 'height=1024, width=1024');\n    let reversed = reverseString(serialCode);\n    let data = splitTwoPartsBarcode(reversed);\n    let qrCode = qrCodeValue.split(',');\n\n    for (let i = amount; i > 0; i--) {\n      qrCode[0] = data[0] + '0' + i;\n\n      let svg = renderToString(\n        <div style={{ width: '50mm', height: '64mm' }}>\n          <QRCode value={qrCode[0] + ',' + qrCode[1]} style={{ height: '44mm', width: '44mm', margin: '3mm' }} renderAs=\"svg\" />\n          <p style={{ margin: 10 }}>{qrCode[0]}</p>\n        </div>\n      );\n      //<QRCode value= style={{ width: \"54mm\", height: \"70mm\" }} renderAs=\"svg\" />);\n\n      printWindow?.document.write(String(svg));\n    }\n    if (printWindow) {\n      printWindow.document.body.style.margin = '0';\n      printWindow.document.close();\n      printWindow.print();\n    }\n  }\n}\n\nexport function splitTwoPartsBarcode(str: string) {\n  var index = str.indexOf('0'); // Gets the first index where a space occours\n  var amount = reverseString(str.substr(0, index)); // Gets the first part\n  var serial = reverseString(str.substr(index + 1));\n\n  return [serial, amount];\n}\n\nexport function reverseString(str: string) {\n  var newString = '';\n  for (var i = str.length - 1; i >= 0; i--) {\n    newString += str[i];\n  }\n  return newString;\n}\n\nexport default CreateOrderScreen;\n","import { Spin, Timeline, Popconfirm, Button, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { RootState } from \"../redux/reducers\";\nimport { GetArmHistory, GetChassisHistory, GetFanHistory, GetOrderHistory, UndoSendTo } from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  machine_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n}\n\nenum PartTypes {\n  arm,\n  fan,\n  chassis,\n}\n\nfunction MachinePartsHistory(props: { machine_id: number; type: PartTypes }) {\n  const { machine_id, type } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    switch (type) {\n      case PartTypes.arm:\n        GetArmHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.fan:\n        GetFanHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.chassis:\n        GetChassisHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n    }\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`GÃ¶nderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return data ? (\n    <Card style={{ marginBottom: 5 }} title={type == PartTypes.arm ? \"Kol Ä°Ålem GeÃ§miÅi\" : type == PartTypes.chassis ? \"Åase Ä°Ålem GeÃ§miÅi\" : \"Fan Ä°Ålem GeÃ§miÅi\"}>\n      <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n        {renderTimeline()}\n      </Timeline>\n    </Card>\n  ) : null;\n}\n\nfunction OrderHistory(props: Props) {\n  const { isVisible, setIsVisible, machine_id, serial_number } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    GetOrderHistory(machine_id).then((res) => {\n      if (res) {\n        setData(res);\n        setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n      }\n    });\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`GÃ¶nderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return (\n    <Modal title={serial_number + \" NumaralÄ± Makinenin Ä°Ålem GeÃ§miÅi\"} visible={isVisible} footer={null} onCancel={() => setIsVisible(false)}>\n      <div style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {data ? (\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n            <Card title=\"Makine Ä°Ålem GeÃ§miÅi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.chassis} />\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.fan} />\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.arm} />\n\n            {user.role === \"admin\" && lastLocation?.location !== \"onaybekliyor\" && lastLocation?.location !== \"iptal\" ? (\n              <Popconfirm\n                title=\"Bu sipariÅi bir Ã¶nceki konuma gÃ¶ndermek istediÄinizden emin misiniz?\"\n                onConfirm={() => {\n                  UndoSendTo(machine_id).then((res) => {\n                    if (res) {\n                      GetHistory();\n                    }\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"HayÄ±r\"\n              >\n                <Button style={{ marginBottom: 10 }} type=\"primary\">\n                  Bir Ãnceki Konuma Geri GÃ¶nder\n                </Button>\n              </Popconfirm>\n            ) : null}\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default OrderHistory;\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from \"react\";\nimport { Table, Input, Button, Divider, Select, Popconfirm } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GenericOrder,\n  GetAllOrders,\n  GetMovableMachines,\n  SwitchMachines,\n  DeleteOrder,\n  GetMachineListFromOrderById,\n  UndoSendTo,\n  GetFinishedOrders,\n  DeleteSingleMachine,\n  GetCancelledOrders,\n} from \"../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport {\n  Capitalize,\n  ConvertDateTime,\n  ConvertOrderLocation,\n  ConvertOrderStatus,\n} from \"../helper\";\nimport OrderHistory from \"../components/OrderHistory\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { Link } from \"react-router-dom\";\n\ndayjs.extend(customParseFormat);\n\ndayjs.locale(\"tr\");\n\nconst QRCode = require(\"qrcode.react\");\n\nexport function renderProperties(key: string, value: string) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nclass OrderScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record: GenericOrder) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail].map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"BulunduÄu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son Ä°Ålem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        SipariÅi KaydÄ±r\n                      </Button>\n                    ) : null}\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu YazdÄ±r\n                    </Button>\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        console.log(record.id);\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      Ä°Ålem GeÃ§miÅini GÃ¶ster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n\n                    {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayÄ± silmek istediÄinizden emin misiniz? Bu iÅlem geri alÄ±namaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"HayÄ±r\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          MakinayÄ± Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    csvdata: [\n      [\n        \"Seri No\",\n        \"SipariÅ No\",\n        \"SipariÅ Tarihi\",\n        \"MÃ¼Återi\",\n        \"Telefon\",\n        \"Adres\",\n        \"SipariÅ Alan\",\n        \"Durum\",\n      ],\n    ],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"SipariÅ No\",\n        dataIndex: \"order_no\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"MÃ¼Återi\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Lokasyon\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"ÃrÃ¼n Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Miktar\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.pending_amount - b.pending_amount,\n        ...this.getColumnSearchProps(\"order_amount\"),\n        render: (text: string, order: any) => (\n          <td>\n            {String(order.order_amount - order.pending_amount) +\n              \"/\" +\n              order.order_amount}\n          </td>\n        ),\n      },\n      {\n        title: \"SipariÅ Tarihi\",\n        dataIndex: \"date\",\n        //render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          dayjs(a.date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"date\"),\n      },\n\n      {\n        title: \"SipariÅ Alan\",\n        dataIndex: \"order_tooker\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.order_tooker.localeCompare(b.order_tooker),\n        ...this.getColumnSearchProps(\"order_tooker\"),\n        render: (text: string) => <td>{text.toUpperCase()}</td>,\n      },\n    ],\n  };\n\n  printQRCode(value: string, serialNumber: string) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    this.props.isFinishedOrders\n      ? GetFinishedOrders().then((result) => {\n          let dateModifiedData = result.map((order) => {\n            order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n            return order;\n          });\n          this.setState({ data: dateModifiedData });\n        })\n      : this.props.isCancelledOrders\n      ? GetCancelledOrders().then((result) => {\n          let dateModifiedData = result.map((order) => {\n            order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n            return order;\n          });\n          this.setState({ data: dateModifiedData });\n        })\n      : GetAllOrders().then((result) => {\n          let dateModifiedData = result.map((order) => {\n            order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n            return order;\n          });\n          this.setState({ data: dateModifiedData });\n        });\n  }\n\n  componentDidMount = () => {\n    this.GetOrders();\n    GetMovableMachines().then((machines) => {\n      if (machines) {\n        this.setState({ movableMachines: machines });\n      }\n    });\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          expandable={{\n            expandedRowRender: (record) => (\n              <div\n                key={\"keyexpandable \" + record.id}\n                style={{ marginLeft: \"3rem\" }}\n              >\n                {renderProperties(\"ÃrÃ¼n\", record.description)}\n                {renderProperties(\"Tarih\", record.date)}\n                {renderProperties(\n                  \"Marka\",\n                  this.configFile.brand.filter(\n                    (b) => b.type === record.brand\n                  )[0]?.text\n                )}\n                {renderProperties(\"SipariÅ No\", record.order_no)}\n                {renderProperties(\n                  \"SipariÅ MiktarÄ±\",\n                  String(record.order_amount)\n                )}\n                {renderProperties(\n                  \"Tip\",\n                  this.configFile.type.filter((b) => b.type === record.type)[0]\n                    ?.text\n                    ? this.configFile.type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                    : this.configFile.machine_type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                )}\n                {renderProperties(\n                  \"Fan Tipi\",\n                  this.configFile.cooler_type.filter(\n                    (b) => b.type === record.cooler_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Boyutu\",\n                  record.tank_size ? record.tank_size + \" LT\" : null\n                )}\n                {renderProperties(\n                  \"Kazan Materyali\",\n                  this.configFile.caldron_material.filter(\n                    (b) => b.type === record.caldron_material\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Pompa\",\n                  this.configFile.pump.filter((b) => b.type === record.pump)[0]\n                    ?.text\n                )}\n                {renderProperties(\"Model YÄ±lÄ±\", record.year)}\n                {renderProperties(\n                  \"Meme Tipi\",\n                  this.configFile.meme_type.filter(\n                    (b) => b.type === record.meme_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Meme AralÄ±ÄÄ±\", record.meme_distance)}\n                {renderProperties(\n                  \"Ãeki Tipi\",\n                  this.configFile.tow_type.filter(\n                    (b) => b.type === record.tow_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kol Tipi\",\n                  this.configFile.arm_type.filter(\n                    (b) => b.type === record.arm_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Kol UzunluÄu\", record.arm_length)}\n                {renderProperties(\n                  \"Åase Rengi\",\n                  this.configFile.chassis_color.filter(\n                    (b) => b.type === record.chassis_color\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Rengi\",\n                  Capitalize(record.caldron_color)\n                )}\n                {renderProperties(\n                  \"Kazan Tipi\",\n                  this.configFile.caldron_type.filter(\n                    (b) => b.type === record.caldron_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kumanda\",\n                  this.configFile.commander.filter(\n                    (b) => b.type === record.commander\n                  )[0]?.text\n                )}\n                {renderProperties(\"Alternatif Ãzellikler\", record.alt_features)}\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    GetMachineListFromOrderById(record.id).then(\n                      (orderDetails) => {\n                        this.setState({\n                          orderDetails: {\n                            ...this.state.orderDetails,\n                            [record.id]: orderDetails,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  DetaylarÄ± GÃ¶ster\n                </Button>\n                {this.renderOrderDetails(record)}\n                {record.status !== \"cancelled\" &&\n                this.props.user?.role == \"admin\" &&\n                !this.props.isFinishedOrders ? (\n                  <Popconfirm\n                    title=\"Bu sipariÅi iptal etmek istediÄinizden emin misiniz?\"\n                    onConfirm={() => DeleteOrder(record.id)}\n                    okText=\"Evet\"\n                    cancelText=\"HayÄ±r\"\n                  >\n                    <Button\n                      danger\n                      style={{ marginBottom: 10, marginRight: 10 }}\n                      type=\"primary\"\n                    >\n                      SipariÅi Ä°ptal Et\n                    </Button>\n                  </Popconfirm>\n                ) : null}\n\n                <Link\n                  style={{\n                    display:\n                      record.order_amount !== record.pending_amount && \"none\",\n                    color: \"white\",\n                    marginBottom: 10,\n                    backgroundColor: \"#1677ff\",\n                    padding: \"8px\",\n                    borderRadius: \"6px\",\n                  }}\n                  to={{\n                    pathname: `/editOrder/${record.serial_number}`,\n                  }}\n                >\n                  DÃ¼zenle\n                </Link>\n              </div>\n            ),\n          }}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Modal\n          title={\n            this.state.orderSelected?.serial_number + \" Seri NumaralÄ± Makine.\"\n          }\n          visible={this.state.orderModalVisible}\n          onOk={() => {\n            this.setState({ orderModalVisible: false });\n            SwitchMachines({\n              order1: this.state.selectedToMove,\n              order2: this.state.orderSelected,\n            });\n          }}\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <p>LÃ¼tfen deÄiÅim yapmak istediÄiniz makineyi seÃ§in.</p>\n          <Select\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            style={{ width: \"100%\" }}\n            onSelect={(value) => {\n              console.log(value);\n              this.setState({\n                selectedToMove: {\n                  serial_number: value.split(\" \")[0],\n                  order_id: Number.parseInt(value.split(\" \")[1]),\n                },\n              });\n            }}\n            placeholder=\"LÃ¼tfen bir makine seÃ§in\"\n            defaultActiveFirstOption={true}\n          >\n            {this.state.movableMachines.map((machine) => {\n              return (\n                <Select.Option\n                  value={machine.serial_number + \" \" + machine.order_id}\n                >\n                  {machine.serial_number +\n                    \" \" +\n                    machine.customer +\n                    \" \" +\n                    Capitalize(machine.location)}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </Modal>\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderScreen);\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport async function GetChassisNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetChassisNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetTotalNeeds(value: number | string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetTotalNeeds/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFanNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetFanNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetPumpNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetPumpNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetCommanderNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetCommanderNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetTowNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetTowNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetGenericTaskRoleAuthorizationList(value: string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Task/GetGenericTaskRoleAuthorizationList/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function AddGenericTaskRoleAuthorizationList(obj: { role: string; authority: string }) {\n  const response = await Axios.post(API_ADDRESS + \"/api/Task/AddGenericTaskRoleAuthorizationList/\", obj, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteGenericTaskRoleAuthorizationList(id: number) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/Task/DeleteGenericTaskRoleAuthorizationList/\" + id, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetNeedsList(value: number | string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetNeedList/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function AddNeedsList(obj: { name: string; amount: number; tank_size: number | string }) {\n  const response = await Axios.post(API_ADDRESS + \"/api/Config/AddNeedList/\", obj, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteNeedsList(id: number) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/Config/DeleteNeedList/\" + id, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n","import { Button, Card, Form, Input, InputNumber, Modal, Popover, Table } from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { getConfig } from '../redux/actions/authActions';\nimport { RootState } from '../redux/reducers';\nimport { addConfig } from '../services/ConfigService';\nimport { AddNeedsList, DeleteNeedsList, GetNeedsList } from '../services/NeedListService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nconst typeToString: { [key: string]: string } = {\n  machine_type: 'Makine Tipleri',\n  brand: 'Markalar',\n  type: 'Tipler',\n  cooler_type: 'Fan Tipleri',\n  tank_size: 'Depo BoyutlarÄ±',\n  pump: 'Pompalar',\n  tow_type: 'Ãeki Tipleri',\n  chassis_color: 'Åase Renkleri',\n  caldron_type: 'Kazan Tipleri',\n  fan_type: 'Pervane Tipleri',\n  arm_type: 'Kol Tipleri',\n  fan_radius: 'Fan ÃaplarÄ±',\n  order_tooker: 'SipariÅ Alanlar',\n  commander: 'Kumandalar',\n  turktraktormodel: 'TÃ¼rk TraktÃ¶r Modelleri',\n  meme_type: 'Meme Tipleri',\n  caldron_material: 'Kazan Materyalleri',\n  role: 'KullanÄ±cÄ± Rolleri',\n};\n\nfunction ManageConfigScreen(props: Props) {\n  const [form] = Form.useForm();\n\n  function renderTable() {\n    return Object.keys(configFile).map((key) => {\n      let configs = configFile[key];\n      if (typeof configs == 'object') {\n        if (Object.keys(configs[0]).length === 2) {\n          return renderDoubleColumnTable(configs as ISerializationUnEffectiveField[], key);\n        } else if (Object.keys(configs[0]).length === 3) {\n          return renderTripleColumnTable(configs as ISerializationEffectiveField[], key);\n        }\n      }\n      return null;\n    });\n  }\n\n  function NeedsListTable(props: { value: number | string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n    const user = useSelector((state: RootState) => state.auth.user);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetNeedsList(value).then((res) => {\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: 'ÃrÃ¼n AdÄ±',\n        dataIndex: 'name',\n        key: 'type',\n      },\n      {\n        title: 'Gereken Miktar',\n        dataIndex: 'amount',\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: any) => (\n          <td>\n            {user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                danger\n                type=\"primary\"\n                onClick={() => {\n                  DeleteNeedsList(order.id).then((res) => {\n                    if (res) {\n                      GetData();\n                    } else {\n                      Modal.error({\n                        title: 'Bir hata oluÅtu',\n                        content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                        okText: 'Tamam',\n                      });\n                    }\n                  });\n                }}\n              >\n                Sil\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddNeedsList({ amount: values.amount, name: values.name, value }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: 'Bir hata oluÅtu',\n                            content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                            okText: 'Tamam',\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"name\"\n                      label=\"ÃrÃ¼n\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"amount\" label=\"Miktar\">\n                      <InputNumber min={0} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  function renderDoubleColumnTable(config: ISerializationUnEffectiveField[], key: string) {\n    const columns = [\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        key: 'type',\n        width: 50,\n      },\n      {\n        title: 'GÃ¶sterim',\n        dataIndex: 'text',\n        width: 50,\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values).then((res) => {\n                        if (res) getConfig();\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      label=\"Tip\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'LÃ¼tfen sadece kÃ¼Ã§Ã¼k harf ve boÅluksuz yazÄ±n.',\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"GÃ¶sterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  function renderTripleColumnTable(config: ISerializationEffectiveField[], key: string) {\n    const columns = [\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        key: 'type',\n        width: 33,\n      },\n      {\n        title: 'GÃ¶sterim',\n        dataIndex: 'text',\n        width: 33,\n      },\n      {\n        title: 'KÄ±saltma (Barkod Ã¼zerinde)',\n        dataIndex: 'shortend',\n        width: 34,\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values);\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'LÃ¼tfen sadece kÃ¼Ã§Ã¼k harf ve boÅluksuz yazÄ±n.',\n                        },\n                      ]}\n                      label=\"Tip\"\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"GÃ¶sterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"shortend\"\n                      label=\"KÄ±saltma\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'LÃ¼tfen sadece bÃ¼yÃ¼k harf yazÄ±n, ve harf sayÄ±sÄ±na dikkat edin.',\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }} title=\"\">\n          {renderTable()}\n        </Card>\n        <Card title=\"Ãretim SÃ¼resi Ä°Ålemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Åase Ãretim SÃ¼resi\"\n            placeholder={String(configFile?.chassis_production_time)}\n            suffix=\"GÃ¼n\"\n            enterButton=\"DeÄiÅtir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('chassis_production_time', { text: value });\n            }}\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Fan Ãretim SÃ¼resi\"\n            suffix=\"GÃ¼n\"\n            placeholder={String(configFile?.fan_production_time)}\n            enterButton=\"DeÄiÅtir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('fan_production_time', { text: value });\n            }}\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Kol Ãretim SÃ¼resi\"\n            placeholder={String(configFile?.arm_production_time)}\n            suffix=\"GÃ¼n\"\n            enterButton=\"DeÄiÅtir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('arm_production_time', { text: value });\n            }}\n          />\n        </Card>\n\n        <Card title=\"Ä°htiyaÃ§ Listesi Ä°Ålemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n          {(() => {\n            return configFile['tank_size']\n              .sort((a, b) => parseInt(b.type) - parseInt(a.type))\n              .map((tank_size) => {\n                return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.text} LT Tank Ä°htiyaÃ§ Listesi`} />;\n              });\n          })()}\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default ManageConfigScreen;\n","import { Button, Spin } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { renderProperties } from \"../screens/OrderScreen\";\nimport { GenericOrder, GetOrderDetails } from \"../services/OrderService\";\nimport OrderHistory from \"./OrderHistory\";\n\nimport 'dayjs/locale/tr'\nimport dayjs from 'dayjs';\ndayjs.locale('tr')\n\ninterface Props {\n  serial_number: string;\n  data: any;\n}\n\nfunction OrderDetails(props: Props) {\n  const configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\") as IAgrotekConfig;\n  const { serial_number } = props;\n  const [record, setRecord] = useState(null as unknown as GenericOrder);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    GetOrderDetails(serial_number).then((res) => {\n      if (res) {\n        setRecord(res);\n      }\n    });\n  }, []);\n\n  return (\n    <div style={{ marginLeft: \"40px\" }}>\n      {record ? (\n        <>\n          {renderProperties(\"ÃrÃ¼n\", record.description)}\n          {renderProperties(\"Son Ä°Ålem Tarihi\", ConvertDateTime(record.last_location_date))}\n          {renderProperties(\"Marka\", configFile.brand.filter((b) => b.type === record.brand)[0]?.text)}\n          {renderProperties(\"SipariÅ No\", record.order_no)}\n          {renderProperties(\"SipariÅ MiktarÄ±\", String(record.order_amount))}\n          {renderProperties(\"Tip\", configFile.type.filter((b) => b.type === record.type)[0]?.text ? configFile.type.filter((b) => b.type === record.type)[0]?.text : configFile.machine_type.filter((b) => b.type === record.type)[0]?.text)}\n          {renderProperties(\"SoÄutucu Tipi\", configFile.cooler_type.filter((b) => b.type === record.cooler_type)[0]?.text)}\n          {renderProperties(\"Kazan Boyutu\", record.tank_size + \" LT\")}\n          {renderProperties(\"Pompa\", configFile.pump.filter((b) => b.type === record.pump)[0]?.text)}\n          {renderProperties(\"Pompa Seri No\", record?.pump_serial)}\n          {renderProperties(\"Model YÄ±lÄ±\", record.year)}\n          {renderProperties(\"Meme Tipi\", record.meme_type)}\n          {renderProperties(\"Meme AralÄ±ÄÄ±\", record.meme_distance)}\n          {renderProperties(\"Ãeki Tipi\", configFile.tow_type.filter((b) => b.type === record.tow_type)[0]?.text)}\n          {renderProperties(\"Kol Tipi\", configFile.arm_type.filter((b) => b.type === record.arm_type)[0]?.text)}\n          {renderProperties(\"Kol UzunluÄu\", record.arm_length)}\n          {renderProperties(\"Åase Rengi\", configFile.chassis_color.filter((b) => b.type === record.chassis_color)[0]?.text)}\n          {renderProperties(\"Kazan Rengi\", Capitalize(record.caldron_color))}\n          {renderProperties(\"Kazan Tipi\", configFile.caldron_type.filter((b) => b.type === record.caldron_type)[0]?.text)}\n          {renderProperties(\"Kumanda\", configFile.commander.filter((b) => b.type === record.commander)[0]?.text)}\n          {renderProperties(\"Alternatif Ãzellikler\", record.alt_features)}\n          <Button type=\"primary\" onClick={() => setIsVisible(true)}>\n            Ä°Ålem GeÃ§miÅini GÃ¶ster\n          </Button>\n          <OrderHistory serial_number={serial_number} machine_id={record.id} isVisible={isVisible} setIsVisible={setIsVisible} />\n        </>\n      ) : (\n        <Spin style={{ margin: \"25%\" }} size=\"large\" />\n      )}\n    </div>\n  );\n}\n\nexport default OrderDetails;\n","import React, { ReactNode } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder, GetDeliveryReport } from \"../services/OrderService\";\nimport OrderDetails from \"../components/OrderDetails\";\nimport { ConvertDateTime } from \"../helper\";\n\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nexport default class DeliveryScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[\"Seri No\", \"Teslim Tarihi\", \"MÃ¼Återi\", \"Telefon No\", \"Adres\"]],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Teslim Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"MÃ¼Återi\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n\n      {\n        title: \"AÃ§Ä±klama\",\n        dataIndex: \"comment\",\n        ...this.getColumnSearchProps(\"comment\"),\n      },\n    ],\n  };\n\n  componentDidMount = async () => {\n    const result = await GetDeliveryReport();\n\n    this.setState({ data: result });\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <Table\n        rowKey={(row) => \"key\" + row.serial_number}\n        size=\"small\"\n        loading={this.state.loading}\n        pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n        columns={this.state.columns}\n        dataSource={state.data}\n        expandable={{\n          expandedRowRender: (record) => <OrderDetails serial_number={record.serial_number} />,\n        }}\n      />\n    );\n  }\n}\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GenericOrder, GetAllTankProducerOrders, sendToTankProducer } from '../services/OrderService';\nimport { CSVLink } from 'react-csv';\nimport { Capitalize } from '../helper';\nimport { renderToString } from 'react-dom/server';\nimport QRCode from 'qrcode.react';\nimport { connect } from 'react-redux';\nimport 'dayjs/locale/tr'\nimport dayjs, { Dayjs } from 'dayjs';\ndayjs.locale('tr')\n\nclass TankProducerScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: false,\n    size: 'small',\n    top: 'none',\n    bottom: 'bottomRight',\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: 'SipariÅ No',\n        dataIndex: 'order_no',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no - b.order_no,\n        ...this.getColumnSearchProps('order_no'),\n      },\n      {\n        title: 'Seri No',\n        dataIndex: 'serial_number',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps('serial_number'),\n      },\n      {\n        /*\n        title: \"MÃ¼Återi\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      */\n      },\n      {\n        /*\n        title: \"SipariÅ Tarihi\",\n        dataIndex: \"order_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.order_date, \"D MMMM YYYY, HH:mm\").unix() - dayjs(b.order_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"order_date\"),\n      */\n      },\n      {\n        title: 'Planlanan Ãretim Tarihi',\n        dataIndex: 'planned_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.planned_date !== '' ? a.planned_date : '25 Temmuz 2500', 'D MMMM YYYY').unix() - dayjs(b.planned_date !== '' ? b.planned_date : '25 Temmuz 2500', 'D MMMM YYYY').unix(),\n        ...this.getColumnSearchProps('planned_date'),\n      },\n      {\n        title: 'Son Ä°Ålem Tarihi',\n        dataIndex: 'last_operation_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.last_operation_date, 'D MMMM YYYY, HH:mm').unix() - dayjs(b.last_operation_date, 'D MMMM YYYY, HH:mm').unix(),\n        ...this.getColumnSearchProps('last_operation_date'),\n      },\n      {\n        title: 'Durum',\n        dataIndex: 'status',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.status.localeCompare(b.status),\n        ...this.getColumnSearchProps('status'),\n      },\n      {\n        title: 'ÃrÃ¼n Tipi',\n        dataIndex: 'production_unit',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps('production_unit'),\n      },\n      {\n        title: 'Depo Boyutu',\n        dataIndex: 'tank_size',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.tank_size - b.tank_size,\n        ...this.getColumnSearchProps('tank_size'),\n      },\n      {\n        title: 'Depo Rengi',\n        dataIndex: 'caldron_color',\n        ...this.getColumnSearchProps('caldron_color'),\n      },\n      {\n        title: 'Depo Tipi',\n        dataIndex: 'caldron_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a?.caldron_type?.localeCompare(b?.caldron_type),\n      },\n      {\n        title: 'Marka',\n        dataIndex: 'brand',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.brand.localeCompare(b.brand),\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' || this.props.user.role == 'tankproducer' ? (\n              <Button\n                block\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode('TU' + order.serial_number);\n                }}\n              >\n                QR Kodu YazdÄ±r\n              </Button>\n            ) : null}\n            {this.props.user.role == 'tankproducer' && (order.status === 'Onay Bekliyor' || order.status === 'Ãretiliyor (OnaylandÄ±)') && (\n              <Button\n                block\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  const status = order.status === 'Onay Bekliyor' ? 'pending' : order.status === 'Ãretiliyor (OnaylandÄ±)' ? 'confirmed' : '';\n                  sendToTankProducer(status, order.id).then(async () => {\n                    const result = await GetAllTankProducerOrders();\n                    const filteredResult = this.filterResult(result);\n                    this.setState({ data: filteredResult });\n                  });\n                }}\n              >\n                {order.status === 'Onay Bekliyor' ? 'Onayla' : order.status === 'Ãretiliyor (OnaylandÄ±)' ? 'Ãretildi Olarak Ä°Åaretle' : ''}\n              </Button>\n            )}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value: string) {\n    let printWindow = window.open('', '', 'height=1024, width=1024');\n\n    let svg = renderToString(\n      <div style={{ width: '50mm', height: '64mm' }}>\n        <QRCode value={value} style={{ height: '44mm', width: '44mm', margin: '3mm' }} renderAs=\"svg\" />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  filterResult(result) {\n    result.forEach((record) => {\n      record.last_operation_date = record.deliver_date ? dayjs(record.deliver_date).format('D MMMM YYYY, HH:mm') : record.producted_date ? dayjs(record.producted_date).format('D MMMM YYYY, HH:mm') : record.confirmed_date ? dayjs(record.confirmed_date).format('D MMMM YYYY, HH:mm') : dayjs(record.order_date).format('D MMMM YYYY, HH:mm');\n      record.order_date = dayjs(record.order_date).format('D MMMM YYYY, HH:mm');\n      record.planned_date = record.planned_date ? dayjs(record.planned_date).format('D MMMM YYYY') : '';\n      record.brand = Capitalize(record.brand);\n      record.status = record.status == 'delivered' ? 'Teslim Edildi' : record.status == 'producted' ? 'Ãretim TamamlandÄ± (HazÄ±r)' : record.status == 'confirmed' ? 'Ãretiliyor (OnaylandÄ±)' : record.status == 'cancelled' ? 'Ä°ptal Edildi' : record.status == 'ontheway' ? 'Yolda (SaruhanlÄ±ya GÃ¶nderildi)' : record.status === 'pending' ? 'Onay Bekliyor' : record.status;\n      record.caldron_type = record.caldron_type ? Capitalize(record.caldron_type) : '';\n      record.caldron_color = Capitalize(record.caldron_color);\n      record.status = Capitalize(record.status);\n    });\n    return result;\n  }\n\n  componentDidMount = async () => {\n    const result = await GetAllTankProducerOrders();\n    const filteredResult = this.filterResult(result);\n    this.setState({ data: filteredResult });\n\n    let csv = [['SipariÅ No', 'MÃ¼Återi', 'SipariÅ Tarihi', 'Son Ä°Ålem Tarihi', 'Durum', 'Depo Boyutu', 'Kazan Tipi', 'Kazan Rengi', 'Marka']];\n\n    result.forEach((record) => csv.push([record.order_no, record.customer, record.order_date, record.last_operation_date, record.status, record.tank_size, record.caldron_type, record.caldron_color, record.brand]));\n\n    this.setState({ csvdata: csv });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table rowKey={(row) => 'key' + row.id} size=\"small\" loading={this.state.loading} pagination={{ defaultPageSize: 10, position: ['bottomRight'] }} columns={this.state.columns} dataSource={state.data} />\n        <Button style={{ float: 'right', marginRight: 10 }} type=\"primary\">\n          <CSVLink data={state.csvdata}>CSV'ye aktar</CSVLink>\n        </Button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(TankProducerScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { Capitalize, ConvertDateTime } from '../helper';\nimport OrderDetails from '../components/OrderDetails';\nimport { GenericOrder, sendTo, GetProductionReadyOrders } from '../services/OrderService';\nimport { connect } from 'react-redux';\n\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nclass PendingOrdersScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    orderModalVisible: false,\n    orderDetails: {},\n    loading: false,\n    size: 'small',\n    top: 'none',\n    bottom: 'bottomRight',\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: 'SipariÅ No',\n        dataIndex: 'order_no',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps('order_no'),\n      },\n      {\n        title: 'MÃ¼Återi',\n        dataIndex: 'customer',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps('customer'),\n      },\n      {\n        title: 'Telefon No',\n        dataIndex: 'phone_number',\n        ...this.getColumnSearchProps('phone_number'),\n      },\n      {\n        title: 'Adres',\n        dataIndex: 'address',\n        ...this.getColumnSearchProps('address'),\n      },\n      {\n        title: 'Seri No',\n        dataIndex: 'serial_number',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps('serial_number'),\n      },\n      {\n        title: 'ÃrÃ¼n Tipi',\n        dataIndex: 'production_unit',\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) => a.production_unit.localeCompare(b.production_unit),\n      },\n\n      {\n        title: 'SipariÅ Tarihi',\n        dataIndex: 'last_location_date',\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.last_location_date).unix() - moment(b.last_location_date).unix(),\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                disabled={order.production_unit == 'diger' ? false : !order.can_start_production}\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  sendTo(order.production_unit, order.id).then((res) => {\n                    if (res) {\n                      this.GetPendingOrdersData();\n                    }\n                  });\n                }}\n              >\n                Ãretime BaÅla\n              </Button>\n            ) : null}\n          </td>\n        ),\n        sorter: (a: GenericOrder, b: GenericOrder) => (a.production_unit == 'diger' ? false : !a.can_start_production) - (b.production_unit == 'diger' ? false : !b.can_start_production),\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    this.GetPendingOrdersData();\n  };\n\n  GetPendingOrdersData = () => {\n    GetProductionReadyOrders().then((result) => {\n      this.setState({ data: result });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <Table\n        rowKey={(row) => 'key' + row.id}\n        size=\"small\"\n        loading={state.loading}\n        pagination={{ defaultPageSize: 10, position: ['bottomRight'] }}\n        columns={state.columns}\n        dataSource={state.data}\n        expandable={{\n          expandedRowRender: (record) => <OrderDetails serial_number={record.serial_number} />,\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(PendingOrdersScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder, GetActiveOrders } from \"../services/OrderService\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport OrderDetails from \"../components/OrderDetails\";\n\n\nimport 'dayjs/locale/tr'\nimport dayjs, { Dayjs } from 'dayjs';\ndayjs.locale('tr')\n\nexport default class ActiveOrdersScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? \"#1890ff\" : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[\"Seri No\", \"SipariÅ No\", \"SipariÅ Tarihi\", \"MÃ¼Återi\", \"Telefon\", \"Adres\", \"SipariÅ Alan\", \"SipariÅ Ãzellikleri\", \"Durum\", \"Ãretim Birimi\"]],\n    movableMachines: [],\n    orderModalVisible: false,\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"SipariÅ No\",\n        dataIndex: \"order_no\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"MÃ¼Återi\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"ÃrÃ¼n Tipi\",\n        dataIndex: \"production_unit\",\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) => a.production_unit.localeCompare(b.production_unit),\n      },\n      {\n        title: \"Son Ä°Ålem Tarihi\",\n        dataIndex: \"last_location_date\",\n        defaultSortOrder: \"descend\",\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.last_location_date).unix() - dayjs(b.last_location_date).unix(),\n      },\n      {\n        title: \"BulunduÄu Konum\",\n        dataIndex: \"location\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps(\"location\"),\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    let csvdata = [[\"Seri No\", \"SipariÅ No\", \"SipariÅ Tarihi\", \"MÃ¼Återi\", \"Telefon\", \"Adres\", \"SipariÅ Alan\", \"Durum\", \"Ãretim Birimi\", \"SipariÅ Ãzellikleri\"]];\n    GetActiveOrders().then((res) => {\n      let filteredRes = res?.filter((detail) => !(detail.location == \"iptal\" || detail.location == \"teslimat\" || detail.location == \"onaybekliyor\"));\n      filteredRes = filteredRes?.map((detail) => {\n        detail.location = ConvertOrderLocation(detail.location);\n        return detail;\n      });\n\n      this.setState({ data: filteredRes, csvDataloaded: true });\n      this.state.data?.forEach((order) => {\n        let order_details = order.brand + \"$\" + order.production_unit + \"$\" + order.caldron_color + \"$\" + order.caldron_type + \"$\" + order.cooler_type + \"$\" + order.fan_radius + \"$\" + order.fan_type + \"$\" + order.pump + \"$\" + order.meme_distance + \"$\" + order.meme_type + \"$\" + order.tank_size + \"$\" + order.type + \"$\" + order.tow_type + \"$\" + order.alt_features + \"$\" + order.year;\n        csvdata.push([order.serial_number, order.order_no, order.date, order.customer, order.phone_number, order.address, order.order_tooker, order.location, order.production_unit, order_details]);\n      });\n      this.setState({ csvdata });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.last_location_date + row.serial_number}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n          expandable={{\n            expandedRowRender: (record) => <OrderDetails serial_number={record.serial_number} />,\n          }}\n        />\n      </>\n    );\n  }\n}\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\nimport { GetTaskRequestConfig } from \"./OrderService\";\nimport * as FileSaver from \"file-saver\";\n\nexport async function GetReports() {\n  const response = await Axios.get(API_ADDRESS + \"/api/report/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport class ExportCSVModel extends GetTaskRequestConfig {\n  OrderStartDate: string = \"\";\n  OrderEndDate: string = \"\";\n  StatusStartDate: string = \"\";\n  StatusEndDate: string = \"\";\n}\n\nexport async function ExportCSVReport(model: ExportCSVModel) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/report/ExportToCSV\",\n    model,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n      responseType: \"blob\",\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        FileSaver.saveAs(res.data, \"rapor.xlsx\");\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\nexport async function ExportCSVReportWithGroup(model: ExportCSVModel) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/report/ExportToCSVByGroupMachine\",\n    model,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n      responseType: \"blob\",\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        FileSaver.saveAs(res.data, \"rapor.xlsx\");\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\ninterface Props {\n  title: string;\n  data: string | number;\n  color: string;\n}\nconst { Title } = Typography;\n\nfunction ReportSquare(props: Props) {\n  const { title, data, color } = props;\n\n  return (\n    <div style={{ boxSizing: \"border-box\", overflow: \"auto\", maxWidth: \"100%\", margin: 10, borderRadius: 10 }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignContent: \"center\", width: \"100%\", backgroundColor: color, padding: 5 }}>\n        <Title level={5} style={{ margin: 0, color: \"white\" }}>\n          {title}\n        </Title>\n        <Title level={3} style={{ margin: 0, color: \"white\" }}>\n          {data}\n        </Title>\n      </div>\n    </div>\n  );\n}\n\nexport default ReportSquare;\n","import { Col, Row, Typography, Form, Checkbox, DatePicker, Button } from \"antd\";\nimport {\n  ExportCSVModel,\n  ExportCSVReport,\n  ExportCSVReportWithGroup,\n} from \"../services/ReportService\";\nimport { useHistory } from \"react-router\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\ndayjs.locale(\"tr\");\n\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\n\nfunction ExportCSV() {\n  const history = useHistory();\n  const formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 24 },\n  };\n  const [isChecked, setIsChecked] = useState(false);\n\n  const onFinish = (values: any) => {\n    let model = new ExportCSVModel();\n\n    values[\"bulundugu-konum\"]?.forEach((value) => {\n      model[value] = true;\n    });\n\n    model.OrderStartDate = values[\"siparis-tarihi\"][0];\n    model.OrderEndDate = values[\"siparis-tarihi\"][1];\n    model.StatusStartDate = values[\"son-islem-tarihi\"][0];\n    model.StatusEndDate = values[\"son-islem-tarihi\"][1];\n\n    !isChecked\n      ? ExportCSVReport(model).then((res) => {\n          if (res) {\n            console.log(\"excel file donwloaded\");\n            history.push(\"/\");\n            //setCSVData(res);\n          }\n        })\n      : ExportCSVReportWithGroup(model).then((res) => {\n          if (res) {\n            console.log(\"excel file donwloaded\");\n            history.push(\"/\");\n          }\n        });\n  };\n\n  const locations: { [key: string]: string } = {\n    turbo: \"Turbo Ãretimde\",\n    kollu: \"Kollu Ãretimde\",\n    diger: \"DiÄer Ãretimde\",\n    test: \"Testte\",\n    iptal: \"Ä°ptal EdilmiÅ\",\n    onaybekliyor: \"Ãretim OnayÄ± Bekliyor\",\n    teslimat: \"Teslim EdilmiÅ\",\n    depo: \"Depoda\",\n    bahce: \"BahÃ§ede\",\n    planlandÄ±: \"PlanlandÄ±\",\n  };\n\n  return (\n    <div\n      style={{\n        boxSizing: \"border-box\",\n        overflow: \"auto\",\n        maxWidth: \"100%\",\n        margin: 10,\n        borderRadius: 10,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignContent: \"center\",\n          width: \"100%\",\n          backgroundColor: \"rgb(240,240,240)\",\n          padding: \"5%\",\n        }}\n      >\n        <Title level={4}>SipariÅleri CSV'ye aktar</Title>\n        <Form\n          {...formItemLayout}\n          name=\"reportPrefences\"\n          onFinish={onFinish}\n          initialValues={{\n            \"bulundugu-konum\": [\"turbo\", \"kollu\", \"diger\", \"test\"],\n            \"siparis-tarihi\": [dayjs().startOf(\"year\"), dayjs().add(1, \"days\")],\n            \"son-islem-tarihi\": [\n              dayjs().startOf(\"year\"),\n              dayjs().add(1, \"days\"),\n            ],\n          }}\n        >\n          <Form.Item label=\"SipariÅ Tarihi\" name=\"siparis-tarihi\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item label=\"Son Ä°Ålem Tarihi\" name=\"son-islem-tarihi\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item name=\"bulundugu-konum\">\n            <Checkbox.Group>\n              <Row>\n                {(function renderCheckboxs() {\n                  return Object.keys(locations).map((location) => {\n                    return (\n                      <Col key={\"exportcsvcheckbox\" + location} span={12}>\n                        <Checkbox\n                          value={location}\n                          style={{ lineHeight: \"32px\" }}\n                        >\n                          {locations[location]}\n                        </Checkbox>\n                      </Col>\n                    );\n                  });\n                })()}\n              </Row>\n            </Checkbox.Group>\n          </Form.Item>\n          <Row\n            style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}\n          >\n            <Checkbox onChange={() => setIsChecked(!isChecked)}>\n              Grupla\n            </Checkbox>\n\n            <Button htmlType=\"submit\" type=\"primary\">\n              Excel'e Aktar\n            </Button>\n          </Row>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default ExportCSV;\n","/* eslint-disable eqeqeq */\nimport React from 'react';\nimport { Row, Col, Spin, Layout  } from 'antd';\nimport { Body } from './MainScreen';\nimport { GetReports } from '../services/ReportService';\nimport ReportSquare from '../components/ReportSquare';\nimport ExportCSV from '../components/ExportCSV';\nimport Title from 'antd/lib/typography/Title';\nimport Text from 'antd/lib/typography/Text';\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nconst { Header, Footer, Sider, Content } = Layout;\n\ninterface ReportModel {\n  toplam_siparis: number;\n  turbo_siparis: number;\n  kollu_siparis: number;\n  diger_siparis: number;\n  kollugereken: number;\n  turbogereken: number;\n  digergereken: number;\n  kolluplanlanan: number;\n  turboplanlanan: number;\n  digerplanlanan: number;\n  turbo_bugun_yapilan_is: [string];\n  kollu_bugun_yapilan_is: [string];\n  diger_bugun_yapilan_is: [string];\n  test_bugun_yapilan_is: [string];\n  teslimat_bugun_yapilan_is: [string];\n  stocks: { [key: string]: number };\n}\n\nclass StatisticsScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n  state = { reports: null as unknown as ReportModel };\n\n  searchInput: React.ReactNode;\n\n  componentDidMount() {\n    GetReports().then((res) => {\n      if (res) {\n        res.test_bugun_yapilan_is = this.uniq(res.test_bugun_yapilan_is);\n        res.turbo_bugun_yapilan_is = this.uniq(res.turbo_bugun_yapilan_is);\n        res.diger_bugun_yapilan_is = this.uniq(res.diger_bugun_yapilan_is);\n        res.teslimat_bugun_yapilan_is = this.uniq(res.teslimat_bugun_yapilan_is);\n        res.kollu_bugun_yapilan_is = this.uniq(res.kollu_bugun_yapilan_is);\n      }\n      if (res) this.setState({ reports: res });\n    });\n  }\n\n  uniq(a: Array<any>) {\n    return Array.from(new Set(a));\n  }\n\n  renderReports() {\n    const { reports } = this.state;\n    return (\n      <>\n        <ReportSquare title=\"Toplam Onay Bekleyen SipariÅ\" data={reports?.toplam_siparis} color=\"#4A66C5\" />\n        <ReportSquare title=\"Kollu Onay Bekleyen SipariÅ\" data={reports?.kollu_siparis} color=\"#898C94\" />\n        <ReportSquare title=\"Kollu Ãretimde\" data={reports?.kollugereken} color=\"#FF7800\" />\n        <ReportSquare title=\"Kollu Planlanan\" data={reports?.kolluplanlanan} color=\"#EE204D\" />\n        <ReportSquare title=\"Turbo Onay Bekleyen SipariÅ\" data={reports?.turbo_siparis} color=\"#9C459E\" />\n        <ReportSquare title=\"Turbo Ãretimde\" data={reports?.turbogereken} color=\"#8EBF00\" />\n        <ReportSquare title=\"Turbo Planlanan\" data={reports?.turboplanlanan} color=\"#4A66C5\" />\n      </>\n    );\n  }\n\n  renderStocks() {\n    const { reports } = this.state;\n    return (\n      <>\n        {Object.keys(reports?.stocks).length > 0 ? (\n          <>\n            <ReportSquare title=\"DiÄer Onay Bekleyen SipariÅ\" data={reports?.diger_siparis} color=\"#00C5CD\" />\n            <ReportSquare title=\"DiÄer Ãretimde\" data={reports?.digergereken} color=\"#499370\" />\n            <ReportSquare title=\"DiÄer Planlanan\" data={reports?.digerplanlanan} color=\"#8EBF00\" />\n            <ReportSquare title=\"BahÃ§edeki Turbo Makinalar\" data={reports?.stocks['bahce turbo'] ? reports?.stocks['bahce turbo'] : 0} color=\"#B4674D\" />\n            <ReportSquare title=\"Depodaki Turbo Makinalar\" data={reports?.stocks['depo turbo'] ? reports?.stocks['depo turbo'] : 0} color=\"#EE204D\" />\n            <ReportSquare title=\"BahÃ§edeki Kollu Makinalar\" data={reports?.stocks['bahce kollu'] ? reports?.stocks['bahce kollu'] : 0} color=\"#1A4876\" />\n            <ReportSquare title=\"Depodaki Kollu Makinalar\" data={reports?.stocks['depo kollu'] ? reports?.stocks['bahce kollu'] : 0} color=\"#8EE53F\" />\n            <ReportSquare title=\"BahÃ§edeki DiÄer Makinalar\" data={reports?.stocks['bahce diger'] ? reports?.stocks['bahce diger'] : 0} color=\"#FF7518\" />\n            <ReportSquare title=\"Depodaki DiÄer Makinalar\" data={reports?.stocks['depo diger'] ? reports?.stocks['depo diger'] : 0} color=\"#00C5CD\" />\n          </>\n        ) : (\n          <Spin />\n        )}\n      </>\n    );\n  }\n\n  renderDailyCompletedTasks() {\n    return (\n      <div style={{ boxSizing: 'border-box', overflow: 'auto', maxWidth: '100%', margin: 10, borderRadius: 10 }}>\n        <div style={{ display: 'flex', flexDirection: 'column', alignContent: 'center', width: '100%', backgroundColor: '#1A4876', padding: 5 }}>\n          <Title level={3} style={{ color: 'white', textAlign: 'center' }}>\n            BugÃ¼n YapÄ±lan Ä°Åler\n          </Title>\n          <Row gutter={[0, 24]}>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: 'center' }}>\n              <Title level={5} style={{ margin: 0, color: 'white', textAlign: 'center' }}>\n                Turbo Ãretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.turbo_bugun_yapilan_is.map((serial_number: string) => {\n                  return (\n                    <Row key={'turborowkey' + serial_number}>\n                      <Text code style={{ margin: 0, width: '100%', color: 'white' }}>\n                        {serial_number}\n                      </Text>\n                    </Row>\n                  );\n                });\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: 'center' }}>\n              <Title level={5} style={{ margin: 0, color: 'white', textAlign: 'center' }}>\n                Kollu Ãretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.kollu_bugun_yapilan_is.map((serial_number: string) => {\n                  return (\n                    <Row key={'kollurowkey' + serial_number}>\n                      <Text code style={{ margin: 0, width: '100%', color: 'white' }}>\n                        {serial_number}\n                      </Text>\n                    </Row>\n                  );\n                });\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: 'center' }}>\n              <Title level={5} style={{ margin: 0, color: 'white', textAlign: 'center' }}>\n                DiÄer Ãretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.diger_bugun_yapilan_is.map((serial_number: string) => {\n                  return (\n                    <Row key={'digerrowkey' + serial_number}>\n                      <Text code style={{ margin: 0, width: '100%', color: 'white' }}>\n                        {serial_number}\n                      </Text>\n                    </Row>\n                  );\n                });\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: 'center' }}>\n              <Title level={5} style={{ margin: 0, color: 'white', textAlign: 'center' }}>\n                Test Edilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.test_bugun_yapilan_is.map((serial_number: string) => {\n                  return (\n                    <Row key={'testrowkey' + serial_number}>\n                      <Text code style={{ margin: 0, width: '100%', color: 'white' }}>\n                        {serial_number}\n                      </Text>\n                    </Row>\n                  );\n                });\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: 'center' }}>\n              <Title level={5} style={{ margin: 0, color: 'white', textAlign: 'center' }}>\n                Teslim Edilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.teslimat_bugun_yapilan_is.map((serial_number: string) => {\n                  return (\n                    <Row key={'teslimatrowkey' + serial_number}>\n                      <Text code style={{ margin: 0, width: '100%', color: 'white' }}>\n                        {serial_number}\n                      </Text>\n                    </Row>\n                  );\n                });\n              })()}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        {this.state.reports ? (\n          <Row>\n            <Col xs={24} sm={24} md={12} lg={8} xl={6}>\n              {this.state.reports ? this.renderReports() : <Spin />}\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={8} xl={6}>\n              {this.state.reports ? this.renderStocks() : <Spin />}\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={8} xl={12}>\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                {this.state.reports ? this.renderDailyCompletedTasks() : <Spin />}\n              </Col>\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                <ExportCSV />\n              </Col>\n            </Col>\n          </Row>\n        ) : (\n          <Spin style={{ alignSelf: 'center' }} />\n        )}\n      </Layout>\n    );\n  }\n}\n\nconst mapStateToProps = (state: any) => ({\n  user: state.auth.user,\n});\n\nexport default StatisticsScreen;\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport async function CreateProductionPlan(values: any, onSuccess: () => void) {\n  console.log(values);\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/ProductionPlan/CreatePlan\",\n    values,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res) {\n        onSuccess();\n        return true;\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: (\n          <p>Plan oluÅturulurken bir hata oluÅtu lÃ¼tfen tekrar deneyin..</p>\n        ),\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function CancelProductionPlan(\n  machineId: number,\n  onSuccess: () => void\n) {\n  const response = await Axios.put(\n    API_ADDRESS + `/api/ProductionPlan/CancelPlan/${machineId}`,\n    null,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res) {\n        onSuccess();\n        return true;\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: (\n          <p>SipariÅ iptal edilirken bir hata oluÅtu.LÃ¼tfen tekrar deneyin..</p>\n        ),\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetProductionPlans() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionPlan/GetPlans\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetChassisProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetChassisProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetArmProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetArmProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function CreateGenericTask(data: {\n  title: string;\n  description: string;\n  group: string;\n  amount: number;\n}) {\n  console.log(data);\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/Task/AddGenericTask\",\n    data,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function ModifyGenericTask(data: {\n  id: number;\n  new_group: string;\n}) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/Task/ModifyGenericTask\",\n    data,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetActiveGenericTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/Task/GetGenericTasksWeb\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\nexport async function GetGenericTaskWithRole(id: string) {\n  const response = await Axios.get(\n    API_ADDRESS + `/api/Task/GetGenericTasksWithRole/${id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFinishedGenericTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/Task/GetFinishedGenericTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteGenericTask(id: number) {\n  const response = await Axios.delete(\n    API_ADDRESS + \"/api/Task/DeleteGenericTask/\" + id,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir hata oluÅtu\",\n        content: <p>LÃ¼tfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function DivideGenericTask(id: number, amount: number) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/Task/DivideGenericTask/\" + id + \"/\" + amount,\n    {},\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir hata oluÅtu\",\n        content: <p>LÃ¼tfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function UpdateGenericTask(id: number, amount: number) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/Task/UpdateGenericTask`,\n    {\n      id,\n      amount,\n    },\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n      Modal.error({\n        title: \"Bir hata oluÅtu\",\n        content: <p>LÃ¼tfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetFanProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetFanProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n","/* eslint-disable eqeqeq */\nimport React, { createRef } from 'react';\nimport { Button, Calendar, Card, Col, Form, Popconfirm, Row, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { GetPendingOrders } from '../services/OrderService';\nimport Title from 'antd/lib/typography/Title';\nimport { CancelProductionPlan, CreateProductionPlan, GetProductionPlans } from '../services/ProductionPlanService';\nimport Text from 'antd/lib/typography/Text';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { FormInstance } from 'antd/lib/form';\nimport { CSVLink } from 'react-csv';\nimport { ConvertDateTime } from '../helper';\nimport * as XLSX from 'xlsx/xlsx.mjs';\n\nimport 'dayjs/locale/tr'\nimport dayjs, { Dayjs } from 'dayjs';\n\nconst { Option } = Select;\ndayjs.locale('tr')\n\nconst layout = {\n  labelCol: { span: 7 },\n  wrapperCol: { span: 17 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass OrderPlanningScreen extends React.Component<any> {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n  formRef = createRef<FormInstance>();\n\n  constructor(props: any) {\n    super(props);\n    this.dateCellRender = this.dateCellRender.bind(this);\n    this.GetData = this.GetData.bind(this);\n  }\n\n  state = {\n    loading: true,\n    selectedDate: null as unknown as Dayjs,\n    pendingOrders: [] as unknown as [any],\n    data: [] as unknown as [any],\n    csvdata: [[]] as unknown as [[any]],\n  };\n\n  componentDidMount() {\n    this.GetData();\n  }\n\n  GetData() {\n    GetProductionPlans().then((res) => {\n      this.setState({ data: res });\n      console.log(res);\n      let csv = [['Planlanan Tarih', 'MÃ¼Återi', 'Seri No', 'ÃrÃ¼n', 'Durum']];\n\n      res.forEach((record: any) => csv.push([ConvertDateTime(record.planned_date), record.customer, record.serial_number, record.description, record.status]));\n      this.setState({ csvdata: csv, data: res, loading: false });\n    });\n    GetPendingOrders().then((res) => {\n      this.setState({ pendingOrders: res });\n    });\n  }\n\n  dateCellRender(value: Dayjs) {\n    const filteredData = this.state.data?.filter((data) => value.isSame(data.planned_date, 'day'));\n    return (\n      <ul style={{ margin: 0, padding: 0 }} className=\"events\">\n        {filteredData?.map((item) => (\n          <li key={item.serial_number}>\n            <Text style={{ fontSize: 8 }} ellipsis>\n              {item.serial_number}\n            </Text>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  onFinish = (values: any) => {\n    console.log('Success:', values);\n    CreateProductionPlan({ ...values, planned_date: this.state?.selectedDate.format() }, this.GetData).then(() => {\n      this.formRef.current?.resetFields();\n    });\n  };\n\n  onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  SaveExcel = (data) =>{\n    console.log(\"clikced\");\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  }\n  render() {\n    const { selectedDate, pendingOrders } = this.state;\n    const { onFinish, onFinishFailed } = this;\n\n    return (\n      <>\n        <Row>\n          <Col md={24} lg={10}>\n            {selectedDate ? (\n              <>\n                <Card style={{ margin: '5%' }}>\n                  <Form {...layout} name=\"basic\" ref={this.formRef} onFinish={onFinish} onFinishFailed={onFinishFailed}>\n                    <Title level={5}>{`${selectedDate?.startOf('day').locale('tr').format('D MMMM YYYY')} Tarihine Ä°Å Ekle`}</Title>\n\n                    <Form.Item label=\"Ãretilecek Makinalar\" name=\"machine_ids\" rules={[{ required: true, message: 'LÃ¼tfen en az bir makine seÃ§in.' }]}>\n                      <Select mode=\"multiple\" optionFilterProp=\"children\" filterOption={(input, option) => option?.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                        {(() => {\n                          return pendingOrders?.map((order) => {\n                            return <Option value={order.id}>{order.customer + ' ' + order.serial_number}</Option>;\n                          });\n                        })()}\n                      </Select>\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                      {this.props.user.role == 'admin' && (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                          Ekle\n                        </Button>\n                      )}\n                    </Form.Item>\n                  </Form>\n                </Card>\n                <Card style={{ margin: '5%' }}>\n                  {(() => {\n                    let tasks = this.state.data?.filter((data) => this.state.selectedDate?.isSame(data.planned_date, 'day'));\n                    return (\n                      <ul style={{ margin: 0, padding: 0 }} className=\"events\">\n                        {tasks?.map((item) => (\n                          <li key={item.serial_number}>\n                            <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between', margin: 5, padding: 2, borderBottom: '0.5px solid' }}>\n                              <Text ellipsis>{item.customer + ' - ' + item.serial_number}</Text>\n                              {this.props.user.role == 'admin' && (\n                                <Popconfirm\n                                  title=\"Bu planÄ± silmek istediÄinizden emin misiniz?\"\n                                  onConfirm={() => {\n                                    CancelProductionPlan(item.machine_id, this.GetData);\n                                  }}\n                                  okText=\"Evet\"\n                                  cancelText=\"HayÄ±r\"\n                                >\n                                  <Button shape=\"circle\" icon={<DeleteOutlined />} danger />\n                                </Popconfirm>\n                              )}\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    );\n                  })()}\n                </Card>\n              </>\n            ) : null}\n          </Col>\n          <Col md={24} lg={14}>\n            <Button loading={this.state.loading} style={{ float: 'right' }} onClick={()=>this.SaveExcel(this.state.csvdata)}>\n              Excele Aktar\n            </Button>\n            <Calendar\n              onSelect={(date) => {\n                this.setState({ selectedDate: dayjs(date) });\n              }}\n              dateCellRender={this.dateCellRender}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { auth: { user: any } }, ownProps: any) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderPlanningScreen);\n","import { Spin, Timeline, Popconfirm, Button, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { RootState } from \"../redux/reducers\";\nimport { GetArmHistory, GetChassisHistory, GetFanHistory, GetOrderHistory, UndoArmTo, UndoChassisTo, UndoFanTo, UndoSendTo } from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  machine_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n  partType:PartTypes;\n}\n\nenum PartTypes {\n  arm,\n  fan,\n  chassis,\n}\n\nfunction PartsHistory(props: { machine_id: number; type: PartTypes }) {\n  const { machine_id, type } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    switch (type) {\n      case PartTypes.arm:\n        GetArmHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a: { row_created_date: number; }, b: { row_created_date: number; }) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.fan:\n        GetFanHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a: { row_created_date: number; }, b: { row_created_date: number; }) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.chassis:\n\n        GetChassisHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a: { row_created_date: number; }, b: { row_created_date: number; }) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n    }\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`GÃ¶nderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return data ? (\n    <Card style={{ marginBottom: 5 }} title={type == PartTypes.arm ? \"Kol Ä°Ålem GeÃ§miÅi\" : type == PartTypes.chassis ? \"Åase Ä°Ålem GeÃ§miÅi\" : \"Fan Ä°Ålem GeÃ§miÅi\"}>\n      <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n        {renderTimeline()}\n      </Timeline>\n    </Card>\n  ) : null;\n}\n\nfunction PartHistory(props: Props) {\n  const { isVisible, setIsVisible, machine_id, serial_number,partType } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n  function GetHistory() {\n\n    GetOrderHistory(machine_id).then((res) => {\n      console.log(\"GetOrderHistory\");\n      if (res) {\n        setData(res);\n        setLastLocation(res?.reduce((a: { row_created_date: number; }, b: { row_created_date: number; }) => (a.row_created_date > b.row_created_date ? a : b)));\n      }\n    });\n  }\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`GÃ¶nderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n  return (\n    <Modal title={serial_number + \" NumaralÄ± ParÃ§anÄ±n Ä°Ålem GeÃ§miÅi\"} visible={isVisible} footer={null} onCancel={() => setIsVisible(false)}>\n      <div style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {data ? (\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n\n            <PartsHistory machine_id={machine_id} type={partType} />\n            <Card title=\"Makine Ä°Ålem GeÃ§miÅi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n            {user.role === \"admin\" && lastLocation?.location !== \"onaybekliyor\" && lastLocation?.location !== \"iptal\" ? (\n              <Popconfirm\n                title=\"Bu parÃ§ayÄ± bir Ã¶nceki konuma gÃ¶ndermek istediÄinizden emin misiniz?\"\n                onConfirm={() => {\n                  switch (partType) {\n                    case PartTypes.arm:\n                      UndoArmTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                    case PartTypes.fan:\n                      UndoFanTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                    case PartTypes.chassis:\n                      UndoChassisTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                  }\n                }}\n                okText=\"Evet\"\n                cancelText=\"HayÄ±r\"\n              >\n                <Button style={{ marginBottom: 10 }} type=\"primary\">\n                  Bir Ãnceki Konuma Geri GÃ¶nder\n                </Button>\n              </Popconfirm>\n            ) : null}\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default PartHistory;\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GenericOrder, GetArmHistory, GetChassisHistory, GetFanHistory, UndoSendTo } from '../services/OrderService';\nimport { CSVLink } from 'react-csv';\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from '../helper';\nimport { GetChassisProductionTasks } from '../services/ProductionPlanService';\nimport { renderToString } from 'react-dom/server';\nimport QRCode from 'qrcode.react';\nimport { connect } from 'react-redux';\nimport PartHistory from '../components/PartsHistory';\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: false,\n    size: 'small',\n    top: 'none',\n    bottom: 'bottomRight',\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: 'SipariÅ No',\n        dataIndex: 'order_no',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps('order_no'),\n      },\n      {\n        title: 'Seri No',\n        dataIndex: 'serial_number',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps('serial_number'),\n      },\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps('type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Marka',\n        dataIndex: 'brand',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps('brand'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Model',\n        dataIndex: 'description',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps('model'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Fan Tipi',\n        dataIndex: 'cooler_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.cooler_type.localeCompare(b.cooler_type),\n        ...this.getColumnSearchProps('cooler_type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Åase Rengi',\n        dataIndex: 'chassis_color',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.cooler_type.localeCompare(b.cooler_type),\n        ...this.getColumnSearchProps('cooler_type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Depo Boyutu',\n        dataIndex: 'tank_size',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.tank_size - b.tank_size,\n        ...this.getColumnSearchProps('tank_size'),\n      },\n      {\n        title: 'Durum',\n        dataIndex: 'location',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps('location'),\n      },\n      {\n        title: 'Son Ä°Ålem Tarihi',\n        dataIndex: 'row_updated_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps('row_updated_date'),\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode('SU' + order.serial_number);\n                }}\n              >\n                QR Kodu YazdÄ±r\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  console.log(\"ID:\"+order.machine_id);\n                  this.setState({ \n                      historyModalVisible: true,\n                      historyModalId: order.machine_id, \n                      orderSelected: { serial_number: order.serial_number, order_id: order.id } \n                    });\n\n                }}\n              >\n                Ä°Ålem GeÃ§miÅi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n\n    ],\n  };\n\n  printQRCode(value: string) {\n    let printWindow = window.open('', '', 'height=1024, width=1024');\n\n    let svg = renderToString(\n      <div style={{ width: '50mm', height: '64mm' }}>\n        <QRCode value={value} style={{ height: '44mm', width: '44mm', margin: '3mm' }} renderAs=\"svg\" />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetChassisProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [['SipariÅ No', 'Seri No', 'Tip', 'Marka', 'ÃrÃ¼n', 'Fan Tipi', 'Åase Rengi', 'Kazan Boyutu', 'Durum', 'Son Ä°Ålem Tarihi']];\n\n      data?.forEach((record) => csv.push([record.order_no, record.serial_number, record.type, record.brand, record.description, record.cooler_type, record.chassis_color, record.tank_size, record.location, record.row_updated_date]));\n\n      this.setState({ csvdata: csv });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table rowKey={(row) => 'key' + row.id} size=\"small\" loading={this.state.loading} pagination={{ defaultPageSize: 10, position: ['bottomRight'] }} columns={this.state.columns} dataSource={state.data} />\n        <Button style={{ float: 'right', marginRight: 10 }} type=\"primary\">\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        {this.state.historyModalVisible ? <PartHistory \n        key={this.state.historyModalId} \n        isVisible={this.state.historyModalVisible} \n        machine_id={this.state.historyModalId} \n        serial_number={this.state.orderSelected?.serial_number} \n        partType = {2}\n        setIsVisible={(visible) => this.setState({ historyModalVisible: visible })} /> : null}\n\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GenericOrder } from '../services/OrderService';\nimport { CSVLink } from 'react-csv';\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from '../helper';\nimport { GetArmProductionTasks } from '../services/ProductionPlanService';\nimport { renderToString } from 'react-dom/server';\nimport QRCode from 'qrcode.react';\nimport { connect } from 'react-redux';\nimport PartHistory from '../components/PartsHistory';\n\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: false,\n    size: 'small',\n    top: 'none',\n    bottom: 'bottomRight',\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: 'SipariÅ No',\n        dataIndex: 'order_no',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps('order_no'),\n      },\n      {\n        title: 'Seri No',\n        dataIndex: 'serial_number',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps('serial_number'),\n      },\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps('type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Marka',\n        dataIndex: 'brand',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps('brand'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Model',\n        dataIndex: 'description',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps('model'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Kol Tipi',\n        dataIndex: 'arm_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.arm_type.localeCompare(b.arm_type),\n        ...this.getColumnSearchProps('arm_type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Kol UzunluÄu',\n        dataIndex: 'arm_length',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.arm_length.localeCompare(b.arm_length),\n        ...this.getColumnSearchProps('arm_length'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Durum',\n        dataIndex: 'location',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps('location'),\n      },\n      {\n        title: 'Son Ä°Ålem Tarihi',\n        dataIndex: 'row_updated_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps('row_updated_date'),\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode('KU' + order.serial_number);\n                }}\n              >\n                QR Kodu YazdÄ±r\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  console.log(\"ID:\"+order.machine_id);\n                  this.setState({ \n                      historyModalVisible: true,\n                      historyModalId: order.machine_id, \n                      orderSelected: { serial_number: order.serial_number, order_id: order.id } \n                    });\n\n                }}\n              >\n                Ä°Ålem GeÃ§miÅi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value: string, amount: number) {\n    let printWindow = window.open('', '', 'height=1024, width=1024');\n\n    let svg = renderToString(\n      <div style={{ width: '50mm', height: '64mm' }}>\n        <QRCode value={value} style={{ height: '44mm', width: '44mm', margin: '3mm' }} renderAs=\"svg\" />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetArmProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [['SipariÅ No', 'Seri No', 'Tip', 'Marka', 'ÃrÃ¼n', 'Kol Tipi', 'Kol UzunluÄu', 'Durum', 'Son Ä°Ålem Tarihi']];\n\n      data?.forEach((record) => csv.push([record.order_no, record.serial_number, record.type, record.brand, record.description, record.arm_type, record.arm_length, record.location, record.row_updated_date]));\n\n      this.setState({ csvdata: csv });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table rowKey={(row) => 'key' + row.id} size=\"small\" loading={this.state.loading} pagination={{ defaultPageSize: 10, position: ['bottomRight'] }} columns={this.state.columns} dataSource={state.data} />\n        <Button style={{ float: 'right', marginRight: 10 }} type=\"primary\">\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        {this.state.historyModalVisible ? <PartHistory \n        key={this.state.historyModalId} \n        isVisible={this.state.historyModalVisible} \n        machine_id={this.state.historyModalId} \n        serial_number={this.state.orderSelected?.serial_number} \n        partType = {0}\n        setIsVisible={(visible) => this.setState({ historyModalVisible: visible })} /> : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from 'react';\nimport { Table, Input, Button } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GenericOrder } from '../services/OrderService';\nimport { CSVLink } from 'react-csv';\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from '../helper';\nimport { GetFanProductionTasks } from '../services/ProductionPlanService';\nimport { renderToString } from 'react-dom/server';\nimport QRCode from 'qrcode.react';\nimport { connect } from 'react-redux';\nimport PartHistory from '../components/PartsHistory';\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: false,\n    size: 'small',\n    top: 'none',\n    bottom: 'bottomRight',\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: 'SipariÅ No',\n        dataIndex: 'order_no',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps('order_no'),\n      },\n      {\n        title: 'Seri No',\n        dataIndex: 'serial_number',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps('serial_number'),\n      },\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps('type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Marka',\n        dataIndex: 'brand',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps('brand'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Model',\n        dataIndex: 'description',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps('model'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Fan Tipi',\n        dataIndex: 'cooler_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.cooler_type.localeCompare(b.cooler_type),\n        ...this.getColumnSearchProps('cooler_type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Pervane Tipi',\n        dataIndex: 'fan_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.fan_type.localeCompare(b.fan_type),\n        ...this.getColumnSearchProps('fan_type'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Pervane ÃapÄ±',\n        dataIndex: 'fan_radius',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.fan_radius - b.fan_radius,\n        ...this.getColumnSearchProps('fan_radius'),\n      },\n      {\n        title: 'Meme Tipi',\n        dataIndex: 'meme_type',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.meme_type - b.meme_type,\n        ...this.getColumnSearchProps('meme_type'),\n      },\n      {\n        title: 'Durum',\n        dataIndex: 'location',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps('location'),\n      },\n      {\n        title: 'Son Ä°Ålem Tarihi',\n        dataIndex: 'row_updated_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps('row_updated_date'),\n      },\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode('FU' + order.serial_number);\n                }}\n              >\n                QR Kodu YazdÄ±r\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {this.props.user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  console.log(\"ID:\"+order.machine_id);\n                  this.setState({ \n                      historyModalVisible: true,\n                      historyModalId: order.machine_id, \n                      orderSelected: { serial_number: order.serial_number, order_id: order.id } \n                    });\n\n                }}\n              >\n                Ä°Ålem GeÃ§miÅi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value: string, amount: number) {\n    let printWindow = window.open('', '', 'height=1024, width=1024');\n\n    let svg = renderToString(\n      <div style={{ width: '50mm', height: '64mm' }}>\n        <QRCode value={value} style={{ height: '44mm', width: '44mm', margin: '3mm' }} renderAs=\"svg\" />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetFanProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [['SipariÅ No', 'Seri No', 'Tip', 'Marka', 'ÃrÃ¼n', 'Fan Tipi', 'Pervane Tipi', 'Pervane ÃapÄ±', 'Meme Tipi', 'Durum', 'Son Ä°Ålem Tarihi']];\n\n      data?.forEach((record) => csv.push([record.order_no, record.serial_number, record.type, record.brand, record.description, record.cooler_type, record.fan_type, record.fan_radius, record.meme_type, record.location, record.row_updated_date]));\n\n      this.setState({ csvdata: csv });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table rowKey={(row) => 'key' + row.id} size=\"small\" loading={this.state.loading} pagination={{ defaultPageSize: 10, position: ['bottomRight'] }} columns={this.state.columns} dataSource={state.data} />\n        <Button style={{ float: 'right', marginRight: 10 }} type=\"primary\">\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        {this.state.historyModalVisible ? <PartHistory \n        key={this.state.historyModalId} \n        isVisible={this.state.historyModalVisible} \n        machine_id={this.state.historyModalId} \n        serial_number={this.state.orderSelected?.serial_number} \n        partType = {1}\n        setIsVisible={(visible) => this.setState({ historyModalVisible: visible })} /> : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","import { Spin, Timeline, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { RootState } from \"../redux/reducers\";\nimport { GetGenericTaskHistory } from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  task_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n}\n\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nfunction GenericTaskHistory(props: Props) {\n  const { isVisible, setIsVisible, task_id } = props;\n  const [data, setData] = useState((null as unknown) as []);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [task_id]);\n\n  function GetHistory() {\n    GetGenericTaskHistory(task_id).then((res) => {\n      if (res) {\n        setData(res);\n      }\n    });\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{config.role.find((role) => role.type === timeline.location)?.text}</b>\n          </p>\n          <p>{`GÃ¶nderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return (\n    <Modal title={task_id + \" NumaralÄ± Makinenin Ä°Ålem GeÃ§miÅi\"} visible={isVisible} footer={null} onCancel={() => setIsVisible(false)}>\n      <div style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {data ? (\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n            <Card title=\"Makine Ä°Ålem GeÃ§miÅi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default GenericTaskHistory;\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode, useState } from 'react';\nimport { Table, Input, Button, Select, Card, InputNumber, Popconfirm, Popover } from 'antd';\nimport { SearchOutlined } from '@ant-design/icons';\nimport { GenericOrder } from '../services/OrderService';\nimport { CSVLink } from 'react-csv';\nimport { Capitalize, ConvertDateTime } from '../helper';\nimport { DivideGenericTask, DeleteGenericTask, GetActiveGenericTasks, CreateGenericTask, GetFinishedGenericTasks, ModifyGenericTask, UpdateGenericTask } from '../services/ProductionPlanService';\nimport { connect } from 'react-redux';\nimport GenericTaskHistory from '../components/TaskHistory';\nimport * as XLSX from 'xlsx/xlsx.mjs';\n\n\n\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\nconst moment = require('moment/min/moment-with-locales');\nmoment.locale('tr');\n\nconst DivideContent = (Props: { maxAmount: number, id: number, getTasks: () => void }) => {\n  const [amount, setAmount] = useState(1);\n\n  return (\n    <div>\n      <InputNumber max={Props.maxAmount} style={{ width: '70%' }} size=\"large\" defaultValue={1} formatter={(value) => `BÃ¶lÃ¼nen Miktar ${value}`} parser={(value) => value.split('BÃ¶lÃ¼nen Miktar ')[1]} onChange={(value) => setAmount(value)} />\n      <Button\n        danger\n        size=\"large\"\n        style={{ marginLeft: 10 }}\n        onClick={() => {\n          DivideGenericTask(Props.id, amount).then((res) => {\n            if (res) Props.getTasks();\n          });\n        }}\n      >\n        BÃ¶l\n      </Button>\n    </div>\n  );\n};\n\nclass GenericTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({ setSelectedKeys, selectedKeys, confirm, clearFilters }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) => setSelectedKeys(e.target.value ? [e.target.value] : [])}\n          onPressEnter={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: 'block',\n          }}\n        />\n        <Button type=\"primary\" onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)} size=\"small\" style={{ width: 90, marginRight: 8 }}>\n          Bul\n        </Button>\n        <Button onClick={() => this.handleReset(clearFilters)} size=\"small\" style={{ width: 90 }}>\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => <SearchOutlined type=\"search\" style={{ color: filtered ? '#1890ff' : undefined }} />,\n    onFilter: (value, record) => record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: '' });\n  };\n\n  state = {\n    selectedRole: 'anasiparis',\n    selectedUnit: 'adet',\n    csvdata: [['GÃ¶rev No', 'Grup', 'BaÅlÄ±k', 'Ek AÃ§Ä±klama', 'Miktar', 'Kazan Tipi', 'Tamamlanan', 'GÃ¶rev Verilme Tarihi', 'Son Ä°Ålem Tarihi']],\n    loading: false,\n    data: [],\n    columns: [\n      {\n        title: 'GÃ¶rev No',\n        dataIndex: 'id',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.id - b.id,\n        ...this.getColumnSearchProps('id'),\n      },\n      {\n        title: 'Grup',\n        dataIndex: 'last_location',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.last_location.localeCompare(b.last_location),\n        ...this.getColumnSearchProps('last_location'),\n        render: (text: string, data) => (\n          <td>\n            {this.props.isActive ? (\n              <Select\n                disabled={this.props.user.role !== 'admin'}\n                value={text}\n                size=\"large\"\n                style={{ width: 200 }}\n                onChange={(value) => {\n                  ModifyGenericTask({ id: data.id, new_group: value }).then((res) => {\n                    this.GetTasks();\n                  });\n                }}\n              >\n                {(() => {\n                  return config.role?.map((role) => {\n                    return <Select.Option value={role.type}>{role.text}</Select.Option>;\n                  });\n                })()}\n              </Select>\n            ) : (\n              (() => {\n                return config.role?.map((role) => {\n                  if (role.type == text) return <p>{role.text}</p>;\n                });\n              })()\n            )}\n          </td>\n        ),\n      },\n      {\n        title: 'BaÅlÄ±k',\n        dataIndex: 'title',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.title.localeCompare(b.title),\n        ...this.getColumnSearchProps('title'),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: 'Ek AÃ§Ä±klama',\n        dataIndex: 'description',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps('description'),\n        render: (text: string) => <td>{text ? Capitalize(text) : ''}</td>,\n      },\n      {\n        title: 'Miktar',\n        dataIndex: 'amount',\n        sorter: (a: GenericOrder, b: GenericOrder) => parseInt(a.amount.split(' ')[0]) - parseInt(b.amount.split(' ')[0]),\n      },\n      {\n        title: 'Tamamlanan',\n        dataIndex: 'completed_amount',\n        sorter: (a: GenericOrder, b: GenericOrder) => a.completed_amount - b.completed_amount,\n      },\n      {\n        title: 'GÃ¶rev Verilme Tarihi',\n        dataIndex: 'row_created_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        ...this.getColumnSearchProps('row_created_date'),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: 'Son Ä°Ålem Tarihi',\n        dataIndex: 'row_updated_date',\n        sorter: (a: GenericOrder, b: GenericOrder) => moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps('row_updated_date'),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n\n      {\n        title: 'Ä°Ålemler',\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {(this.props.user.role == 'admin' || this.props.user.role == 'ambar1') && order.last_location == 'ambar1' && order.title == 'QR Kod BasÄ±mÄ±' ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu gÃ¶revi tamamlamak istediÄinizden eminmisiniz? <br /> Bu iÅlem geri alÄ±namaz\n                  </div>\n                }\n                onConfirm={() => {\n                  UpdateGenericTask(order.id, 1).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"HayÄ±r\"\n              >\n                <Button style={{ margin: 5 }} block size=\"large\" type=\"primary\">\n                  Tamamla\n                </Button>\n              </Popconfirm>\n            ) : null}\n            {this.props.user.role == 'admin' ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu gÃ¶revi silmek istediÄinizden eminmisiniz? <br /> Bu iÅlem geri alÄ±namaz\n                  </div>\n                }\n                onConfirm={() => {\n                  DeleteGenericTask(order.id).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayir\"\n              >\n                <Button style={{ margin: 5 }} block danger size=\"large\" type=\"primary\">\n                  Sil\n                </Button>\n              </Popconfirm>\n            ) : null}\n            <Button\n              block\n              style={{ margin: 5 }}\n              onClick={() => {\n                this.setState({ isModalVisible: true, selectedTaskId: order.id });\n              }}\n              size=\"large\"\n              type=\"primary\"\n            >\n              Ä°Ålem GeÃ§miÅi\n            </Button>\n            {this.props.user.role == 'admin' || this.props.user.role == 'lazer' || this.props.user.role === 'lazer2' || this.props.user.role === 'lazerkesim' || this.props.user.role == 'depo' && order.completed_amount == 0 && this.props.isActive ? (\n              <Popover\n                content={<DivideContent maxAmount={parseInt(order.amount.split(' ')[0]) - 1} id={order.id} getTasks={this.GetTasks.bind(this)} />}\n                title={\n                  <>\n                    GÃ¶revin tamamlanan ve kalan kÄ±smÄ±nÄ± ayÄ±rmak istediÄinizden emin misiniz? <br /> Bu iÅlem geri alÄ±namaz\n                  </>\n                }\n                trigger=\"click\"\n              >\n                <Button style={{ margin: 5 }} block danger size=\"large\" type=\"primary\">\n                  BÃ¶l\n                </Button>\n              </Popover>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.GetTasks();\n  }\n\n  componentWillReceiveProps = (newProps, oldProps) => {\n    setTimeout(() => {\n      this.GetTasks();\n    }, 500);\n  };\n\n  GetTasks() {\n    let isActive = this.props.isActive;\n    console.log(isActive);\n    this.setState({ loading: true });\n    let csvdata = [['GÃ¶rev No', 'Grup', 'BaÅlÄ±k', 'Ek AÃ§Ä±klama', 'Miktar', 'Tamamlanan', 'GÃ¶rev Verilme Tarihi', 'Son Ä°Ålem Tarihi']];\n\n    if (isActive) {\n      GetActiveGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([task.id, task.last_location, task.title, task.description, task.amount, task.completed_amount, ConvertDateTime(task.row_created_date), ConvertDateTime(task.row_updated_date)]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    } else {\n      GetFinishedGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([task.id, task.last_location, task.title, task.description, task.amount, task.completed_amount, ConvertDateTime(task.row_created_date), ConvertDateTime(task.row_updated_date)]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    }\n  }\n  SaveExcel = (data) =>{\n    console.log(\"clikced\");\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  }\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <div>\n          <Card>\n            <div style={{ display: 'flex', flexDirection: 'row', flexWrap: 'nowrap', marginBottom: 5 }}>\n              <Input\n                disabled={!this.props.isActive}\n                onChange={(e) => {\n                  this.setState({ selectedTitle: e.target.value });\n                }}\n                value={this.state.selectedTitle}\n                style={{ width: 500 }}\n                size=\"large\"\n                addonBefore=\"GÃ¶rev\"\n                placeholder=\"GÃ¶rev TanÄ±mÄ±\"\n              />\n              <Input\n                disabled={!this.props.isActive}\n                onChange={(e) => {\n                  this.setState({ selectedDescription: e.target.value });\n                }}\n                value={this.state.selectedDescription}\n                style={{ width: 500, marginLeft: 25, marginRight: 25 }}\n                size=\"large\"\n                addonBefore=\"AÃ§Ä±klama?\"\n                placeholder=\"Opsiyonel\"\n              />\n              <Input.Group compact>\n                <InputNumber\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedAmount: e });\n                  }}\n                  value={this.state.selectedAmount}\n                  style={{ width: 100 }}\n                  min={1}\n                  placeholder=\"0\"\n                  size=\"large\"\n                />\n                <Input\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedUnit: e.target.value });\n                  }}\n                  value={this.state.selectedUnit}\n                  style={{ width: 100 }}\n                  defaultValue=\"adet\"\n                  size=\"large\"\n                />\n              </Input.Group>\n              <Button\n                style={styles.button}\n                type=\"primary\"\n                loading={this.state.addTaskButtonLoading}\n                disabled={!state.selectedAmount || !state.selectedTitle || !state.selectedRole}\n                onClick={() => {\n                  this.setState({ addTaskButtonLoading: true });\n                  CreateGenericTask({ title: state.selectedTitle, description: state.selectedDescription, group: state.selectedRole, amount: state.selectedAmount, unit: state.selectedUnit }).then((res) => {\n                    if (res) {\n                      this.setState({ selectedTitle: null, selectedDescription: null, selectedAmount: null, selectedUnit: 'adet' });\n                      this.GetTasks();\n                    }\n                    this.setState({ addTaskButtonLoading: false });\n                  });\n                }}\n              >\n                Emir OluÅtur\n              </Button>\n            </div>\n            <Button style={{ ...styles.button, float: 'right' }} onClick={()=>this.SaveExcel(this.state.csvdata)}>\n              Emirleri Excele Aktar\n            </Button>\n          </Card>\n        </div>\n\n        <Table \n        pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }} \n        rowKey={(row) => 'key' + row.id} \n        size=\"small\" \n        style={{ maxWidth: '99.5%' }} \n        loading={this.state.loading} \n        columns={this.state.columns} \n        dataSource={state.data} />\n        <GenericTaskHistory isVisible={this.state.isModalVisible} task_id={this.state.selectedTaskId} setIsVisible={(value) => this.setState({ isModalVisible: value })} />\n      </>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(GenericTasksScreen);\n","import { Card, Table } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { GetTotalNeeds } from \"../services/NeedListService\";\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nfunction OtherNeedListScreen(props: Props) {\n  function NeedsListTable(props: { value: number | string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetTotalNeeds(value).then((res) => {\n        console.log(res);\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: \"ÃrÃ¼n AdÄ±\",\n        dataIndex: \"name\",\n        key: \"type\",\n        width: 50,\n      },\n      {\n        title: \"Gereken Miktar\",\n        dataIndex: \"amount\",\n        width: 50,\n      },\n    ];\n    return (\n      <Card style={{ width: \"60%\", marginBottom: \"1%\", marginTop: \"2%\" }}>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{text}</b>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        {(() => {\n          return configFile[\"tank_size\"]\n            .sort((a, b) => parseInt(b.type) - parseInt(a.type))\n            .map((tank_size) => {\n              return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.type} LT Tank Ä°Ã§in Ä°htiyaÃ§ Listesi`} />;\n            });\n        })()}\n      </div>\n    </>\n  );\n}\n\nexport default OtherNeedListScreen;\n","import { Button, Card, Form, Input, Popover, Table } from 'antd';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { addConfig } from '../services/ConfigService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nfunction UserRollsConfigScreen(props: Props) {\n \n    function renderTable() {\n      return Object.keys(configFile).map((key) => {\n        let configs = configFile[key];\n        if(key =='role'){\n          let configNew = configs as ISerializationEffectiveField[];\n          return renderTripleColumnTable(configNew, key);\n        }\n        /*if (typeof configs == 'object') {\n          console.log(configs);\n          if (Object.keys(configs[0]).length === 2) {\n            return renderDoubleColumnTable(configs as ISerializationUnEffectiveField[], key);\n          } else if (Object.keys(configs[0]).length === 3) {\n            return renderTripleColumnTable(configs as ISerializationEffectiveField[], key);\n          }\n        }*/\n        return null;\n      });\n    }\n      \n    function renderTripleColumnTable(config: ISerializationEffectiveField[], key: string) {\n      const columns = [\n        {\n          title: 'Tip',\n          dataIndex: 'type',\n          width: 33,\n        },\n        {\n          title: 'GÃ¶sterim',\n          dataIndex: 'text',\n          width: 33,\n        },\n        {\n          title: 'Ä°Ålem',\n          dataIndex: 'shortend',\n          width: 34,\n        }\n      ];\n      const data = config?.sort((a: any, b: any) => a.type.localeCompare(b.type))\n      return (\n        <Card key='hello' style={{ marginBottom: 10 }}>\n          <Table\n            pagination={false}\n            style={{ width: '100%' }}\n            title={() => (\n              <>\n                <b>KullanÄ±cÄ± Rolleri</b>\n                <Popover\n                  content={\n                    <Form\n                      layout=\"vertical\"\n                      onFinish={(values) => {\n                        addConfig(String(key), values);\n                      }}\n                    >\n                      <Form.Item\n                        name=\"type\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'LÃ¼tfen sadece kÃ¼Ã§Ã¼k harf ve boÅluksuz yazÄ±n.',\n                          },\n                        ]}\n                        label=\"Tip\"\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item name=\"text\" label=\"GÃ¶sterim\">\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"shortend\"\n                        label=\"KÄ±saltma\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'LÃ¼tfen sadece bÃ¼yÃ¼k harf yazÄ±n, ve harf sayÄ±sÄ±na dikkat edin.',\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                          Ekle\n                        </Button>\n                      </Form.Item>\n                    </Form>\n                  }\n                  title={`Yeni kullanÄ±cÄ± ekle`}\n                  trigger=\"click\"\n                >\n                  <Button type=\"primary\" style={{ float: 'right' }}>\n                    Ekle\n                  </Button>\n                </Popover>\n              </>\n            )}\n            dataSource={data}\n            columns={columns}\n            rowKey=\"type\"\n          />\n        </Card>\n      );\n    }\n  \n    return (\n      <>\n        <div key='hello' style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }} title=\"\">\n            {renderTable()}\n          </Card>\n        </div>\n      </>\n    );\n  }\n  \n  export default UserRollsConfigScreen;\n  ","import { Button, Card, Col, Form, Input, InputNumber, Modal, Popover, Row, Select, Table } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from \"../IAgrotekConfig\";\nimport { getConfig } from \"../redux/actions/authActions\";\nimport { RootState } from \"../redux/reducers\";\nimport { addConfig } from \"../services/ConfigService\";\nimport { AddGenericTaskRoleAuthorizationList, AddNeedsList, DeleteGenericTaskRoleAuthorizationList, DeleteNeedsList, GetGenericTaskRoleAuthorizationList, GetNeedsList } from \"../services/NeedListService\";\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst typeToString: { [key: string]: string } = {\n  machine_type: \"Makine Tipleri\",\n  brand: \"Markalar\",\n  type: \"Tipler\",\n  cooler_type: \"Fan Tipleri\",\n  tank_size: \"Depo BoyutlarÄ±\",\n  pump: \"Pompalar\",\n  tow_type: \"Ãeki Tipleri\",\n  chassis_color: \"Åase Renkleri\",\n  caldron_type: \"Kazan Tipleri\",\n  fan_type: \"Pervane Tipleri\",\n  arm_type: \"Kol Tipleri\",\n  fan_radius: \"Fan ÃaplarÄ±\",\n  order_tooker: \"SipariÅ Alanlar\",\n  commander: \"Kumandalar\",\n  turktraktormodel: \"TÃ¼rk TraktÃ¶r Modelleri\",\n  meme_type: \"Meme Tipleri\",\n  caldron_material: \"Kazan Materyalleri\",\n  role: \"KullanÄ±cÄ± Rolleri\",\n};\n\nfunction GenericTasksConfigScreen(props: Props) {\n  const [form] = Form.useForm();\n\n  function RoleListTable(props: { value: string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n    const user = useSelector((state: RootState) => state.auth.user);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetGenericTaskRoleAuthorizationList(value).then((res) => {\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: \"Yetki\",\n        dataIndex: \"authority\",\n        render: (text:any) => <td>{configFile[\"role\"].find((role) => role.type === text)?.text}</td>,\n      },\n      {\n        title: \"Ä°Ålemler\",\n        width: \"min-content\",\n        render: (text: string, order: any) => (\n          <td>\n            {user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                danger\n                type=\"primary\"\n                onClick={() => {\n                  DeleteGenericTaskRoleAuthorizationList(order.id).then((res) => {\n                    if (res) {\n                      GetData();\n                    } else {\n                      Modal.error({\n                        title: \"Bir hata oluÅtu\",\n                        content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                        okText: \"Tamam\",\n                      });\n                    }\n                  });\n                }}\n              >\n                Sil\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ];\n\n    return (\n      <Card>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddGenericTaskRoleAuthorizationList({ role: value, authority: values.authority }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: \"Bir hata oluÅtu\",\n                            content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                            okText: \"Tamam\",\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"authority\"\n                      label=\"Yetki\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Select>\n                        {(() => {\n                          return configFile[\"role\"]\n                            .sort((a, b) => b.text.localeCompare(b.text))\n                            .filter((newUser) => newUser.type !== user.role)\n                            .map((user) => {\n                              return <Select.Option value={user.type}>{user.text}</Select.Option>;\n                            });\n                        })()}\n                      </Select>\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: \"right\" }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n          <Row gutter={[10, 10]}>\n            {(() => {\n              return configFile[\"role\"]\n                .sort((a, b) => b.text.localeCompare(b.text))\n                .map((user) => {\n                  return (\n                    <Col xs={24} sm={24} md={12} lg={8} xl={8}>\n                      <RoleListTable value={user.type} text={`${user.text} RolÃ¼nÃ¼n Yetkileri `} />\n                    </Col>\n                  );\n                });\n            })()}\n          </Row>\n      </div>\n    </>\n  );\n}\n\nexport default GenericTasksConfigScreen;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Modal, Select } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport {\n  GridContextProvider,\n  GridDropZone,\n  GridItem,\n  swap,\n} from \"react-grid-dnd\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  AddShortcut,\n  GetShortcuts,\n  RemoveShortcuts,\n} from \"../services/OrderService\";\n\nfunction Shortcuts() {\n  const [_items, setItems] = useState([]);\n  const items = _items?.filter((item) => item !== \"\");\n\n  const [dataForSelect, setDataForSelect] = useState();\n  const [selectedData, setSelectedData] = useState();\n\n  const history = useHistory();\n\n  const constantProduction = [\n    {\n      label: \"Kollu SipariÅler\",\n      route: \"kollu\",\n    },\n    {\n      label: \"Turbo SipariÅler\",\n      route: \"turbo\",\n    },\n    {\n      label: \"DiÄer SipariÅler\",\n      route: \"diger\",\n    },\n  ];\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"config\");\n    let parsedData = JSON.parse(data)?.role;\n    setDataForSelect(parsedData);\n  }, []);\n\n  useEffect(async () => {\n    GetShortcuts().then((res) => setItems(res?.split(\",\")));\n  }, []);\n\n  function onChange(sourceIndex, targetIndex) {\n    const nextState = swap(items, sourceIndex, targetIndex);\n    console.log(\"nextState\", nextState);\n    setItems(nextState);\n    console.log(\"items\", items);\n  }\n\n  const handleChange = (value) => {\n    setSelectedData(value);\n  };\n  const handleClick = async () => {\n    AddShortcut(items, selectedData).then((res) => setItems(res?.split(\",\")));\n    setSelectedData(null);\n  };\n  const handleDelete = async (item) => {\n    RemoveShortcuts(items, item).then((res) => setItems(res?.split(\",\")));\n  };\n\n  let isSmallScreen = screen.width < 800;\n\n  return (\n    <>\n      <Wrapper>\n        <Button\n          disabled={!selectedData}\n          style={styles.button}\n          onClick={handleClick}\n          type=\"primary\"\n        >\n          KÄ±sayol OluÅtur +\n        </Button>\n\n        <Select\n          placeholder=\"SeÃ§in\"\n          style={{\n            width: 120,\n          }}\n          value={selectedData}\n          onChange={handleChange}\n          options={dataForSelect\n            ?.filter((data) => !items?.includes(data.type))\n            ?.map((data) => ({\n              value: data.type,\n              label: data.text,\n            }))}\n        />\n      </Wrapper>\n\n      <GridContextProvider onChange={onChange}>\n        <GridDropZone\n          id=\"items\"\n          boxesPerRow={isSmallScreen ? 2 : 4}\n          rowHeight={100}\n          style={{ height: \"400px\" }}\n        >\n          {items\n            ?.filter((item) => item !== \"\")\n            ?.map((item) => (\n              <GridItem\n                style={{\n                  display: !item ? \"none\" : \"block\",\n                }}\n                key={item}\n              >\n                <div\n                  style={{\n                    padding: \"5px\",\n                    position: \"relative\",\n                  }}\n                >\n                  <button\n                    style={{\n                      position: \"absolute\",\n                      right: 0,\n                      top: 10,\n                      borderTopRightRadius: \"10px\",\n                      backgroundColor: \"#FF4845\",\n                      color: \"white\",\n                      boxShadow: \"none\",\n                      border: \"none\",\n                      height: \"26px\",\n                      width: \"40px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => handleDelete(item)}\n                  >\n                    Sil\n                  </button>\n                  <div\n                    style={{\n                      margin: \"5px\",\n                      borderRadius: \"10px\",\n                      backgroundColor: \"rgb(245,245,245)\",\n                      width: \"100%\",\n                      height: \"90px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      cursor: \"grabbing\",\n                    }}\n                  >\n                    <span\n                      style={{ cursor: \"pointer\", userSelect: \"none\" }}\n                      onDoubleClick={(e) => {\n                        history.push({\n                          pathname: \"GenericTaskWithRoleScreen\",\n                          state: { role: item },\n                        });\n                      }}\n                    >\n                      {dataForSelect?.find((data) => data?.type === item)?.text}\n                    </span>\n                  </div>\n                </div>\n              </GridItem>\n            ))}\n        </GridDropZone>\n      </GridContextProvider>\n      <hr />\n\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"auto auto auto\",\n          gap: \"1rem\",\n        }}\n      >\n        {constantProduction.map((prod) => (\n          <div\n            onClick={(e) =>\n              history.push({\n                pathname: `filteredOrders/${prod.route}`,\n              })\n            }\n            style={{\n              margin: \"5px\",\n              borderRadius: \"10px\",\n              backgroundColor: \"rgb(245,245,245)\",\n              width: \"100%\",\n              height: \"90px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: \"grabbing\",\n            }}\n          >\n            {prod.label}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n`;\nexport default Shortcuts;\n","import { Card, Table } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { GetChassisNeeds, GetCommanderNeeds, GetFanNeeds, GetPumpNeeds, GetTowNeeds } from '../services/NeedListService';\n\nfunction NeedListScreen(Props: { type: string }) {\n  function NeedsListTable() {\n    const [data, setData] = useState([] as { name: string; amount: number }[]);\n\n    useEffect(() => {\n      GetData();\n    }, []);\n\n    function GetData() {\n      switch (Props.type) {\n        case 'Fan':\n          GetFanNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Kumanda':\n          GetCommanderNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Ãeki':\n          GetTowNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Pompa':\n          GetPumpNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Åase':\n          GetChassisNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number; finished_amount: number }[] = [];\n              Object.keys(res['total']).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res['total'][key], finished_amount: res['finished'][key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n      }\n    }\n\n    const columns =\n      Props.type === 'Åase'\n        ? [\n            {\n              title: 'ÃrÃ¼n AdÄ±',\n              dataIndex: 'name',\n              key: 'type',\n              width: 50,\n            },\n            {\n              title: 'Gereken Miktar',\n              dataIndex: 'amount',\n              width: 50,\n            },\n            {\n              title: 'Stoktaki Miktar',\n              dataIndex: 'finished_amount',\n              width: 50,\n              render: (data: any) => <div>{data ? data : 0}</div>,\n            },\n            {\n              title: 'Net Stok',\n              width: 50,\n              render: (data: any, record: any, full_data: any) => {\n                let net_stock = (record.finished_amount ? record.finished_amount : 0) - record.amount;\n                return <div style={{ color: net_stock < 0 ? 'red' : undefined, fontWeight: 'bolder' }}>{net_stock}</div>;\n              },\n            },\n          ]\n        : [\n            {\n              title: 'ÃrÃ¼n AdÄ±',\n              dataIndex: 'name',\n              key: 'type',\n              width: 50,\n            },\n            {\n              title: 'Gereken Miktar',\n              dataIndex: 'amount',\n              width: 50,\n            },\n          ];\n\n    return (\n      <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{Props.type} Ä°htiyaÃ§ Listesi</b>\n            </>\n          )}\n          dataSource={data.sort((a, b) => a.name.localeCompare(b.name))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <NeedsListTable />\n      </div>\n    </>\n  );\n}\n\nexport default NeedListScreen;\n","import { Button, Card, Form, Input, InputNumber, Modal, Popover, Table } from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { getConfig } from '../redux/actions/authActions';\nimport { RootState } from '../redux/reducers';\nimport { addConfig } from '../services/ConfigService';\nimport { AddNeedsList, DeleteNeedsList, GetNeedsList } from '../services/NeedListService';\n\ninterface Props { }\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nconst typeToString: { [key: string]: string } = {\n    machine_type: 'Makine Tipleri',\n    brand: 'Markalar',\n    type: 'Tipler',\n    cooler_type: 'Fan Tipleri',\n    tank_size: 'Depo BoyutlarÄ±',\n    pump: 'Pompalar',\n    tow_type: 'Ãeki Tipleri',\n    chassis_color: 'Åase Renkleri',\n    caldron_type: 'Kazan Tipleri',\n    fan_type: 'Pervane Tipleri',\n    arm_type: 'Kol Tipleri',\n    fan_radius: 'Fan ÃaplarÄ±',\n    order_tooker: 'SipariÅ Alanlar',\n    commander: 'Kumandalar',\n    turktraktormodel: 'TÃ¼rk TraktÃ¶r Modelleri',\n    meme_type: 'Meme Tipleri',\n    caldron_material: 'Kazan Materyalleri',\n    role: 'KullanÄ±cÄ± Rolleri',\n};\n\nfunction MachineTypeConfigScreen(props: Props) {\n    const [form] = Form.useForm();\n\n    function renderTable() {\n        return Object.keys(configFile).map((key) => {\n            let configs = configFile[key];\n            if (typeof configs == 'object' && key != 'role') {\n                if (Object.keys(configs[0]).length === 2) {\n                    return renderDoubleColumnTable(configs as ISerializationUnEffectiveField[], key);\n                } /*else if (Object.keys(configs[0]).length === 3) {\n            return renderTripleColumnTable(configs as ISerializationEffectiveField[], key);\n          }*/\n            }\n            return null;\n        });\n    }\n\n    function renderDoubleColumnTable(config: ISerializationUnEffectiveField[], key: string) {\n        const columns = [\n            {\n                title: 'Tip',\n                dataIndex: 'type',\n                key: 'type',\n                width: 50,\n            },\n            {\n                title: 'GÃ¶sterim',\n                dataIndex: 'text',\n                width: 50,\n            },\n        ];\n        return (\n            <Card key={key} style={{ marginBottom: 10 }}>\n                <Table\n                    pagination={false}\n                    style={{ width: '100%' }}\n                    title={() => (\n                        <>\n                            <b>{typeToString[key]}</b>\n                            <Popover\n                                content={\n                                    <Form\n                                        layout=\"vertical\"\n                                        onFinish={(values) => {\n                                            addConfig(String(key), values).then((res) => {\n                                                if (res) getConfig();\n                                            });\n                                        }}\n                                    >\n                                        <Form.Item\n                                            name=\"type\"\n                                            label=\"Tip\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: 'LÃ¼tfen sadece kÃ¼Ã§Ã¼k harf ve boÅluksuz yazÄ±n.',\n                                                },\n                                            ]}\n                                        >\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item name=\"text\" label=\"GÃ¶sterim\">\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item>\n                                            <Button type=\"primary\" htmlType=\"submit\">\n                                                Ekle\n                                            </Button>\n                                        </Form.Item>\n                                    </Form>\n                                }\n                                title={`${typeToString[key]}a Ekleme Yap`}\n                                trigger=\"click\"\n                            >\n                                <Button type=\"primary\" style={{ float: 'right' }}>\n                                    Ekle\n                                </Button>\n                            </Popover>\n                        </>\n                    )}\n                    dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n                    columns={columns}\n                    rowKey=\"type\"\n                />\n            </Card>\n        );\n    }\n\n    function renderTripleColumnTable(config: ISerializationEffectiveField[], key: string) {\n        const columns = [\n            {\n                title: 'Tip',\n                dataIndex: 'type',\n                key: 'type',\n                width: 33,\n            },\n            {\n                title: 'GÃ¶sterim',\n                dataIndex: 'text',\n                width: 33,\n            },\n            {\n                title: 'KÄ±saltma (Barkod Ã¼zerinde)',\n                dataIndex: 'shortend',\n                width: 34,\n            },\n        ];\n        return (\n            <Card key={key} style={{ marginBottom: 10 }}>\n                <Table\n                    pagination={false}\n                    style={{ width: '100%' }}\n                    title={() => (\n                        <>\n                            <b>{typeToString[key]}</b>\n                            <Popover\n                                content={\n                                    <Form\n                                        layout=\"vertical\"\n                                        onFinish={(values) => {\n                                            addConfig(String(key), values);\n                                        }}\n                                    >\n                                        <Form.Item\n                                            name=\"type\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: 'LÃ¼tfen sadece kÃ¼Ã§Ã¼k harf ve boÅluksuz yazÄ±n.',\n                                                },\n                                            ]}\n                                            label=\"Tip\"\n                                        >\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item name=\"text\" label=\"GÃ¶sterim\">\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item\n                                            name=\"shortend\"\n                                            label=\"KÄ±saltma\"\n                                            rules={[\n                                                {\n                                                    required: true,\n                                                    message: 'LÃ¼tfen sadece bÃ¼yÃ¼k harf yazÄ±n, ve harf sayÄ±sÄ±na dikkat edin.',\n                                                },\n                                            ]}\n                                        >\n                                            <Input />\n                                        </Form.Item>\n                                        <Form.Item>\n                                            <Button type=\"primary\" htmlType=\"submit\">\n                                                Ekle\n                                            </Button>\n                                        </Form.Item>\n                                    </Form>\n                                }\n                                title={`${typeToString[key]}a Ekleme Yap`}\n                                trigger=\"click\"\n                            >\n                                <Button type=\"primary\" style={{ float: 'right' }}>\n                                    Ekle\n                                </Button>\n                            </Popover>\n                        </>\n                    )}\n                    dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n                    columns={columns}\n                    rowKey=\"type\"\n                />\n            </Card>\n        );\n    }\n\n    return (\n        <>\n            <div key='hello' style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n                <Card key='uretimSuresiProgress' title=\"Ãretim SÃ¼resi Ä°Ålemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n                    <Search\n                        style={{ marginBottom: 10 }}\n                        addonBefore=\"Åase Ãretim SÃ¼resi\"\n                        placeholder={String(configFile?.chassis_production_time)}\n                        suffix=\"GÃ¼n\"\n                        enterButton=\"DeÄiÅtir\"\n                        size=\"large\"\n                        onSearch={(value) => {\n                            addConfig('chassis_production_time', { text: value });\n                        }}\n                        key='saseUretim'\n                    />\n                    <Search\n                        style={{ marginBottom: 10 }}\n                        addonBefore=\"Fan Ãretim SÃ¼resi\"\n                        suffix=\"GÃ¼n\"\n                        placeholder={String(configFile?.fan_production_time)}\n                        enterButton=\"DeÄiÅtir\"\n                        size=\"large\"\n                        onSearch={(value) => {\n                            addConfig('fan_production_time', { text: value });\n                        }}\n                        key='fanUretim'\n                    />\n                    <Search\n                        style={{ marginBottom: 10 }}\n                        addonBefore=\"Kol Ãretim SÃ¼resi\"\n                        placeholder={String(configFile?.arm_production_time)}\n                        suffix=\"GÃ¼n\"\n                        enterButton=\"DeÄiÅtir\"\n                        size=\"large\"\n                        onSearch={(value) => {\n                            addConfig('arm_production_time', { text: value });\n                        }}\n                        key='kolUretim'\n                    />\n                </Card>\n                <Card key='configTable' style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }} title=\"\">\n                    {renderTable()}\n                </Card>\n            </div>\n        </>\n    );\n}\n\nexport default MachineTypeConfigScreen;\n","//IhtiyacListesiConfigScreen\n\nimport { Button, Card, Form, Input, InputNumber, Modal, Popover, Table } from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { getConfig } from '../redux/actions/authActions';\nimport { RootState } from '../redux/reducers';\nimport { addConfig } from '../services/ConfigService';\nimport { AddNeedsList, DeleteNeedsList, GetNeedsList } from '../services/NeedListService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nfunction IhtiyacListesiConfigScreen(props: Props) {\n    const [form] = Form.useForm();\n    function NeedsListTable(props: { value: number | string; text: string }) {\n      const { value, text } = props;\n      const [data, setData] = useState([]);\n      const user = useSelector((state: RootState) => state.auth.user);\n  \n      useEffect(() => {\n        GetData();\n      }, [value]);\n  \n      function GetData() {\n        GetNeedsList(value).then((res) => {\n          if (res) {\n            setData(res);\n          }\n        });\n      }\n      const columns = [\n        {\n          title: 'ÃrÃ¼n AdÄ±',\n          dataIndex: 'name',\n          key: 'type',\n        },\n        {\n          title: 'Gereken Miktar',\n          dataIndex: 'amount',\n        },\n        {\n          title: 'Ä°Ålemler',\n          render: (text: string, order: any) => (\n            <td>\n              {user.role == 'admin' ? (\n                <Button\n                  style={{ marginBottom: 10 }}\n                  danger\n                  type=\"primary\"\n                  onClick={() => {\n                    DeleteNeedsList(order.id).then((res) => {\n                      if (res) {\n                        GetData();\n                      } else {\n                        Modal.error({\n                          title: 'Bir hata oluÅtu',\n                          content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                          okText: 'Tamam',\n                        });\n                      }\n                    });\n                  }}\n                >\n                  Sil\n                </Button>\n              ) : null}\n            </td>\n          ),\n        },\n      ];\n      return (  \n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddNeedsList({ amount: values.amount, name: values.name, tank_size: value }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: 'Bir hata oluÅtu',\n                            content: <p>LÃ¼tfen tekrar deneyin.</p>,\n                            okText: 'Tamam',\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"name\"\n                      label=\"ÃrÃ¼n\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"amount\" label=\"Miktar\">\n                      <InputNumber min={0} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n          rowKey = 'id'\n          key={value.toString()+'Head'}\n        />\n      );\n    }  \n    return (\n      <>\n        <div key='hello' style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>  \n          <Card key='requiermentTable' title=\"Ä°htiyaÃ§ Listesi Ä°Ålemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n            {(() => {\n                const sortedData = configFile['tank_size']\n                .sort((a, b) => parseInt(b.type) - parseInt(a.type));\n              return sortedData.map((tank_size) => {\n                  return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.text} LT Tank Ä°htiyaÃ§ Listesi`} key ={tank_size.type}/>;\n                });\n            })()}\n          </Card>\n        </div>\n      </>\n    );\n  }\n  \n  export default IhtiyacListesiConfigScreen;\n  ","/* eslint-disable eqeqeq */\nimport React, { ReactNode, useState } from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Select,\n  Card,\n  InputNumber,\n  Popconfirm,\n  Popover,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder } from \"../services/OrderService\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport {\n  DivideGenericTask,\n  DeleteGenericTask,\n  GetActiveGenericTasks,\n  CreateGenericTask,\n  GetFinishedGenericTasks,\n  ModifyGenericTask,\n  UpdateGenericTask,\n  GetGenericTaskWithRole,\n} from \"../services/ProductionPlanService\";\nimport { connect } from \"react-redux\";\nimport GenericTaskHistory from \"../components/TaskHistory\";\nimport * as XLSX from \"xlsx/xlsx.mjs\";\n\nconst config: IAgrotekConfig = JSON.parse(\n  localStorage.getItem(\"config\") ?? \"{}\"\n);\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst DivideContent = (Props: {\n  maxAmount: number,\n  id: number,\n  getTasks: () => void,\n}) => {\n  const [amount, setAmount] = useState(1);\n\n  return (\n    <div>\n      <InputNumber\n        max={Props.maxAmount}\n        style={{ width: \"70%\" }}\n        size=\"large\"\n        defaultValue={1}\n        formatter={(value) => `BÃ¶lÃ¼nen Miktar ${value}`}\n        parser={(value) => value?.split(\"BÃ¶lÃ¼nen Miktar \")[1]}\n        onChange={(value) => setAmount(value)}\n      />\n      <Button\n        danger\n        size=\"large\"\n        style={{ marginLeft: 10 }}\n        onClick={() => {\n          DivideGenericTask(Props.id, amount).then((res) => {\n            if (res) Props.getTasks();\n          });\n        }}\n      >\n        BÃ¶l\n      </Button>\n    </div>\n  );\n};\n\nclass GenericTasksScreen extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownVisibleChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    selectedRole: \"anasiparis\",\n    selectedUnit: \"adet\",\n    csvdata: [\n      [\n        \"GÃ¶rev No\",\n        \"Grup\",\n        \"BaÅlÄ±k\",\n        \"Ek AÃ§Ä±klama\",\n        \"Miktar\",\n        \"Kazan Tipi\",\n        \"Tamamlanan\",\n        \"GÃ¶rev Verilme Tarihi\",\n        \"Son Ä°Ålem Tarihi\",\n      ],\n    ],\n    loading: false,\n    data: [],\n    columns: [\n      {\n        title: \"GÃ¶rev No\",\n        dataIndex: \"id\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.id - b.id,\n        ...this.getColumnSearchProps(\"id\"),\n      },\n      {\n        title: \"Grup\",\n        dataIndex: \"last_location\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.last_location.localeCompare(b.last_location),\n        ...this.getColumnSearchProps(\"last_location\"),\n        render: (text: string, data) => (\n          <td>\n            {this.props.isActive ? (\n              <Select\n                disabled={this.props.user.role !== \"admin\"}\n                value={text}\n                size=\"large\"\n                style={{ width: 200 }}\n                onChange={(value) => {\n                  ModifyGenericTask({ id: data.id, new_group: value }).then(\n                    (res) => {\n                      this.GetTasks();\n                    }\n                  );\n                }}\n              >\n                {(() => {\n                  return config.role?.map((role) => {\n                    return (\n                      <Select.Option value={role.type}>\n                        {role.text}\n                      </Select.Option>\n                    );\n                  });\n                })()}\n              </Select>\n            ) : (\n              (() => {\n                return config.role?.map((role) => {\n                  if (role.type == text) return <p>{role.text}</p>;\n                });\n              })()\n            )}\n          </td>\n        ),\n      },\n      {\n        title: \"BaÅlÄ±k\",\n        dataIndex: \"title\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.title.localeCompare(b.title),\n        ...this.getColumnSearchProps(\"title\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Ek AÃ§Ä±klama\",\n        dataIndex: \"description\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"description\"),\n        render: (text: string) => <td>{text ? Capitalize(text) : \"\"}</td>,\n      },\n      {\n        title: \"Miktar\",\n        dataIndex: \"amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          parseInt(a.amount?.split(\" \")[0]) - parseInt(b.amount?.split(\" \")[0]),\n      },\n      {\n        title: \"Tamamlanan\",\n        dataIndex: \"completed_amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.completed_amount - b.completed_amount,\n      },\n      {\n        title: \"GÃ¶rev Verilme Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        ...this.getColumnSearchProps(\"row_created_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"Son Ä°Ålem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n\n      {\n        title: \"Ä°Ålemler\",\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {(this.props.user.role == \"admin\" ||\n              this.props.user.role == \"ambar1\") &&\n            order.last_location == \"ambar1\" &&\n            order.title == \"QR Kod BasÄ±mÄ±\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu gÃ¶revi tamamlamak istediÄinizden eminmisiniz? <br /> Bu\n                    iÅlem geri alÄ±namaz\n                  </div>\n                }\n                onConfirm={() => {\n                  UpdateGenericTask(order.id, 1).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"HayÄ±r\"\n              >\n                <Button style={{ margin: 5 }} block size=\"large\" type=\"primary\">\n                  Tamamla\n                </Button>\n              </Popconfirm>\n            ) : null}\n            {this.props.user.role == \"admin\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu gÃ¶revi silmek istediÄinizden eminmisiniz? <br /> Bu iÅlem\n                    geri alÄ±namaz\n                  </div>\n                }\n                onConfirm={() => {\n                  DeleteGenericTask(order.id).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayir\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Sil\n                </Button>\n              </Popconfirm>\n            ) : null}\n            <Button\n              block\n              style={{ margin: 5 }}\n              onClick={() => {\n                this.setState({\n                  isModalVisible: true,\n                  selectedTaskId: order.id,\n                });\n              }}\n              size=\"large\"\n              type=\"primary\"\n            >\n              Ä°Ålem GeÃ§miÅi\n            </Button>\n            {this.props.user.role == \"admin\" ||\n            this.props.user.role == \"lazer\" ||\n            this.props.user.role === \"lazer2\" ||\n            this.props.user.role === \"lazerkesim\" ||\n            (this.props.user.role == \"depo\" &&\n              order.completed_amount == 0 &&\n              this.props.isActive) ? (\n              <Popover\n                content={\n                  <DivideContent\n                    maxAmount={parseInt(order?.amount?.split(\" \")[0]) - 1}\n                    id={order.id}\n                    getTasks={this.GetTasks.bind(this)}\n                  />\n                }\n                title={\n                  <>\n                    GÃ¶revin tamamlanan ve kalan kÄ±smÄ±nÄ± ayÄ±rmak istediÄinizden\n                    emin misiniz? <br /> Bu iÅlem geri alÄ±namaz\n                  </>\n                }\n                trigger=\"click\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  BÃ¶l\n                </Button>\n              </Popover>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  componentDidMount() {\n    if (!this.props.location?.state?.role) {\n      this.props.history.push(\"shortcuts\");\n    } else {\n      this.GetTasks();\n    }\n  }\n\n  componentWillReceiveProps = (newProps, oldProps) => {\n    setTimeout(() => {\n      if (!this.props.location?.state?.role) {\n        this.props.history.push(\"shortcuts\");\n      } else {\n        this.GetTasks();\n      }\n    }, 500);\n  };\n\n  GetTasks() {\n    let isActive = this.props.isActive;\n    this.setState({ loading: true });\n\n    let csvdata = [\n      [\n        \"GÃ¶rev No\",\n        \"Grup\",\n        \"BaÅlÄ±k\",\n        \"Ek AÃ§Ä±klama\",\n        \"Miktar\",\n        \"Tamamlanan\",\n        \"GÃ¶rev Verilme Tarihi\",\n        \"Son Ä°Ålem Tarihi\",\n      ],\n    ];\n\n    GetGenericTaskWithRole(this.props.location.state.role).then((data) => {\n      data?.forEach((task) => {\n        csvdata.push([\n          task.id,\n          task.last_location,\n          task.title,\n          task.description,\n          task.amount,\n          task.completed_amount,\n          ConvertDateTime(task.row_created_date),\n          ConvertDateTime(task.row_updated_date),\n        ]);\n      });\n      this.setState({ data, csvdata, loading: false });\n    });\n  }\n  SaveExcel = (data) => {\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <div>\n          <Card\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button\n              style={{ ...styles.button, float: \"right\" }}\n              onClick={() => this.SaveExcel(this.state.csvdata)}\n            >\n              Emirleri Excele Aktar\n            </Button>\n          </Card>\n        </div>\n\n        <Table\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          style={{ maxWidth: \"99.5%\" }}\n          loading={this.state.loading}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <GenericTaskHistory\n          isVisible={this.state.isModalVisible}\n          task_id={this.state.selectedTaskId}\n          setIsVisible={(value) => this.setState({ isModalVisible: value })}\n        />\n      </>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(GenericTasksScreen);\n","/* eslint-disable eqeqeq */\nimport {\n  AutoComplete,\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  Radio,\n  Select,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport { Body } from \"./MainScreen\";\nimport moment from \"moment\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { padLeft } from \"../helper\";\nimport {\n  GetOrderDetails,\n  TakeOrder,\n  UpdateOrder,\n} from \"../services/OrderService\";\nimport { getCustomerList } from \"../services/ConfigService\";\nimport { useLocation } from \"react-router-dom\";\n\nconst { Option, OptGroup } = Select;\nconst QRCode = require(\"qrcode.react\");\n\nfunction EditOrderScreen(props: any) {\n  const configFile: IAgrotekConfig = JSON.parse(\n    localStorage.getItem(\"config\") ?? \"{}\"\n  );\n  const [qrCodeValue, setQrCodeValue] = useState(\"\");\n  const [customerList, setCustomerList] = useState([] as any);\n  const [orderDetails, setOrderDetails] = useState([] as any);\n\n  const [productionUnit, setProductionUnit] = useState(\"turbo\");\n  const [serialState, setSerialState] = useState({\n    brand: \"\",\n    type: \"\",\n    cooler_type: \"\",\n    arm_type: \"\",\n    tank_size: 0,\n    pump: \"\",\n    order_no: \"000000\",\n    order_amount: 0,\n    year: \"\",\n  });\n\n  let serialCode = SerialCodeGenerator();\n  const [form] = Form.useForm();\n\n  const { pathname }: any = useLocation();\n\n  const serialNumber = pathname.split(\"/\")[2];\n\n  useEffect(() => {\n    GetOrderDetails(serialNumber).then((orderDetails) => {\n      delete orderDetails.date;\n      delete orderDetails.year;\n\n      setOrderDetails({\n        orderDetails,\n        caldron_stock: \"onstock\",\n        order_amount: String(orderDetails.order_amount),\n      });\n      form.setFieldsValue({\n        ...orderDetails,\n        caldron_stock: \"onstock\",\n        order_amount: String(orderDetails.order_amount),\n      });\n    });\n  }, [serialNumber]);\n\n  useEffect(() => {\n    getCustomerList().then((res) => {\n      setCustomerList(res);\n    });\n  }, []);\n\n  return (\n    <Body\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexWrap: \"wrap-reverse\",\n        overflow: \"auto\",\n      }}\n    >\n      <Form\n        form={form}\n        onFieldsChange={() => {\n          let product =\n            form.getFieldValue(\"brand\") == \"turktraktor\"\n              ? form.getFieldValue(\"brand\") + \" \" + form.getFieldValue(\"model\")\n              : form.getFieldValue(\"production_unit\") == \"turbo\"\n              ? form.getFieldValue(\"brand\") +\n                \" \" +\n                form.getFieldValue(\"tank_size\") +\n                \"LT \" +\n                form.getFieldValue(\"cooler_type\") +\n                form.getFieldValue(\"fan_radius\") +\n                \"cm \" +\n                form.getFieldValue(\"fan_type\")\n              : form.getFieldValue(\"production_unit\") == \"kollu\"\n              ? form.getFieldValue(\"brand\") +\n                \" \" +\n                form.getFieldValue(\"tank_size\") +\n                \"LT \" +\n                form.getFieldValue(\"arm_type\") +\n                \" \" +\n                form.getFieldValue(\"arm_length\")\n              : form.getFieldValue(\"production_unit\") == \"diger\"\n              ? form.getFieldValue(\"brand\") + \" \" + form.getFieldValue(\"type\")\n              : \"\";\n          setQrCodeValue(serialCode + \",\" + product.toUpperCase());\n          if (\n            form.getFieldValue(\"model\") &&\n            form.getFieldValue(\"brand\") == \"turktraktor\"\n          ) {\n            form.setFieldsValue({ caldron_color: form.getFieldValue(\"model\") });\n          }\n        }}\n        onFinish={async (values) => {\n          console.log(\"values\", values);\n          const result = await UpdateOrder(values, serialCode);\n          console.log(\"result\", result);\n          // if (result === true) {\n          //   printQRCode(values.order_amount);\n          //   form.resetFields();\n          // }\n        }}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 24 }}\n        style={{ maxWidth: \"calc(100% - 168px)\", minWidth: \"450px\" }}\n        requiredMark={false}\n      >\n        <Form.Item name=\"date\" initialValue={moment()} label=\"Tarih\" required>\n          <DatePicker disabled />\n        </Form.Item>\n\n        <Form.Item\n          name=\"customer\"\n          label=\"MÃ¼Återi AdÄ±\"\n          rules={[\n            { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n            { max: 250, message: \"Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.\" },\n          ]}\n          required\n        >\n          <AutoComplete\n            style={{ width: 200 }}\n            options={customerList}\n            placeholder=\"aramak iÃ§in yazÄ±n.\"\n            filterOption={(inputValue, option) =>\n              option!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          label=\"Adresi\"\n          rules={[\n            { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n            { max: 250, message: \"Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.\" },\n          ]}\n          required\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"phone_number\"\n          label=\"Telefon No\"\n          rules={[\n            { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n            {\n              max: 10,\n              min: 10,\n              message: \"Telefon numarasÄ± 10 haneden oluÅmalÄ±dÄ±r.\",\n            },\n          ]}\n          required\n        >\n          <Input addonBefore=\"+90\" style={{ width: \"100%\" }} />\n        </Form.Item>\n        <Form.Item\n          name=\"production_unit\"\n          label=\"Ãretim Birimi\"\n          initialValue=\"turbo\"\n          required\n        >\n          <Radio.Group\n            onChange={(e) => {\n              setProductionUnit(e.target.value);\n            }}\n          >\n            <Radio value=\"turbo\">Turbo</Radio>\n            <Radio value=\"kollu\">Kollu</Radio>\n            <Radio value=\"diger\">DiÄer</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"brand\" label=\"Marka\" required>\n          <Select\n            onSelect={(type) => {\n              const brand = configFile.brand.filter(\n                (brand) => brand.type == type\n              );\n              setSerialState({ ...serialState, brand: brand[0].shortend });\n            }}\n          >\n            {(function myFunction() {\n              return configFile.brand.map((brand) => {\n                return (\n                  <Option key={brand.type} value={brand.type}>\n                    {brand.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        {productionUnit == \"turbo\" && serialState.brand == \"T\" ? (\n          <Form.Item name=\"model\" label=\"Model\" required>\n            <Select>\n              {(function myFunction() {\n                return configFile.turktraktormodel.map((brand) => {\n                  return (\n                    <Option key={brand.text} value={brand.text}>\n                      {brand.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          </Form.Item>\n        ) : null}\n\n        <Form.Item name=\"type\" label=\"Tip\" required>\n          {productionUnit === \"turbo\" || productionUnit === \"kollu\" ? (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.type.filter(\n                  (type) => type.type == btype\n                );\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.type.map((type) => {\n                  return (\n                    <Option key={type.type} value={type.type}>\n                      {type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          ) : (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.machine_type.filter(\n                  (machine_type) => machine_type.type == btype\n                );\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.machine_type.map((machine_type) => {\n                  return (\n                    <Option key={machine_type.type} value={machine_type.type}>\n                      {machine_type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          )}\n        </Form.Item>\n        {productionUnit == \"kollu\" || productionUnit == \"turbo\" ? (\n          <>\n            <Form.Item\n              name=\"caldron_color\"\n              rules={[\n                { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n                { max: 32, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n              ]}\n              label=\"Kazan Rengi\"\n              required\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"caldron_stock\" label=\"Kazan Tedarik\">\n              <Radio.Group>\n                <Radio value=\"onstock\">Stoktan</Radio>\n                <Radio value=\"new\">Kazan Ãreticiden</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"caldron_material\"\n              rules={[\n                { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n                { max: 19, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n              ]}\n              label=\"Materyal\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.caldron_material.map((caldron_material) => {\n                    return (\n                      <Option\n                        key={caldron_material.type}\n                        value={caldron_material.type}\n                      >\n                        {caldron_material.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tank_size\" label=\"Depo Hacmi\" required>\n              <Select\n                onSelect={(type) => {\n                  const tank_size = configFile.tank_size.filter(\n                    (tank_size) => tank_size.type == type\n                  );\n                  setSerialState({\n                    ...serialState,\n                    tank_size: parseInt(tank_size[0].shortend),\n                  });\n                }}\n              >\n                <OptGroup label=\"Litre\">\n                  {(function myFunction() {\n                    return configFile.tank_size.map((tank_size) => {\n                      return (\n                        <Option key={tank_size.type} value={tank_size.type}>\n                          {tank_size.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </OptGroup>\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tow_type\" label=\"Ãeki Tipi\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.tow_type.map((tow_type) => {\n                    return (\n                      <Option key={tow_type.type} value={tow_type.type}>\n                        {tow_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"pump\" label=\"Pompa\" required>\n              <Select\n                onSelect={(type) => {\n                  const pump = configFile.pump.filter(\n                    (pump) => pump.type == type\n                  );\n                  setSerialState({ ...serialState, pump: pump[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.pump.map((pump) => {\n                    return (\n                      <Option key={pump.type} value={pump.type}>\n                        {pump.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"commander\" label=\"Kumanda\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.commander.map((commander) => {\n                    return (\n                      <Option key={commander.type} value={commander.type}>\n                        {commander.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name=\"meme_type\"\n              rules={[\n                { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n                { max: 19, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n              ]}\n              label=\"Meme Tipi\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.meme_type.map((meme_type) => {\n                    return (\n                      <Option key={meme_type.type} value={meme_type.type}>\n                        {meme_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == \"kollu\" ? (\n          <>\n            <Form.Item name=\"arm_type\" label=\"Kol Tipi\" required>\n              <Select\n                onSelect={(btype) => {\n                  const arm_type = configFile.arm_type.filter(\n                    (type) => type.type == btype\n                  );\n                  setSerialState({\n                    ...serialState,\n                    arm_type: arm_type[0].shortend,\n                  });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.arm_type.map((arm_type) => {\n                    return (\n                      <Option key={arm_type.type} value={arm_type.type}>\n                        {arm_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"meme_distance\"\n              rules={[\n                { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n                { max: 19, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n              ]}\n              label=\"Meme AralÄ±ÄÄ±\"\n              required\n            >\n              <Input maxLength={19} />\n            </Form.Item>\n            <Form.Item\n              name=\"arm_length\"\n              rules={[\n                { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n                { max: 30, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n              ]}\n              label=\"Kol UzunluÄu\"\n              required\n            >\n              <Input maxLength={20} />\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == \"turbo\" ? (\n          <>\n            <Form.Item name=\"cooler_type\" label=\"Fan Tipi\" required>\n              <Select\n                onSelect={(type) => {\n                  const cooler_type = configFile.cooler_type.filter(\n                    (cooler_type) => cooler_type.type == type\n                  );\n                  setSerialState({\n                    ...serialState,\n                    cooler_type: cooler_type[0].shortend,\n                  });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.cooler_type.map((cooler_type) => {\n                    return (\n                      <Option key={cooler_type.type} value={cooler_type.type}>\n                        {cooler_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"caldron_type\" label=\"Kazan Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.caldron_type.map((caldron_type) => {\n                      return (\n                        <Option\n                          key={caldron_type.type}\n                          value={caldron_type.type}\n                        >\n                          {caldron_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"fan_radius\" label=\"Pervane ÃapÄ±\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_radius.map((fan_radius) => {\n                      return (\n                        <Option key={fan_radius.type} value={fan_radius.type}>\n                          {fan_radius.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"fan_type\" label=\"Pervane Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_type.map((fan_type) => {\n                      return (\n                        <Option key={fan_type.type} value={fan_type.type}>\n                          {fan_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n          </>\n        ) : null}\n\n        <Form.Item\n          name=\"order_no\"\n          label=\"SipariÅ No\"\n          rules={[\n            { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n            { max: 6, message: \"Maksimum sÄ±nÄ±r aÅÄ±ldÄ±.\" },\n            { min: 6, message: \"SipariÅ No 6 Karakter olmalÄ±dÄ±r..\" },\n          ]}\n          required\n        >\n          <Input\n            maxLength={6}\n            onChange={(e) => {\n              setSerialState({\n                ...serialState,\n                order_no: padLeft(e.target.value, \"0\", 6),\n              });\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"order_amount\"\n          rules={[\n            { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz\" },\n            { max: 5, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" },\n          ]}\n          label=\"SipariÅ Adedi\"\n          required\n        >\n          <Input\n            max={99}\n            min={1}\n            type=\"number\"\n            onChange={(e) => {\n              setSerialState({\n                ...serialState,\n                order_amount: parseInt(e.target.value),\n              });\n            }}\n          />\n        </Form.Item>\n        <Form.Item name=\"year\" label=\"YÄ±l\" initialValue={moment()} required>\n          <DatePicker disabled picker=\"year\" />\n        </Form.Item>\n\n        <Form.Item name=\"chassis_color\" label=\"Åase Rengi\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.chassis_color.map((chassis_color) => {\n                return (\n                  <Option key={chassis_color.type} value={chassis_color.type}>\n                    {chassis_color.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"alt_features\"\n          rules={[{ max: 250, message: \"Maksimum sÄ±nÄ±ra ulaÅÄ±ldÄ±.\" }]}\n          label=\"Ek Ãzellikler\"\n          required\n        >\n          <Input.TextArea maxLength={250} />\n        </Form.Item>\n        <Form.Item name=\"order_tooker\" label=\"SipariÅ Alan\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.order_tooker.map((order_tooker) => {\n                return (\n                  <Option key={order_tooker.type} value={order_tooker.type}>\n                    {order_tooker.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"serial_number\" label=\"Seri No\">\n          <Input disabled placeholder={serialCode} />\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button size=\"large\" block type=\"primary\" htmlType=\"submit\">\n            SipariÅi DÃ¼zenle\n          </Button>\n        </Form.Item>\n      </Form>\n      <div style={{ display: \"block\", width: \"min-content\" }}>\n        <QRCode value={qrCodeValue} renderAs=\"svg\" size={178} />\n        {/*<Button type=\"primary\" icon={<PrinterOutlined />} disabled={serialCode.length < 10} onClick={printQRCode} block>\n          YazdÄ±r\n          </Button>*/}\n      </div>\n    </Body>\n  );\n\n  function SerialCodeGenerator(): string {\n    switch (productionUnit) {\n      case \"kollu\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.arm_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"turbo\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.cooler_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"diger\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      default:\n        return \"\";\n    }\n  }\n\n  function printQRCode(amount: number) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n    let reversed = reverseString(serialCode);\n    let data = splitTwoPartsBarcode(reversed);\n    let qrCode = qrCodeValue.split(\",\");\n\n    for (let i = amount; i > 0; i--) {\n      qrCode[0] = data[0] + \"0\" + i;\n\n      let svg = renderToString(\n        <div style={{ width: \"50mm\", height: \"64mm\" }}>\n          <QRCode\n            value={qrCode[0] + \",\" + qrCode[1]}\n            style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n            renderAs=\"svg\"\n          />\n          <p style={{ margin: 10 }}>{qrCode[0]}</p>\n        </div>\n      );\n      //<QRCode value= style={{ width: \"54mm\", height: \"70mm\" }} renderAs=\"svg\" />);\n\n      printWindow?.document.write(String(svg));\n    }\n    if (printWindow) {\n      printWindow.document.body.style.margin = \"0\";\n      printWindow.document.close();\n      printWindow.print();\n    }\n  }\n}\n\nexport function splitTwoPartsBarcode(str: string) {\n  var index = str.indexOf(\"0\"); // Gets the first index where a space occours\n  var amount = reverseString(str.substr(0, index)); // Gets the first part\n  var serial = reverseString(str.substr(index + 1));\n\n  return [serial, amount];\n}\n\nexport function reverseString(str: string) {\n  var newString = \"\";\n  for (var i = str.length - 1; i >= 0; i--) {\n    newString += str[i];\n  }\n  return newString;\n}\n\nexport default EditOrderScreen;\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from \"react\";\nimport { Table, Input, Button, Divider, Select, Popconfirm } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GenericOrder,\n  GetAllOrders,\n  GetMovableMachines,\n  SwitchMachines,\n  DeleteOrder,\n  GetMachineListFromOrderById,\n  GetFinishedOrders,\n  DeleteSingleMachine,\n  GetCancelledOrders,\n  GetAllOrdersByType,\n} from \"../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport OrderHistory from \"../components/OrderHistory\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { Link } from \"react-router-dom\";\n\ndayjs.extend(customParseFormat);\n\ndayjs.locale(\"tr\");\n\nconst QRCode = require(\"qrcode.react\");\n\nexport function renderProperties(key, value) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nclass OrderScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.route =\n      this.props.location?.pathname.split(\"/\")[\n        this.props.location?.pathname.split(\"/\").length - 1\n      ];\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail].map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"BulunduÄu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son Ä°Ålem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        SipariÅi KaydÄ±r\n                      </Button>\n                    ) : null}\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu YazdÄ±r\n                    </Button>\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        console.log(record.id);\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      Ä°Ålem GeÃ§miÅini GÃ¶ster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n                    {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayÄ± silmek istediÄinizden emin misiniz? Bu iÅlem geri alÄ±namaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"HayÄ±r\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          MakinayÄ± Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          SÄ±fÄ±rla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex].toString().toLowerCase().includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    csvdata: [\n      [\n        \"Seri No\",\n        \"SipariÅ No\",\n        \"SipariÅ Tarihi\",\n        \"MÃ¼Återi\",\n        \"Telefon\",\n        \"Adres\",\n        \"SipariÅ Alan\",\n        \"Durum\",\n      ],\n    ],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"SipariÅ No\",\n        dataIndex: \"order_no\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"MÃ¼Återi\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Lokasyon\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"ÃrÃ¼n Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Miktar\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.pending_amount - b.pending_amount,\n        ...this.getColumnSearchProps(\"order_amount\"),\n        render: (text: string, order: any) => (\n          <td>\n            {String(order.order_amount - order.pending_amount) +\n              \"/\" +\n              order.order_amount}\n          </td>\n        ),\n      },\n      {\n        title: \"SipariÅ Tarihi\",\n        dataIndex: \"date\",\n        //render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          dayjs(a.date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"date\"),\n      },\n\n      {\n        title: \"SipariÅ Alan\",\n        dataIndex: \"order_tooker\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.order_tooker.localeCompare(b.order_tooker),\n        ...this.getColumnSearchProps(\"order_tooker\"),\n        render: (text: string) => <td>{text.toUpperCase()}</td>,\n      },\n    ],\n  };\n\n  printQRCode(value: string, serialNumber: string) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    this.props.isFinishedOrders &&\n      GetAllOrdersByType(this.route).then((result) => {\n        let dateModifiedData = result.map((order) => {\n          order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n          return order;\n        });\n        this.setState({ data: dateModifiedData });\n      });\n  }\n\n  componentDidMount = () => {\n    this.GetOrders();\n    GetMovableMachines().then((machines) => {\n      if (machines) {\n        this.setState({ movableMachines: machines });\n      }\n    });\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          expandable={{\n            expandedRowRender: (record) => (\n              <div\n                key={\"keyexpandable \" + record.id}\n                style={{ marginLeft: \"3rem\" }}\n              >\n                {renderProperties(\"ÃrÃ¼n\", record.description)}\n                {renderProperties(\"Tarih\", record.date)}\n                {renderProperties(\n                  \"Marka\",\n                  this.configFile.brand.filter(\n                    (b) => b.type === record.brand\n                  )[0]?.text\n                )}\n                {renderProperties(\"SipariÅ No\", record.order_no)}\n                {renderProperties(\n                  \"SipariÅ MiktarÄ±\",\n                  String(record.order_amount)\n                )}\n                {renderProperties(\n                  \"Tip\",\n                  this.configFile.type.filter((b) => b.type === record.type)[0]\n                    ?.text\n                    ? this.configFile.type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                    : this.configFile.machine_type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                )}\n                {renderProperties(\n                  \"Fan Tipi\",\n                  this.configFile.cooler_type.filter(\n                    (b) => b.type === record.cooler_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Boyutu\",\n                  record.tank_size ? record.tank_size + \" LT\" : null\n                )}\n                {renderProperties(\n                  \"Kazan Materyali\",\n                  this.configFile.caldron_material.filter(\n                    (b) => b.type === record.caldron_material\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Pompa\",\n                  this.configFile.pump.filter((b) => b.type === record.pump)[0]\n                    ?.text\n                )}\n                {renderProperties(\"Model YÄ±lÄ±\", record.year)}\n                {renderProperties(\n                  \"Meme Tipi\",\n                  this.configFile.meme_type.filter(\n                    (b) => b.type === record.meme_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Meme AralÄ±ÄÄ±\", record.meme_distance)}\n                {renderProperties(\n                  \"Ãeki Tipi\",\n                  this.configFile.tow_type.filter(\n                    (b) => b.type === record.tow_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kol Tipi\",\n                  this.configFile.arm_type.filter(\n                    (b) => b.type === record.arm_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Kol UzunluÄu\", record.arm_length)}\n                {renderProperties(\n                  \"Åase Rengi\",\n                  this.configFile.chassis_color.filter(\n                    (b) => b.type === record.chassis_color\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Rengi\",\n                  Capitalize(record.caldron_color)\n                )}\n                {renderProperties(\n                  \"Kazan Tipi\",\n                  this.configFile.caldron_type.filter(\n                    (b) => b.type === record.caldron_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kumanda\",\n                  this.configFile.commander.filter(\n                    (b) => b.type === record.commander\n                  )[0]?.text\n                )}\n                {renderProperties(\"Alternatif Ãzellikler\", record.alt_features)}\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    GetMachineListFromOrderById(record.id).then(\n                      (orderDetails) => {\n                        this.setState({\n                          orderDetails: {\n                            ...this.state.orderDetails,\n                            [record.id]: orderDetails,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  DetaylarÄ± GÃ¶ster\n                </Button>\n                {this.renderOrderDetails(record)}\n                {record.status !== \"cancelled\" &&\n                this.props.user?.role == \"admin\" &&\n                !this.props.isFinishedOrders ? (\n                  <Popconfirm\n                    title=\"Bu sipariÅi iptal etmek istediÄinizden emin misiniz?\"\n                    onConfirm={() => DeleteOrder(record.id)}\n                    okText=\"Evet\"\n                    cancelText=\"HayÄ±r\"\n                  >\n                    <Button\n                      danger\n                      style={{ marginBottom: 10, marginRight: 10 }}\n                      type=\"primary\"\n                    >\n                      SipariÅi Ä°ptal Et\n                    </Button>\n                  </Popconfirm>\n                ) : null}\n\n                <Link\n                  style={{\n                    display:\n                      record.order_amount !== record.pending_amount && \"none\",\n                    color: \"white\",\n                    marginBottom: 10,\n                    backgroundColor: \"#1677ff\",\n                    padding: \"8px\",\n                    borderRadius: \"6px\",\n                  }}\n                  to={{\n                    pathname: `/editOrder/${record.serial_number}`,\n                  }}\n                >\n                  DÃ¼zenle\n                </Link>\n              </div>\n            ),\n          }}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Modal\n          title={\n            this.state.orderSelected?.serial_number + \" Seri NumaralÄ± Makine.\"\n          }\n          visible={this.state.orderModalVisible}\n          onOk={() => {\n            this.setState({ orderModalVisible: false });\n            SwitchMachines({\n              order1: this.state.selectedToMove,\n              order2: this.state.orderSelected,\n            });\n          }}\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <p>LÃ¼tfen deÄiÅim yapmak istediÄiniz makineyi seÃ§in.</p>\n          <Select\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            style={{ width: \"100%\" }}\n            onSelect={(value) => {\n              this.setState({\n                selectedToMove: {\n                  serial_number: value.split(\" \")[0],\n                  order_id: Number.parseInt(value.split(\" \")[1]),\n                },\n              });\n            }}\n            placeholder=\"LÃ¼tfen bir makine seÃ§in\"\n            defaultActiveFirstOption={true}\n          >\n            {this.state.movableMachines.map((machine) => {\n              return (\n                <Select.Option\n                  value={machine.serial_number + \" \" + machine.order_id}\n                >\n                  {machine.serial_number +\n                    \" \" +\n                    machine.customer +\n                    \" \" +\n                    Capitalize(machine.location)}\n                </Select.Option>\n              );\n            })}\n          </Select>\n        </Modal>\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderScreen);\n","import { Menu } from \"antd\";\nimport type { MenuTheme } from \"antd\";\nimport {\n  BarChartOutlined,\n  UserOutlined,\n  ClockCircleOutlined,\n  HomeOutlined,\n  LogoutOutlined,\n  ReconciliationOutlined,\n  OrderedListOutlined,\n  IssuesCloseOutlined,\n  InboxOutlined,\n  GroupOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport ManageEmployeScreen from \"./manageEmployeScreen\";\nimport { useHistory, Switch, Route } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../redux/actions/authActions\";\nimport CreateOrderScreen from \"./createOrderScreen\";\nimport OrderScreen from \"./OrderScreen.js\";\nimport ManageConfigScreen from \"./manageConfigScreen\";\nimport DeliveryScreen from \"./DeliveryScreen\";\nimport { Link } from \"react-router-dom\";\nimport TankProducerScreen from \"./TankProducerScreen\";\nimport PendingOrdersScreen from \"./PendingOrdersScreen\";\nimport ActiveOrdersScreen from \"./ActiveOrdersScreen\";\nimport { RootState } from \"../redux/reducers\";\nimport StatisticsScreen from \"./StatisticsScreen\";\nimport OrderPlanningScreen from \"./OrderPlanningScreen\";\nimport ChassisProductionTasksScreen from \"./ChassisProductionTasksScreen\";\nimport ArmProductionTasksScreen from \"./ArmProductionTasksScreen\";\nimport FanProductionTasksScreen from \"./FanProductionTasksScreen\";\nimport GenericTasksScreen from \"./GenericTasksScreen\";\nimport OtherNeedListScreen from \"./OtherNeedListScreen\";\nimport UserRollsConfigScreen from \"./UserRollsConfigScreen\";\nimport GenericTasksConfigScreen from \"./GenericTasksConfigScreen\";\nimport ShortcutsScreen from \"./ShortcutsScreen\";\nimport NeedListScreen from \"./NeedListScreen\";\nimport MachineTypeConfigScreen from \"./MachineTypeConfigScreen\";\n\nimport { stringify } from \"querystring\";\nimport { useState } from \"react\";\nimport IhtiyacListesiConfigScreen from \"./IhtiyacListesiConfigScreen\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs, { Dayjs } from \"dayjs\";\nimport GenericTaskWithRole from \"./GenericTaskWithRole\";\nimport EditOrderScreen from \"./editOrderScreen\";\nimport FilteredOrdersScreen from \"./FilteredOrdersScreen\";\n\ndayjs.locale(\"tr\");\n\nfunction MainScreen() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  const [theme, setTheme] = useState<MenuTheme>(\"light\");\n\n  const changeTheme = (value: boolean) => {\n    setTheme(value ? \"dark\" : \"light\");\n  };\n  return (\n    <MainContainer>\n      <Menu\n        defaultSelectedKeys={[window.location.hash.split(\"/\")[1]]}\n        onClick={(info) => {\n          switch (info.key) {\n            case \"ihtiyacListesiConfig\":\n              history.push(\"ihtiyacListesiConfig\");\n              break;\n            case \"GenericTasksScreen\":\n              history.push(\"GenericTasksScreen\");\n              break;\n            case \"machineTypeConfig\":\n              history.push(\"machineTypeConfig\");\n              break;\n            case \"userRollsConfig\":\n              history.push(\"userRollsConfig\");\n              break;\n            case \"manageConfig\":\n              history.push(\"manageConfig\");\n              break;\n            case \"createOrder\":\n              history.push(\"/createOrder\");\n              break;\n            case \"reports\":\n              history.push(\"/reports\");\n              break;\n            case \"users\":\n              history.push(\"/users\");\n              break;\n            case \"deliveries\":\n              history.push(\"/deliveries\");\n              break;\n            case \"pendingorders\":\n              history.push(\"/pendingorders\");\n              break;\n            case \"tankproducer\":\n              history.push(\"/tankproducer\");\n              break;\n            case \"activeorders\":\n              history.push(\"/activeorders\");\n              break;\n            case \"chassisproduction\":\n              history.push(\"/chassisproductiontasks\");\n              break;\n            case \"fanproduction\":\n              history.push(\"/fanproductiontasks\");\n              break;\n            case \"armproduction\":\n              history.push(\"/armproductiontasks\");\n              break;\n            case \"productionplans\":\n              history.push(\"/planning\");\n              break;\n            case \"finishedorders\":\n              history.push(\"/finishedorders\");\n              break;\n            case \"cancelledorders\":\n              history.push(\"/cancelledorders\");\n              break;\n            case \"orders\":\n              history.push(\"/orders\");\n              break;\n            case \"activegenerictasks\":\n              history.push(\"/activegenerictasks\");\n              break;\n            case \"finishedgenerictasks\":\n              history.push(\"/finishedgenerictasks\");\n              break;\n\n            case \"chassisneedlist\":\n              history.push(\"/chassisneedlist\");\n              break;\n            case \"fanneedlist\":\n              history.push(\"/fanneedlist\");\n              break;\n            case \"pumpneedlist\":\n              history.push(\"/pumpneedlist\");\n              break;\n            case \"towneedlist\":\n              history.push(\"/towneedlist\");\n              break;\n            case \"commanderneedlist\":\n              history.push(\"/commanderneedlist\");\n              break;\n            case \"otherneedlist\":\n              history.push(\"/otherneedlist\");\n              break;\n            case \"generictasksconfig\":\n              history.push(\"/generictasksconfig\");\n              break;\n            case \"shortcuts\":\n              history.push(\"/shortcuts\");\n              break;\n            case \"editOrder\":\n              history.push(\"/editOrder\");\n              break;\n\n            default:\n              history.push(\"/\");\n              break;\n          }\n          changeTheme(false);\n        }}\n        mode=\"horizontal\"\n        theme={theme}\n      >\n        <Menu.Item\n          style={{ float: \"right\" }}\n          key=\"watchtome\"\n          icon={<ClockCircleOutlined />}\n        >\n          {dayjs().format(\"D MMMM YYYY dddd\")}\n        </Menu.Item>\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <>\n            <Menu.Item key=\"mainscreen\" icon={<HomeOutlined />}>\n              Anasayfa\n            </Menu.Item>\n            {user.role === \"admin\" ? (\n              <Menu.Item key=\"users\" icon={<UserOutlined />}>\n                KullanÄ±cÄ±larÄ± YÃ¶net\n              </Menu.Item>\n            ) : null}\n            {user.role === \"admin\" ? (\n              <Menu.Item key=\"createOrder\" icon={<ReconciliationOutlined />}>\n                SipariÅ OluÅtur\n              </Menu.Item>\n            ) : null}\n            <Menu.SubMenu\n              key=\"OrdersSubMenu\"\n              icon={<BarChartOutlined />}\n              title=\"SipariÅler\"\n            >\n              <Menu.Item key=\"orders\" icon={<BarChartOutlined />}>\n                TÃ¼m SipariÅler\n              </Menu.Item>\n              <Menu.Item key=\"finishedorders\" icon={<BarChartOutlined />}>\n                Tamamlanan SipariÅler\n              </Menu.Item>\n              <Menu.Item key=\"cancelledorders\" icon={<BarChartOutlined />}>\n                Ä°ptal Edilen SipariÅler\n              </Menu.Item>\n              <Menu.Item key=\"pendingorders\" icon={<IssuesCloseOutlined />}>\n                Onay Bekleyen Makineler\n              </Menu.Item>\n              <Menu.Item key=\"activeorders\" icon={<OrderedListOutlined />}>\n                Aktif Makineler\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role == \"muhasebe\" ||\n        user.role == \"ambar1\" ||\n        user.role == \"ambar2\" ? (\n          <>\n            <Menu.SubMenu\n              key=\"ProductionsSubMenu\"\n              icon={<BarChartOutlined />}\n              title=\"Ãretim\"\n            >\n              <Menu.Item key=\"productionplans\" icon={<GroupOutlined />}>\n                Ãretim Planlama\n              </Menu.Item>\n              <Menu.Item key=\"tankproducer\" icon={<GroupOutlined />}>\n                Depo Ãretici\n              </Menu.Item>\n              <Menu.Item key=\"chassisproduction\" icon={<GroupOutlined />}>\n                Åase Ãretimdekiler\n              </Menu.Item>\n              <Menu.Item key=\"fanproduction\" icon={<GroupOutlined />}>\n                Fan Ãretimdekiler\n              </Menu.Item>\n              <Menu.Item key=\"armproduction\" icon={<GroupOutlined />}>\n                Kol Ãretimdekiler\n              </Menu.Item>\n            </Menu.SubMenu>\n\n            <Menu.Item key=\"deliveries\" icon={<InboxOutlined />}>\n              Teslimatlar\n            </Menu.Item>\n          </>\n        ) : null}\n        {user.role === \"tankproducer\" ? (\n          <Menu.Item key=\"tankproducer\" icon={<GroupOutlined />}>\n            Depo Ãretici\n          </Menu.Item>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <>\n            <Menu.SubMenu\n              key=\"GenericTasksSubmenu\"\n              icon={<BarChartOutlined />}\n              title=\"Ä°Å Emirleri\"\n            >\n              <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n                Aktif Ä°Å Emirleri\n              </Menu.Item>\n              <Menu.Item key=\"finishedgenerictasks\" icon={<GroupOutlined />}>\n                Tamamlanan Ä°Å Emirleri\n              </Menu.Item>\n              <Menu.Item key=\"generictasksconfig\" icon={<GroupOutlined />}>\n                Yetkilendirme AyarlarÄ±\n              </Menu.Item>\n              <Menu.Item key=\"shortcuts\" icon={<GroupOutlined />}>\n                KÄ±sayollar\n              </Menu.Item>\n            </Menu.SubMenu>\n\n            <Menu.SubMenu\n              key=\"NeedListSubmenu\"\n              icon={<BarChartOutlined />}\n              title=\"Ä°htiyaÃ§ Listesi\"\n            >\n              <Menu.Item key=\"chassisneedlist\" icon={<GroupOutlined />}>\n                Åase Ä°htiyaÃ§ Listesi\n              </Menu.Item>\n              <Menu.Item key=\"pumpneedlist\" icon={<GroupOutlined />}>\n                Pompa Ä°htiyaÃ§ Listesi\n              </Menu.Item>\n              <Menu.Item key=\"towneedlist\" icon={<GroupOutlined />}>\n                Ãeki Ä°htiyaÃ§ Listesi\n              </Menu.Item>\n              <Menu.Item key=\"fanneedlist\" icon={<GroupOutlined />}>\n                Fan Ä°htiyaÃ§ Listesi\n              </Menu.Item>\n              <Menu.Item key=\"commanderneedlist\" icon={<GroupOutlined />}>\n                Kumanda Ä°htiyaÃ§ Listesi\n              </Menu.Item>\n              <Menu.Item key=\"otherneedlist\" icon={<GroupOutlined />}>\n                DiÄer Ä°htiyaÃ§ Listeleri\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        {user.role === \"lazer\" ||\n        user.role === \"lazer2\" ||\n        user.role === \"lazerkesim\" ||\n        user.role === \"planlama\" ||\n        user.role === \"robot1\" ||\n        user.role === \"robot2\" ? (\n          <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n            Aktif Ä°Å Emirleri\n          </Menu.Item>\n        ) : null}\n        {user.role === \"depo\" ? (\n          <>\n            <Menu.Item key=\"mainscreen\" icon={<HomeOutlined />}>\n              Anasayfa\n            </Menu.Item>\n            <Menu.Item key=\"activeorders\" icon={<OrderedListOutlined />}>\n              Aktif Makineler\n            </Menu.Item>\n            <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n              Aktif Ä°Å Emirleri\n            </Menu.Item>\n          </>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <>\n            <Menu.SubMenu\n              theme={theme}\n              key=\"manageConfig\"\n              icon={<OrderedListOutlined />}\n              title=\"MenÃ¼leri YÃ¶net\"\n            >\n              <Menu.Item key=\"userRollsConfig\" icon={<GroupOutlined />}>\n                KullanÄ±cÄ± Rolleri\n              </Menu.Item>\n              <Menu.Item key=\"GenericTasksScreen\" icon={<GroupOutlined />}>\n                KullanÄ±cÄ± Yetkileri\n              </Menu.Item>\n              <Menu.Item key=\"machineTypeConfig\" icon={<GroupOutlined />}>\n                Makine Tipleri\n              </Menu.Item>\n              <Menu.Item key=\"ihtiyacListesiConfig\" icon={<GroupOutlined />}>\n                Ihtiyac Listesi\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        <Menu.Item\n          onClick={() => {\n            dispatch(logout());\n          }}\n          style={{ float: \"right\" }}\n          key=\"logout\"\n          icon={<LogoutOutlined />}\n        >\n          ÃÄ±kÄ±Å Yap\n        </Menu.Item>\n      </Menu>\n      <Switch>\n        {user.role === \"admin\" ? (\n          <Route path=\"/ihtiyacListesiConfig\">\n            <IhtiyacListesiConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/manageConfig\">\n            <ManageConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/userRollsConfig\">\n            <UserRollsConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/machineTypeConfig\">\n            <MachineTypeConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/GenericTasksScreen\">\n            <GenericTasksConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route\n            path=\"/GenericTaskWithRoleScreen\"\n            render={(props) => <GenericTaskWithRole {...props} />}\n          />\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/generictasksconfig\" exact>\n            <GenericTasksConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/shortcuts\" exact>\n            <ShortcutsScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/createOrder\">\n            <CreateOrderScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/editOrder/:serial_number\">\n            <EditOrderScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/users\">\n            <ManageEmployeScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/pendingorders\">\n            <PendingOrdersScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/deliveries\">\n            <DeliveryScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"tankproducer\" ? (\n          <Route path=\"/tankproducer\">\n            <TankProducerScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"depo\" ? (\n          <Route path=\"/activeorders\">\n            <ActiveOrdersScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/orders\">\n            <OrderScreen isFinishedOrders={false} isCancelledOrders={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/finishedorders\">\n            <OrderScreen isFinishedOrders={true} isCancelledOrders={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route\n            path=\"/filteredOrders/:type\"\n            render={(props: any) => (\n              <FilteredOrdersScreen\n                isFinishedOrders={true}\n                isCancelledOrders={false}\n                {...props}\n              />\n            )}\n          ></Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/cancelledorders\">\n            <OrderScreen isFinishedOrders={false} isCancelledOrders={true} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/planning\">\n            <OrderPlanningScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/chassisproductiontasks\">\n            <ChassisProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/fanproductiontasks\">\n            <FanProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/armproductiontasks\">\n            <ArmProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/activegenerictasks\" exact>\n            <GenericTasksScreen isActive />\n          </Route>\n        ) : null}\n        {user.role === \"lazer\" ||\n        user.role === \"lazer2\" ||\n        user.role === \"lazerkesim\" ||\n        user.role === \"depo\" ? (\n          <>\n            <Route path=\"/\" exact>\n              <GenericTasksScreen isActive />\n            </Route>\n          </>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/finishedgenerictasks\" exact>\n            <GenericTasksScreen isActive={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/otherneedlist\" exact>\n            <OtherNeedListScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/chassisneedlist\" exact>\n            <NeedListScreen type=\"Åase\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/pumpneedlist\" exact>\n            <NeedListScreen type=\"Pompa\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/commanderneedlist\" exact>\n            <NeedListScreen type=\"Kumanda\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/fanneedlist\" exact>\n            <NeedListScreen type=\"Fan\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/towneedlist\" exact>\n            <NeedListScreen type=\"Ãeki\" />\n          </Route>\n        ) : null}\n        <Route path=\"/\">\n          <StatisticsScreen />\n        </Route>\n      </Switch>\n    </MainContainer>\n  );\n}\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Body = styled.div`\n  background-color: rgb(247, 249, 251);\n  height: calc(100% - 48px);\n  width: 100%;\n  padding-left: 10%;\n  padding-right: 10%;\n  padding-top: 1rem;\n`;\nexport default MainScreen;\n","import React, { useState } from \"react\";\nimport { Button, Card, Col, Form, Input, Layout, Row } from \"antd\";\nimport { Body } from \"./MainScreen\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport Text from \"antd/lib/typography/Text\";\nconst { Header, Content, Sider } = Layout;\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\nconst tailLayout = {\n  wrapperCol: { span: 24 },\n};\n\nfunction LoginScreen() {\n  const dispatch = useDispatch();\n  const [submitButtonLoading] = useState(false);\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n    dispatch(login(values.mail, values.password));\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout>\n      <Content>\n        <Row justify=\"center\" align=\"middle\">\n          <Card bordered style={{ width: \"min-content\", height: \"min-content\" }}>\n            <Card>\n              <div style={{ display: \"flex\", height: \"auto\", width: \"auto\", justifyContent: \"center\" }}>\n                <img width=\"200\" height=\"200\" src=\"agrotek.png\" alt=\"image\" />\n              </div>\n            </Card>\n            <h1 className=\"center\">GiriÅ</h1>\n            <Form {...layout} name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed} requiredMark={false}>\n              <Form.Item name=\"mail\" rules={[{ required: true, message: \"LÃ¼tfen bir kullanÄ±cÄ± adÄ± girin.\" }]}>\n                <Input placeholder=\"kullanÄ±cÄ±@mail.com\" />\n              </Form.Item>\n\n              <Form.Item name=\"password\" rules={[{ required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz.\" }]}>\n                <Input.Password placeholder=\"******\" />\n              </Form.Item>\n\n              <Form.Item {...tailLayout}>\n                <Button style={{ marginBottom: \"1rem\" }} type=\"primary\" htmlType=\"submit\" loading={submitButtonLoading} block>\n                  GiriÅ Yap\n                </Button>\n                <Link to=\"/forgotPassword\" className=\"center\">Åifremi unuttum</Link>\n              </Form.Item>\n              <div className=\"center\">\n                <a href=\"https://covisart.com.tr/\">\n                  <img width=\"auto\" height=\"16\" src=\"logo.png\" alt=\"image\" />\n                </a>\n              </div>\n              <Text className=\"center\">Software: v1.6.12.2022</Text>\n            </Form>\n          </Card>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState } from \"react\";\nimport { Button, Card, Form, Input } from \"antd\";\nimport { Body } from \"./MainScreen\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/actions/authActions\";\nimport { Modal } from \"antd\";\nimport { API_ADDRESS } from \"..\";\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\nconst tailLayout = {\n  wrapperCol: { span: 24 },\n};\n\nfunction ForgotPasswordScreen() {\n  const dispatch = useDispatch();\n  const [submitButtonLoading, setSubmitButtonLoading] = useState(false);\n  const onFinish = (values: any) => {\n    Axios.post(API_ADDRESS + \"/api/auth/ResetPassword\", {\n      Mail: values.mail,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          Modal.success({ title: \"Ä°Ålem BaÅarÄ±lÄ±.\", content: \"LÃ¼tfen mail kutunuzu kontrol edin.\" });\n        }\n      })\n      .catch((err) => {\n        Modal.warning({ title: \"Bir hata oluÅtu.\", content: \"LÃ¼tfen mail adresinizi kontrol edin.\" });\n      });\n    dispatch(login(values.mail, values.password));\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Body style={{ height: \"100%\", display: \"flex\", flexDirection: \"column\", paddingTop: \"10%\", alignItems: \"center\" }}>\n      <h1>Åifremi Unuttum</h1>\n\n      <Card bordered style={{ width: 300, height: \"min-content\" }}>\n        <Form {...layout} name=\"basic\" onFinish={onFinish} onFinishFailed={onFinishFailed} requiredMark={false}>\n          <Form.Item\n            name=\"mail\"\n            rules={[\n              { required: true, message: \"Bu alan boÅ bÄ±rakÄ±lamaz.\" },\n              { type: \"email\", message: \"LÃ¼tfen geÃ§erli bir mail adresi girin.\" },\n            ]}\n          >\n            <Input placeholder=\"birisi@gmail.com\" />\n          </Form.Item>\n\n          <Form.Item {...tailLayout}>\n            <Button style={{ marginBottom: \"1rem\" }} type=\"primary\" htmlType=\"submit\" loading={submitButtonLoading} block>\n              Åifremi GÃ¶nder\n            </Button>\n          </Form.Item>\n        </Form>\n      </Card>\n    </Body>\n  );\n}\n\nexport default ForgotPasswordScreen;\n","import { useSelector } from 'react-redux';\nimport { RootState } from './redux/reducers/index';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport MainScreen from './screens/MainScreen';\nimport 'antd/dist/antd-with-locales.min';\nimport LoginScreen from './screens/LoginScreen';\nimport { getConfig } from './redux/actions/authActions';\nimport ForgotPasswordScreen from './screens/ForgotPasswordScreen';\nimport { ConfigProvider, theme } from 'antd';\n\nfunction App() {\n  getConfig();\n\n  const user = useSelector((state: RootState) => state.auth.user);\n  //const [theme, setTheme] = useState<MenuTheme>('dark');\n\n  return (\n    <HashRouter basename=\"agrotekweb\">\n      <ConfigProvider\n        theme={{\n          algorithm: theme.defaultAlgorithm,\n        }}\n      >\n        <Switch>\n          <Route path=\"/ForgotPassword\">\n            <ForgotPasswordScreen />\n          </Route>\n          <Route path=\"/\">{user ? <MainScreen /> : <LoginScreen />}</Route>\n        </Switch>\n      </ConfigProvider>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport AuthReducer from \"./authReducer\";\n\nexport const rootReducer = combineReducers({ auth: AuthReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/lib/locale/tr_TR\";\n\nexport const API_ADDRESS = \"https://devagrotek.azurewebsites.net\";\n// export const API_ADDRESS = 'https://agrotekapi.azurewebsites.net'\n//export const API_ADDRESS = 'https://agrotekapi.covisart.com:8443';\n//export const API_ADDRESS = 'https://factoryapi.covisart.com'\n//export const API_ADDRESS = 'https://localhost:7290';\n\nconst authState = sessionStorage.getItem(\"user\")\n  ? {\n      auth: { user: JSON.parse(String(sessionStorage.getItem(\"user\"))) },\n    }\n  : undefined;\nexport const store = createStore(\n  rootReducer,\n  authState,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}