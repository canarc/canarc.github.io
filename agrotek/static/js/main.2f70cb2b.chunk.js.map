{"version":3,"sources":["helper.tsx","services/UsersService.tsx","components/RegistrationForm.tsx","components/ChangePasswordForm.tsx","screens/manageEmployeScreen.tsx","redux/reducers/authReducer.tsx","redux/actions/authActions.tsx","services/OrderService.tsx","services/ConfigService.tsx","screens/createOrderScreen.tsx","components/OrderHistory.tsx","kase.jpg","screens/Invoice/ProformaInvoice.jsx","screens/Invoice/FanInvoice.jsx","screens/OrderScreen.js","services/NeedListService.tsx","screens/manageConfigScreen.tsx","components/OrderDetails.tsx","screens/DeliveryScreen.js","screens/TankProducerScreen.js","screens/PendingOrdersScreen.js","screens/ActiveOrdersScreen.js","services/ReportService.tsx","components/ReportSquare.tsx","components/ExportCSV.tsx","screens/StatisticsScreen.tsx","services/ProductionPlanService.tsx","screens/OrderPlanningScreen.tsx","components/PartsHistory.tsx","screens/ChassisProductionTasksScreen.js","screens/ArmProductionTasksScreen.js","screens/FanProductionTasksScreen.js","components/TaskHistory.tsx","screens/GenericTasksScreen.js","screens/OtherNeedListScreen.tsx","screens/UserRollsConfigScreen.tsx","screens/GenericTasksConfigScreen.tsx","screens/ShortcutsScreen.jsx","screens/NeedListScreen.tsx","screens/MachineTypeConfigScreen.tsx","screens/IhtiyacListesiConfigScreen.tsx","screens/GenericTaskWithRole.js","screens/editOrderScreen.tsx","screens/FilteredOrdersScreen.jsx","screens/QrCodeScreen.jsx","screens/TankProducerScreenFromShortcuts.js","screens/ActiveMachineStatus.jsx","screens/PendingOrdersScreenForFinance.js","screens/Invoice/ArmInvoice.jsx","screens/ForDealer/CreateOrderScreen.jsx","screens/ForDealer/AllOrdersScreen.jsx","screens/MainScreen.tsx","screens/LoginScreen.tsx","screens/ForgotPasswordScreen.tsx","App.tsx","redux/reducers/index.tsx","index.tsx"],"names":["GetToken","store","getState","auth","user","token","dayjs","locale","padLeft","text","padChar","size","String","repeat","substr","Capitalize","s","charAt","toUpperCase","slice","ConvertDateTime","dateTime","format","ConvertOrderLocation","OrderLocation","ConvertTankStatus","TankStatus","GetAllUsers","Axios","get","API_ADDRESS","headers","Authorization","then","res","status","data","catch","response","Register","values","post","ChangePasswordAdmin","DeleteUser","mail","delete","ReopenUser","put","ChangeRole","Mail","Role","config","JSON","parse","localStorage","getItem","RegistrationForm","visible","onCreate","onCancel","Form","useForm","form","title","okText","cancelText","onOk","validateFields","resetFields","info","console","log","layout","name","initialValues","modifier","requiredMark","Item","label","rules","required","message","type","className","Group","role","map","value","ChangePasswordForm","getFieldValue","Content","Layout","Option","Sider","Select","ManageEmployeScreen","state","selectedRowKeys","changePasswordMail","registrationButtonLoading","registrationFormVisible","changePasswordFormVisible","tableLoading","columns","dataIndex","sorter","a","b","localeCompare","surname","render","record","defaultValue","style","width","onChange","Modal","error","content","isDeleted","onConfirm","getTableData","block","danger","marginTop","onClick","showChangePasswordForm","showRegistrationForm","setState","onSelectChange","users","this","length","minHeight","orientation","plain","xs","span","offset","lg","icon","UserAddOutlined","loading","rowKey","row","dataSource","concat","success","Component","LOGIN","LOGOUT","initialState","AuthReducer","action","payload","getConfig","setItem","stringify","login","Password","dispatch","sessionStorage","window","location","href","err","GetTaskRequestConfig","turbo","kollu","diger","test","bahce","depo","iptal","teslimat","onaybekliyor","TakeOrder","order","serialCode","date","year","tank_size","parseInt","order_amount","production_unit","serial_number","TakeOrderDealer","order_tooker","UpdateOrder","toLowerCase","GetAllTankFromSaruhanli","GetProductionReadyOrders","GetApprovalPendingOrders","addApproval","orderId","dealerConfirmOffer","dealerDenyOffer","updateAnOffer","order_id","price","payment_detail","numberPrice","Number","GetOrderDetails","GetMachineListFromOrderById","GetOrderHistory","machine_id","GetArmHistory","GetFanHistory","GetChassisHistory","GetDeliveryReport","GetMovableMachines","requestConfig","SwitchMachines","machines","GetAllTankProducerOrders","sendToTankProducer","place","id","CurrentPosition","Id","sendTo","testComment","GetActiveOrders","DeleteOrder","DeleteSingleMachine","GetShortcuts","AddShortcut","items","selectedData","axios","join","RemoveShortcuts","removedItem","filter","getHistory","sendToChassis","sendToArm","addConfig","key","deleteConfig","getCustomerList","getOrderNumber","OptGroup","QRCode","require","reverseString","str","newString","i","CreateOrderScreen","PartTypes","configFile","useState","isFetching","setIsFetching","orderNoCounter","setOrderNoCounter","qrCodeValue","setQrCodeValue","customerList","setCustomerList","productionUnit","setProductionUnit","brand","cooler_type","arm_type","pump","order_no","serialState","setSerialState","SerialCodeGenerator","createOrderNo","useEffect","setTimeout","Body","display","justifyContent","flexWrap","onFieldsChange","product","setFieldsValue","caldron_color","onFinish","printQRCode","labelCol","wrapperCol","maxWidth","minWidth","initialValue","moment","disabled","max","options","placeholder","filterOption","inputValue","option","indexOf","min","addonBefore","e","target","onSelect","shortend","turktraktormodel","btype","machine_type","caldron_material","tow_type","commander","meme_type","maxLength","caldron_type","fan_radius","fan_type","indicator","UndoOutlined","spin","picker","chassis_color","TextArea","htmlType","renderAs","amount","printWindow","open","index","splitTwoPartsBarcode","qrCode","split","svg","renderToString","height","margin","document","write","body","close","print","MachinePartsHistory","props","setData","setLastLocation","useSelector","arm","reduce","row_created_date","fan","chassis","GetHistory","marginBottom","mode","timeline","OrderHistory","isVisible","setIsVisible","lastLocation","footer","alignContent","alignItems","flexDirection","UndoSendTo","ProformaInvoice","item","currentDate","Date","getFullYear","month","getMonth","day","getDate","formattedDate","description","quantity","unit","toFixed","totalPrice","hashPriority","padding","flex","src","alt","textAlign","fontWeight","alignSelf","customer","marginRight","Kase","border","boxSizing","address","phone_number","borderLeft","borderRight","borderBottom","backgroundColor","bordered","gap","pagination","textDecoration","fontSize","FanInvoice","Ürün","Marka","Tip","Pompa","meme_distance","arm_length","Kumanda","alt_features","borderTop","paddingLeft","maxHeight","whiteSpace","marginLeft","paddingBottom","cols","rows","Object","entries","extend","customParseFormat","renderProperties","OrderScreen","getColumnSearchProps","filterDropdown","setSelectedKeys","selectedKeys","confirm","clearFilters","ref","node","searchInput","onPressEnter","handleSearch","handleReset","filterIcon","filtered","SearchOutlined","color","undefined","onFilter","toString","includes","onFilterDropdownOpenChange","select","searchText","searchedColumn","checked","keepMachineDetails","movableMachines","orderModalVisible","csvdata","orderDetails","top","bottom","ellipsis","pending_amount","cursor","amounts","acc","curr","ModalFunction","keys","unix","laststatus","column","planned_date","componentDidMount","GetOrders","renderOrderDetails","bind","detail","pump_serial","comment","orderSelected","historyModalVisible","historyModalId","test_comment","responseType","FileSaver","reader","FileReader","readAsArrayBuffer","onload","workbook","ExcelJS","Workbook","xlsx","load","result","worksheet","getWorksheet","getRow","getCell","commit","row2","test_manager","test_date","writeBuffer","buffer","blob","Blob","saveAs","serialNumber","prevProps","isFinishedOrders","isCancelledOrders","GetFinishedOrders","dateModifiedData","GetCancelledOrders","GetAllOrders","sort","order1","order2","expandable","expandedRowRender","ReactDomServer","renderToStaticMarkup","head","appendChild","createElement","innerHTML","contentEditable","borderRadius","to","pathname","defaultPageSize","position","selectedToMove","showSearch","optionFilterProp","input","children","defaultActiveFirstOption","machine","React","connect","ownProps","GetGenericTaskRoleAuthorizationList","obj","GetNeedsList","AddNeedsList","DeleteNeedsList","typeToString","ManageConfigScreen","NeedsListTable","GetData","trigger","float","configs","renderDoubleColumnTable","renderTripleColumnTable","chassis_production_time","suffix","enterButton","onSearch","fan_production_time","arm_production_time","OrderDetails","setRecord","externalDetails","last_location_date","hideShowTransactions","DeliveryScreen","TankProducerScreen","activeOrders","showAllOrders","last_operation_date","filteredResult","filterResult","onlyActiveOrders","csv","forEach","push","order_date","deliver_date","producted_date","confirmed_date","PendingOrdersScreen","can_start_production","GetPendingOrdersData","ActiveOrdersScreen","defaultSortOrder","filteredRes","csvDataloaded","order_details","GetReportsWithDate","selectedDate","add","toISOString","ExportCSVModel","OrderStartDate","OrderEndDate","StatusStartDate","StatusEndDate","model","Title","Typography","ReportSquare","overflow","level","RangePicker","DatePicker","ExportCSV","history","useHistory","isChecked","setIsChecked","locations","planlandı","ExportCSVReportWithGroup","ExportCSVReport","lineHeight","StatisticsScreen","reports","handleDateChange","event","test_bugun_yapilan_is","turbo_bugun_yapilan_is","diger_bugun_yapilan_is","teslimat_bugun_yapilan_is","kollu_bugun_yapilan_is","uniq","Array","from","Set","toplam_siparis","kollu_siparis","kollugereken","kolluplanlanan","turbo_siparis","turbogereken","turboplanlanan","stocks","diger_siparis","digergereken","digerplanlanan","outline","gutter","sm","md","code","xl","renderReports","renderStocks","renderDailyCompletedTasks","onSuccess","machineId","GetChassisProductionTasks","GetArmProductionTasks","CreateGenericTask","ModifyGenericTask","GetActiveGenericTasks","GetFinishedGenericTasks","DeleteGenericTask","DivideGenericTask","UpdateGenericTask","GetFanProductionTasks","tailLayout","OrderPlanningScreen","formRef","createRef","pendingOrders","CreateProductionPlan","current","onFinishFailed","errorInfo","SaveExcel","XLSX","aoa_to_sheet","book_new","book_append_sheet","dateCellRender","GetProductionPlans","GetPendingOrders","filteredData","isSame","startOf","tasks","CancelProductionPlan","shape","DeleteOutlined","PartsHistory","details","sendToFan","PartHistory","partType","UndoArmTo","UndoFanTo","UndoChassisTo","getBase64FromUrl","url","fetch","Promise","resolve","readAsDataURL","onloadend","base64data","ChassisProductionTasksScreen","row_updated_date","separator","sheet","addWorksheet","properties","defaultRowHeight","header","promise","all","rowNumber","addRow","imageId2","addImage","base64","extension","tl","col","ext","getColumn","eachCell","cell","cellValue","fill","pattern","fgColor","argb","URL","createObjectURL","anchor","download","click","revokeObjectURL","exportWithExcel","GenericTaskHistory","task_id","GetGenericTaskHistory","find","DivideContent","Props","setAmount","maxAmount","formatter","parser","getTasks","GenericTasksScreen","selectedRole","selectedUnit","authorizationList","last_location","isActive","new_group","GetTasks","permission","authority","completed_amount","isModalVisible","selectedTaskId","componentWillReceiveProps","newProps","oldProps","task","selectedTitle","selectedDescription","compact","selectedAmount","styles","button","addTaskButtonLoading","group","OtherNeedListScreen","GetTotalNeeds","UserRollsConfigScreen","GenericTasksConfigScreen","RoleListTable","DeleteGenericTaskRoleAuthorizationList","AddGenericTaskRoleAuthorizationList","newUser","Wrapper","styled","div","Shortcuts","_items","setItems","dataForSelect","setDataForSelect","setSelectedData","constantProduction","route","parsedData","handleClick","handleDelete","isSmallScreen","screen","GridContext","sourceIndex","targetIndex","nextState","swap","GridDropZone","boxesPerRow","rowHeight","GridItem","right","borderTopRightRadius","boxShadow","userSelect","gridTemplateColumns","prod","NeedListScreen","GetFanNeeds","formattedData","GetCommanderNeeds","GetTowNeeds","GetPumpNeeds","GetChassisNeeds","finished_amount","full_data","net_stock","MachineTypeConfigScreen","IhtiyacListesiConfigScreen","GetGenericTaskWithRole","EditOrderScreen","setOrderDetails","isLoading","setIsLoading","useLocation","caldron_stock","goBack","productUnit","GetAllOrdersByType","filteredDataForExcel","QRCodeScreen","ActiveMachineStatus","tank_location","arm_location","chassis_location","fan_location","GetMachineStatus","machine_location","PendingOrdersScreenForFinance","priceForModal","detailForModal","updatePriceModalVisible","confirmButtonLoadingForModals","selectedOrderId","fromDealer","startsWith","UpdateAnOffer","approval_role","secondRole","confirmLoading","remember","autoComplete","ArmInvoice","paddingTop","CreateOrderScreenForDealers","OrderScreenForDealer","GetAllDealerOrders","MainContainer","MainScreen","useDispatch","theme","setTheme","defaultSelectedKeys","pointerEvents","ClockCircleOutlined","ReconciliationOutlined","SubMenu","BarChartOutlined","HomeOutlined","UserOutlined","IssuesCloseOutlined","OrderedListOutlined","GroupOutlined","InboxOutlined","removeItem","LogoutOutlined","path","GenericTaskWithRole","exact","ShortcutsScreen","QrCodeScreen","TankProducerScreenFromShortcuts","FilteredOrdersScreen","FanProductionTasksScreen","ArmProductionTasksScreen","Header","LoginScreen","submitButtonLoading","setSubmitButtonLoading","justify","align","password","ForgotPasswordScreen","warning","App","basename","forceRefresh","algorithm","defaultAlgorithm","rootReducer","combineReducers","authState","createStore","applyMiddleware","thunk","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.2f70cb2b.chunk.js","sourcesContent":["import { store } from \"./index\";\nimport CryptoJS from \"react-native-crypto-js\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\ndayjs.locale(\"tr\");\n\nexport function GetToken() {\n  const token: string = store.getState().auth.user.token;\n  return token;\n}\n\nexport const padLeft = function (\n  text: string,\n  padChar: string,\n  size: number\n): string {\n  return (String(padChar).repeat(size) + text).substr(size * -1, size);\n};\n\nexport function Capitalize(s: String) {\n  if (s) {\n    return s?.charAt(0)?.toUpperCase() + s?.slice(1);\n  }\n  return \"\";\n}\n\nexport function EncryptQR(qrCode: string) {\n  let result = CryptoJS.AES.encrypt(qrCode, \"yigitcan\").toString();\n\n  return result;\n}\n\nexport function ConvertDateTime(dateTime: string, format?: string) {\n  return dayjs(dateTime).format(format || \"D MMMM YYYY HH:mm\");\n}\n\nexport function ConvertOrderLocation(OrderLocation: string) {\n  switch (OrderLocation) {\n    case \"kollu\":\n      return \"Kollu Üretimde\";\n    case \"turbo\":\n      return \"Turbo Üretimde\";\n    case \"diger\":\n      return \"Diğer Üretimde\";\n    case \"test\":\n      return \"Testte\";\n    case \"depo\":\n      return \"Depoda\";\n    case \"bahce\":\n      return \"Bahçede\";\n    case \"onaybekliyor\":\n      return \"Üretim Onayı Bekliyor\";\n    case \"planlandı\":\n      return \"Üretim Planına Alındı\";\n    case \"teslimat\":\n      return \"Teslim Edildi\";\n    case \"onproduction\":\n      return \"Üretimde\";\n    case \"sendedpaint\":\n      return \"Boyaya Gönderildi\";\n    case \"sendedgalvaniz\":\n      return \"Galvanize Gönderildi\";\n    case \"receivedgalvaniz\":\n      return \"Galvaniz işleminde.\";\n    case \"receivedpaint\":\n      return \"Boya işleminde.\";\n    case \"sendedsaruhanli\":\n      return \"Boyadan çıktı.\";\n    case \"receivedsaruhanli\":\n      return \"Saruhanlı Depoda (Hazır).\";\n    case \"completed\":\n      return \"Tamamlandı\";\n\n    default:\n      return Capitalize(OrderLocation);\n  }\n}\n\nexport function ConvertTankStatus(TankStatus: string) {\n  if (!TankStatus) return \"Stoktan\";\n\n  switch (TankStatus) {\n    case \"delivered\":\n      return \"Teslim Edildi\";\n    case \"producted\":\n      return \"Üretim Tamamlandı (Hazır)\";\n    case \"confirmed\":\n      return \"Üretiliyor (Onaylandı)\";\n    case \"cancelled\":\n      return \"İptal Edildi\";\n    case \"ontheway\":\n      return \"Yolda (Saruhanlıya Gönderildi)\";\n    case \"pending\":\n      return \"Onay Bekliyor\";\n    default:\n      return TankStatus;\n  }\n}\n\nexport function ConvertOrderStatus(OrderStatus: string) {\n  switch (OrderStatus) {\n    case \"active\":\n      return \"Aktif\";\n    case \"cancelled\":\n      return \"İptal Edildi\";\n    case \"finished\":\n      return \"Tamamlandı\";\n    default:\n      return Capitalize(OrderStatus);\n  }\n}\n\nexport function ConvertProductionTasksStatus(TasksStatus: string) {\n  switch (TasksStatus) {\n    case \"onproduction\":\n      return \"Üretiliyor\";\n    case \"ondelivery\":\n      return \"Sevkiyatta\";\n    case \"delivered\":\n      return \"Sevkiyat Tamamlandı\";\n    case \"completed\":\n      return \"Tamamlandı\";\n    default:\n      return Capitalize(TasksStatus);\n  }\n}\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\ninterface RegisterValues {\n  Name: string;\n  Surname: string;\n  Role: string;\n  Mail: string;\n}\n\ninterface ChangePasswordValues {\n  Mail: string;\n  Password: string;\n}\n\nexport async function GetAllUsers() {\n  const response = await Axios.get(API_ADDRESS + \"/api/auth/getAllUsers\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function Register(values: RegisterValues) {\n  const response = await Axios.post(API_ADDRESS + \"/api/auth/register\", values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 201) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function ChangePasswordAdmin(values: ChangePasswordValues) {\n  const response = await Axios.post(API_ADDRESS + \"/api/auth/changePasswordAdmin\", values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return true;\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function DeleteUser(mail: string) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/auth/deleteuser/\" + mail, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function ReopenUser(mail: string) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/auth/ReopenUser/\" + mail,\n    {},\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function ChangeRole(Mail: string, Role: string) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/auth/ChangeRole/\",\n    { Mail, Role },\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return true;\n      }\n    })\n    .catch(() => {\n      return false;\n    });\n\n  return response;\n}\n","import React from \"react\";\nimport { Modal, Form, Input, Radio } from \"antd\";\n\ninterface RegistrationFormProps {\n  visible: boolean;\n  onCreate: (values: any) => void;\n  onCancel: () => void;\n}\n\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst RegistrationForm: React.FC<RegistrationFormProps> = ({ visible, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Yeni Bir Kullanıcı Oluştur.\"\n      okText=\"Oluştur\"\n      cancelText=\"İptal Et\"\n      onCancel={onCancel}\n      onOk={() => {\n        form\n          .validateFields()\n          .then((values) => {\n            form.resetFields();\n            onCreate(values);\n          })\n          .catch((info) => {\n            console.log(\"Validate Failed:\", info);\n          });\n      }}\n    >\n      <Form form={form} layout=\"vertical\" name=\"form_in_modal\" initialValues={{ modifier: \"public\" }} requiredMark={false}>\n        <Form.Item\n          name=\"Mail\"\n          label=\"E-mail\"\n          rules={[\n            { required: true, message: \"Lütfen bir mail adresi girin.\" },\n            { type: \"email\", message: \"Lütfen geçerli bir mail adresi girin.\" },\n          ]}\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Name\" label=\"Ad\" rules={[{ required: true, message: \"Lütfen bir isim girin.\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Surname\" label=\"Soyad\" rules={[{ required: true, message: \"Lütfen bir soyisim girin.\" }]}>\n          <Input />\n        </Form.Item>\n        <Form.Item name=\"Role\" className=\"collection-create-form_last-form-item\" rules={[{ required: true, message: \"Lütfen bir sınıf seçin.\" }]}>\n          <Radio.Group>\n            {(() => {\n              return config.role.map((role) => {\n                return <Radio value={role.type}>{role.text}</Radio>;\n              });\n            })()}\n          </Radio.Group>\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default RegistrationForm;\n","import React from \"react\";\nimport { Modal, Form, Input } from \"antd\";\n\ninterface ChangePasswordFormProps {\n  visible: boolean;\n  onCreate: (values: any) => void;\n  onCancel: () => void;\n  mail: string;\n}\n\nconst ChangePasswordForm: React.FC<ChangePasswordFormProps> = ({ visible, mail, onCreate, onCancel }) => {\n  const [form] = Form.useForm();\n  return (\n    <Modal\n      visible={visible}\n      title=\"Kullanıcının Şifresini Değiştir\"\n      okText=\"Değiştir\"\n      cancelText=\"İptal Et\"\n      onCancel={onCancel}\n      onOk={() => {\n        if (form.getFieldValue(\"password\") === form.getFieldValue(\"password1\")) {\n          form\n            .validateFields()\n            .then((values) => {\n              form.resetFields();\n              onCreate({ ...values, Mail: mail });\n            })\n            .catch((info) => {\n              console.log(\"Validate Failed:\", info);\n            });\n        }\n      }}\n    >\n      <Form form={form} layout=\"vertical\" name=\"form_in_modal\" initialValues={{ modifier: \"public\" }} requiredMark={false}>\n        <Form.Item name=\"Password\" label=\"Şifre\" rules={[{ required: true, message: \"Lütfen bir şifre girin.\" }]}>\n          <Input type=\"password\" />\n        </Form.Item>\n        <Form.Item name=\"Password1\" label=\"Şifre (Tekrar)\" rules={[{ required: true, message: \"Lütfen aynı şifreyi tekrar girin.\" }]}>\n          <Input type=\"password\" />\n        </Form.Item>\n      </Form>\n    </Modal>\n  );\n};\n\nexport default ChangePasswordForm;\n","import { Table, Button, Modal, Popconfirm, Select, Layout, Col, Row, Divider } from \"antd\";\nimport { Component } from \"react\";\nimport { Body } from \"./MainScreen\";\nimport { ColumnsType } from \"antd/es/table\";\nimport { UserAddOutlined } from \"@ant-design/icons\";\nimport { DeleteUser, ReopenUser, GetAllUsers, Register, ChangePasswordAdmin, ChangeRole } from \"../services/UsersService\";\nimport RegistrationForm from \"../components/RegistrationForm\";\nimport ChangePasswordForm from \"../components/ChangePasswordForm\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { Footer } from \"antd/es/layout/layout\";\n\nconst { Content, Sider } = Layout;\n\n\ninterface Employe {\n  name: string;\n  surname: string;\n  mail: string;\n  role: string;\n  isDeleted: boolean;\n}\n\nconst { Option } = Select;\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nclass ManageEmployeScreen extends Component {\n  state = {\n    selectedRowKeys: [],\n    changePasswordMail: \"\",\n    registrationButtonLoading: false, //Yeni kullanıcı ekleme butonunun status'u\n    registrationFormVisible: false, //Yeni kullanıcı ekleme formu görünür mü\n    changePasswordFormVisible: false, //Kullanıcının şifre değiştirme formu görünür mü\n    tableLoading: true,\n    data: [],\n  };\n\n  columns: ColumnsType<Employe> = [\n    {\n      title: \"Ad\",\n      dataIndex: \"name\",\n      sorter: (a: Employe, b: Employe) => a.name.localeCompare(b.name)\n    },\n    {\n      title: \"Soyad\",\n      dataIndex: \"surname\",\n      sorter: (a: Employe, b: Employe) => a.surname.localeCompare(b.surname)\n    },\n    {\n      title: \"E-Mail\",\n      dataIndex: \"mail\",\n      sorter: (a: Employe, b: Employe) => a.mail.localeCompare(b.mail)\n    },\n    {\n      title: \"Rol\",\n      render: (value, record) => {\n        return (\n          <>\n            <Select\n              defaultValue={record.role}\n              style={{ width: 120 }}\n              onChange={async (value) => {\n                const result = await ChangeRole(record.mail, value);\n                if (!result) {\n                  Modal.error({\n                    title: \"Bir hata oluştu\",\n                    content: <p>Kullanıcının rolü değiştirilemedi lütfen tekrar deneyin.</p>,\n                    okText: \"Tamam\",\n                  });\n                }\n              }}\n            >\n              {(() => {\n                return config.role.map((role) => {\n                  return <Option value={role.type}>{role.text}</Option>;\n                });\n              })()}\n            </Select>\n          </>\n        );\n      },\n    },\n    {\n      title: \"İşlemler\",\n      width: 10,\n      render: (value, record) => {\n        return (\n          <>\n            <Popconfirm\n              title={`Bu kullanıcıyı ${record.isDeleted ? \"açmak\" : \"silmek\"} istediğinizden emin misiniz?`}\n              onConfirm={async () => {\n                if (record.isDeleted) {\n                  if (await ReopenUser(record.mail)) {\n                    this.getTableData();\n                  }\n                } else {\n                  if (await DeleteUser(record.mail)) {\n                    this.getTableData();\n                  }\n                }\n              }}\n              okText=\"Evet\"\n              cancelText=\"Hayır\"\n            >\n              <Button block danger type=\"primary\">\n                {record.isDeleted ? \"Yeniden Aç\" : \"Kullanıcıyı Sil\"}\n              </Button>\n            </Popconfirm>\n            <Button\n              style={{ marginTop: 5 }}\n              onClick={() => {\n                this.showChangePasswordForm(record.mail);\n              }}\n              block\n              type=\"default\"\n            >\n              Şifre Değiştir\n            </Button>\n          </>\n        );\n      },\n    },\n  ];\n\n  async getTableData() {\n    let users = await GetAllUsers();\n    if (users) {\n      this.setState({ data: users });\n    }\n    this.setState({ tableLoading: false });\n  }\n\n  componentDidMount() {\n    this.getTableData();\n  }\n\n  showRegistrationForm = () => {\n    this.setState({ registrationButtonLoading: true, registrationFormVisible: true });\n  };\n\n  showChangePasswordForm = (mail: string) => {\n    this.setState({ changePasswordFormVisible: true, changePasswordMail: mail });\n  };\n\n  onSelectChange = (selectedRowKeys: string) => {\n    console.log(\"selectedRowKeys changed: \", selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  };\n\n  render() {\n    const { registrationButtonLoading, tableLoading, selectedRowKeys, data, registrationFormVisible, changePasswordFormVisible, changePasswordMail } = this.state;\n\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Content>\n          <Divider orientation=\"center\" plain>\n            <Row>\n              <Col xs={{ span: 11, offset: 1 }} lg={{ span: 6, offset: 2 }}>\n                <Button type=\"primary\" onClick={this.showRegistrationForm} icon={<UserAddOutlined />} loading={registrationButtonLoading}>\n                  Kullanıcı Ekle\n                </Button>\n              </Col>\n            </Row>\n          </Divider>\n\n          <Table loading={tableLoading} rowKey={(row) => row.mail} columns={this.columns} dataSource={data} />\n          <RegistrationForm\n            visible={registrationFormVisible}\n            onCreate={async (values) => {\n              let user = await Register(values);\n              if (user) {\n                let data = [].concat(this.state.data, user);\n                this.setState({ data, registrationFormVisible: false, registrationButtonLoading: false });\n              } else {\n                Modal.error({\n                  title: \"Bir hata oluştu\",\n                  content: <p>Bu mail adresi daha önce kayıt olmuş olabilir.</p>,\n                  okText: \"Tamam\",\n                });\n              }\n            }}\n            onCancel={() => {\n              this.setState({ registrationButtonLoading: false, registrationFormVisible: false });\n            }}\n          />\n          <ChangePasswordForm\n            visible={changePasswordFormVisible}\n            mail={changePasswordMail}\n            onCreate={async (values) => {\n              let user = await ChangePasswordAdmin(values);\n              if (user) {\n                this.setState({ changePasswordFormVisible: false });\n                Modal.success({\n                  title: \"İşlem başarılı\",\n                  content: <p>Kullanıcının şifresi başarıyla değişti.</p>,\n                  okText: \"Tamam\",\n                });\n              } else {\n                Modal.error({\n                  title: \"Bir hata oluştu\",\n                  content: <p>Lütfen tekrar deneyin.</p>,\n                  okText: \"Tamam\",\n                });\n              }\n            }}\n            onCancel={() => {\n              this.setState({ changePasswordFormVisible: false });\n            }}\n          />\n        </Content>\n      </Layout>\n    );\n  }\n}\n\nexport default ManageEmployeScreen;\n","export const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const CONFIG = \"CONFIG\";\n\ninterface Action {\n  type: string;\n  payload: any;\n}\n\nconst initialState = {\n  user: null,\n};\n\nfunction AuthReducer(state = initialState, action: Action) {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, user: action.payload };\n    case LOGOUT:\n      return { ...state, user: null };\n    default:\n      return state;\n  }\n}\n\nexport default AuthReducer;\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { Dispatch } from \"redux\";\nimport { API_ADDRESS } from \"../..\";\nimport { LOGIN, LOGOUT } from \"../reducers/authReducer\";\n\nexport async function getConfig() {\n  await Axios.get(API_ADDRESS + \"/api/config\").then((res) => {\n    localStorage.setItem(\"config\", JSON.stringify(res.data));\n  });\n  return true;\n}\n\nexport function login(Mail: string, Password: string) {\n  return async (dispatch: Dispatch) => {\n    Axios.post(API_ADDRESS + \"/api/auth/login\", { Mail, Password })\n      .then((res) => {\n        sessionStorage.setItem(\"user\", JSON.stringify(res.data));\n        dispatch({ type: LOGIN, payload: res.data });\n        window.location.href = \"/\";\n      })\n      .catch((err) => {\n        if (err?.response?.status === 401) {\n          Modal.error({\n            title: \"Giriş Yetkiniz Yok\",\n            content: <p>Lütfen admin ile iletişime geçin..</p>,\n            okText: \"Tamam\",\n          });\n        } else {\n          Modal.error({\n            title: \"Bilgileriniz Yanlış\",\n            content: <p>Lütfen bilgilerinizi kontrol edin..</p>,\n            okText: \"Tamam\",\n          });\n        }\n      });\n  };\n}\n\nexport function logout() {\n  return async (dispatch: Dispatch) => {\n    sessionStorage.removeItem(\"user\");\n    dispatch({ type: LOGOUT });\n  };\n}\n","import Axios from \"axios\";\nimport { GetToken } from \"../helper\";\n\nimport { Modal } from \"antd\";\nimport { API_ADDRESS } from \"..\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport axios from \"axios\";\ndayjs.locale(\"tr\");\n\nexport interface IOrder {\n  description: string;\n  date: string;\n  customer: string;\n  phone_number: string;\n  address: string;\n  production_unit: string;\n  order_no: string;\n  order_tooker: string;\n  order_amount: number;\n  status: string;\n  type: string;\n  serial_number: string;\n  cooler_type: string;\n  tank_size: number;\n  pump: string;\n  pump_serial: string;\n  year: string;\n  tow_type: string;\n  meme_type: string;\n  meme_distance: string;\n  arm_type: string;\n  arm_length: string;\n  chassis_color: string;\n  caldron_type: string;\n  caldron_color: string;\n  commander: string;\n  alt_features: string;\n  brand: string;\n}\n\nexport interface ITurboOrder extends IOrder {\n  caldron_type: string;\n  fan_radius: string;\n  fan_type: string;\n}\n\nexport interface ISleevedOrder extends IOrder {\n  arm_length: string;\n  arm_type: string;\n  meme_distance: string;\n  meme_type: string;\n}\n\nexport interface GenericOrder extends ITurboOrder, ISleevedOrder {\n  id: number;\n  machine_id: number;\n  last_location_date: string;\n  planned_date?: string;\n  laststatus?: string;\n}\n\nexport class GetTaskRequestConfig {\n  turbo: boolean = false;\n  kollu: boolean = false;\n  diger: boolean = false;\n  test: boolean = false;\n  bahce: boolean = false;\n  depo: boolean = false;\n  iptal: boolean = false;\n  teslimat: boolean = false;\n  onaybekliyor: boolean = false;\n}\n\nexport async function TakeOrder(\n  order: ITurboOrder | ISleevedOrder,\n  serialCode: string\n) {\n  order.date = dayjs().format(\"YYYY-MM-DD HH:mm\");\n  order.year = dayjs().format(\"YY\");\n  if (order.tank_size) order.tank_size = parseInt(String(order.tank_size));\n  if (order.order_amount)\n    order.order_amount = parseInt(String(order.order_amount));\n  order.status = order.production_unit;\n  order.serial_number = serialCode;\n\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/TakeOrder/\",\n    order,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Sipariş başarıyla oluşturuldu.</p>,\n          okText: \"Tamam\",\n        });\n        return true;\n      }\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function TakeOrderDealer(\n  order: ITurboOrder | ISleevedOrder,\n  serialCode: string\n) {\n  order.date = dayjs().format(\"YYYY-MM-DD HH:mm\");\n  order.year = dayjs().format(\"YY\");\n  if (order.tank_size) order.tank_size = parseInt(String(order.tank_size));\n  if (order.order_amount)\n    order.order_amount = parseInt(String(order.order_amount));\n  order.status = order.production_unit;\n  order.serial_number = serialCode;\n  order.order_tooker = \"\";\n\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/TakeOrderDealer/\",\n    order,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Sipariş başarıyla oluşturuldu.</p>,\n          okText: \"Tamam\",\n        });\n        return true;\n      }\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function UpdateOrder(\n  order: ITurboOrder | ISleevedOrder,\n  serialCode: string\n) {\n  order.date = dayjs().format(\"YYYY-MM-DD HH:mm\");\n  order.year = dayjs().format(\"YY\");\n  if (order.tank_size) order.tank_size = parseInt(String(order.tank_size));\n  if (order.order_amount)\n    order.order_amount = parseInt(String(order.order_amount));\n  order.status = order.production_unit;\n  order.serial_number = serialCode;\n\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/EditOrder/\",\n    order,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Sipariş başarıyla oluşturuldu.</p>,\n          okText: \"Tamam\",\n        });\n        return true;\n      }\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetFinishedOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetFinishedOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\nexport async function GetMachineStatus() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetMachinePartsStatuses\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetCancelledOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetCancelledOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetAllOrders() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetAllOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\nexport async function GetAllDealerOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetAllDealerOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch(() => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen bilgileri kontrol edin.</p>,\n        okText: \"Tamam\",\n      });\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetAllOrdersByType(type: string) {\n  const response = await Axios.get(\n    API_ADDRESS + `/api/order/GetAllOrdersByType?type=${type.toLowerCase()}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\nexport async function GetAllTankFromSaruhanli() {\n  const response = await Axios.get(\n    API_ADDRESS + `/api/order/GetAllTankFromSaruhanlı`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetPendingOrders() {\n  const response = await Axios.get(API_ADDRESS + \"/api/task/GetPendingOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetProductionReadyOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/task/GetProductionReadyOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\nexport async function GetApprovalPendingOrders() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetApprovalPendingOrders\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function addApproval(orderId: number) {\n  const response = await Axios.post(\n    `${API_ADDRESS}/api/ProductionTasks/AddApproval?order_id=${orderId}`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\nexport async function dealerConfirmOffer(orderId: number) {\n  const response = await Axios.post(\n    `${API_ADDRESS}/api/ProductionTasks/DealerConfirmOffer?order_id=${orderId}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\nexport async function dealerDenyOffer(orderId: number) {\n  const response = await Axios.post(\n    `${API_ADDRESS}/api/ProductionTasks/DealerDenyOffer?order_id=${orderId}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\nexport async function updateAnOffer(\n  order_id: string,\n  price: number,\n  payment_detail: string\n) {\n  const numberPrice = Number(price);\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/order/SetPaymentDetails`,\n    { order_id, price: numberPrice, payment_detail },\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      console.log(\"res\", res);\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetOrderDetails(serial_number: string) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getOrderById/${serial_number}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetMachineListFromOrderById(orderId: number) {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/order/GetOrderMachineDetailsById/\" + orderId,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetOrderHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getOrderHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetArmHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getArmHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFanHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getFanHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetChassisHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/getChassisHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetGenericTaskHistory(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/task/GetGenericTaskHistory/${machine_id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200 || res.status === 204) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetDeliveryReport() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetDeliveries\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetOrderReport() {\n  const response = await Axios.get(API_ADDRESS + \"/api/order/GetOrders\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      } else return [];\n    })\n    .catch(() => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function GetMovableMachines() {\n  let requestConfig = new GetTaskRequestConfig();\n  requestConfig.bahce = true;\n  requestConfig.depo = true;\n\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/task/GetAllMachinesStatus\",\n    requestConfig,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\ninterface ISwitchMachines {\n  machine1: { serial_number: string; order_id: string };\n  machine2: { serial_number: string; order_id: string };\n  keepMachineDetails: boolean;\n}\n\nexport async function SwitchMachines(machines: ISwitchMachines) {\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/order/SwitchMachines\",\n    machines,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Sipariş başarıyla kaydırıldı.Lütfen sayfayı yenileyin</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n    });\n\n  return response;\n}\n\nexport async function GetAllTankProducerOrders() {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/GetAllTankProducerOrders`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n      return [];\n    })\n    .catch((err) => {\n      return [];\n    });\n\n  return response;\n}\n\nexport async function sendToTankProducer(place: String, id: String) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/order/SendToTankProducerOrders/`,\n    { CurrentPosition: place, Id: id },\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n        return res.data;\n      }\n    })\n    .catch((err) => {\n      console.log(err);\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function sendTo(place: String, id: number, testComment?: String) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/order/MoveTo/${place}/${id}/${testComment}`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoFanTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoFanTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoArmTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoArmTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoChassisTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoChassisTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function UndoSendTo(machine_id: number) {\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/order/UndoMoveTo/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>İşlem başarıyla gerçekleşti..</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetActiveOrders() {\n  let requestConfig = new GetTaskRequestConfig();\n  requestConfig.turbo = true;\n  requestConfig.kollu = true;\n  requestConfig.diger = true;\n  requestConfig.test = true;\n  requestConfig.depo = true;\n  requestConfig.bahce = true;\n\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/task/GetAllMachinesStatus\",\n    requestConfig,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteOrder(order_id: String) {\n  debugger;\n  const response = await Axios.post(\n    `${API_ADDRESS}/api/order/DeleteOrder/`,\n    { Id: order_id },\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Sipariş başarıyla iptal edildi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteSingleMachine(machine_id: string) {\n  debugger;\n  const response = await Axios.delete(\n    `${API_ADDRESS}/api/order/DeleteSingleMachine/${machine_id}`,\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Makine başarıyla silindi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetShortcuts() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Task/GetLayout\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  }).then((res) => {\n    return res.data;\n  });\n\n  return response;\n}\n\nexport async function AddShortcut(items: any, selectedData: string) {\n  const response = await axios\n    .post(\n      API_ADDRESS + `/api/Task/SaveLayoutInfo/`,\n      {\n        layout: items?.length\n          ? [...items, selectedData].join(\",\")\n          : selectedData,\n      },\n      {\n        headers: {\n          Authorization: \"Bearer \" + GetToken(),\n        },\n      }\n    )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Kısayol başarıyla eklendi.</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return res.data.layout;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return \"\";\n    });\n\n  return response;\n}\nexport async function RemoveShortcuts(items: string[], removedItem: string) {\n  const response = await axios\n    .post(\n      API_ADDRESS + `/api/Task/SaveLayoutInfo/`,\n      { layout: items.filter((data) => data !== removedItem).join(\",\") },\n      {\n        headers: {\n          Authorization: \"Bearer \" + GetToken(),\n        },\n      }\n    )\n    .then((res) => {\n      if (res.status === 200) {\n        Modal.success({\n          title: \"Başarılı\",\n          content: <p>Kısayol başarıyla kaldırıldı.</p>,\n          okText: \"Tamam\",\n        });\n      }\n      return res.data.layout;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: <p>Bir hata oluştu, lütfen tekrar deneyin.</p>,\n        okText: \"Tamam\",\n      });\n      return \"\";\n    });\n\n  return response;\n}\n\nexport async function sendToFan(\n  place: String,\n  id: number,\n  getHistory?: () => void\n) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/productiontasks/MoveToFan/${place}/${id}/`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  ).then((res) => {\n    if (res.status === 200 || res.status === 204) {\n      if (getHistory) {\n        getHistory();\n      }\n      return res.data;\n    }\n  });\n\n  return response;\n}\nexport async function sendToChassis(\n  place: String,\n  id: number,\n  getHistory?: () => void\n) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/productiontasks/MoveToChassis/${place}/${id}/`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  ).then((res) => {\n    if (res.status === 200 || res.status === 204) {\n      if (getHistory) {\n        getHistory();\n      }\n    }\n  });\n  return response;\n}\n\nexport async function sendToArm(\n  place: String,\n  id: number,\n  getHistory?: () => void\n) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/productiontasks/MoveToArm/${place}/${id}/`,\n    {},\n    { headers: { Authorization: \"Bearer: \" + GetToken() } }\n  ).then((res) => {\n    if (res.status === 200 || res.status === 204) {\n      if (getHistory) {\n        getHistory();\n      }\n      return res.data;\n    }\n  });\n\n  return response;\n}\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport function addConfig(key: string, values: Object) {\n  return Axios.post(`${API_ADDRESS}/api/config/${key}`, values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      Modal.success({\n        title: \"İşlem Başarili.\",\n        content:\n          \"Yeni özellik başariyla eklendi, görmek için sayfayi yenileyin..\",\n      });\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir Hata Oluştu.\",\n        content: \"Lütfen tekrar deneyin.\",\n      });\n      return false;\n    });\n}\nexport function deleteConfig(values: Object) {\n  console.log(\"values\", values);\n  return Axios.put(`${API_ADDRESS}/api/config/`, values, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      Modal.success({\n        title: \"İşlem Başarili.\",\n        content: \"Özellik başariyla silindi, görmek için sayfayi yenileyin..\",\n      });\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir Hata Oluştu.\",\n        content: \"Lütfen tekrar deneyin.\",\n      });\n      return false;\n    });\n}\n\nexport function getCustomerList() {\n  return Axios.get(`${API_ADDRESS}/api/config/GetCustomerList`, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return [];\n    });\n}\n\nexport function getOrderNumber() {\n  return Axios.get(`${API_ADDRESS}/api/Task/GetOrderNumber`, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return [];\n    });\n}\n","/* eslint-disable eqeqeq */\nimport {\n  AutoComplete,\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  Radio,\n  Select,\n  Layout,\n  Spin,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport { Body } from \"./MainScreen\";\nimport moment from \"moment\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { padLeft } from \"../helper\";\nimport { TakeOrder } from \"../services/OrderService\";\nimport { getCustomerList, getOrderNumber } from \"../services/ConfigService\";\nimport { UndoOutlined } from \"@ant-design/icons\";\nconst { Option, OptGroup } = Select;\nconst QRCode = require(\"qrcode.react\");\nconst { Content } = Layout;\n\nfunction CreateOrderScreen() {\n  const configFile: IAgrotekConfig = JSON.parse(\n    localStorage.getItem(\"config\") ?? \"{}\"\n  );\n  const [isFetching, setIsFetching] = useState(false);\n  const [orderNoCounter, setOrderNoCounter] = useState(0);\n  const [qrCodeValue, setQrCodeValue] = useState(\"\");\n  const [customerList, setCustomerList] = useState([] as any);\n  const [productionUnit, setProductionUnit] = useState(\"turbo\");\n  const [serialState, setSerialState] = useState({\n    brand: \"\",\n    type: \"\",\n    cooler_type: \"\",\n    arm_type: \"\",\n    tank_size: 0,\n    pump: \"\",\n    order_no: \"\",\n    order_amount: 0,\n    year: \"\",\n  });\n\n  let serialCode = SerialCodeGenerator();\n  const [form] = Form.useForm();\n\n  const createOrderNo = () => {\n    setIsFetching(true);\n    getOrderNumber().then((res) => {\n      setOrderNoCounter(15);\n      setSerialState({\n        ...serialState,\n        order_no: String(res),\n      });\n      setIsFetching(false);\n    });\n  };\n\n  useEffect(() => {\n    if (orderNoCounter > 0) {\n      setTimeout(() => {\n        setOrderNoCounter(orderNoCounter - 1);\n      }, 1000);\n    }\n  }, [orderNoCounter]);\n\n  useEffect(() => {\n    createOrderNo();\n    getCustomerList().then((res) => {\n      setCustomerList(res);\n    });\n  }, []);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Content>\n        <Body\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            flexWrap: \"wrap-reverse\",\n            // overflow: \"auto\",\n            // minHeight: \"100vh\",\n          }}\n        >\n          <Form\n            form={form}\n            onFieldsChange={() => {\n              let product =\n                form.getFieldValue(\"brand\") == \"turktraktor\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"model\")\n                  : form.getFieldValue(\"production_unit\") == \"turbo\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"tank_size\") +\n                    \"LT \" +\n                    form.getFieldValue(\"cooler_type\") +\n                    form.getFieldValue(\"fan_radius\") +\n                    \"cm \" +\n                    form.getFieldValue(\"fan_type\")\n                  : form.getFieldValue(\"production_unit\") == \"kollu\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"tank_size\") +\n                    \"LT \" +\n                    form.getFieldValue(\"arm_type\") +\n                    \" \" +\n                    form.getFieldValue(\"arm_length\")\n                  : form.getFieldValue(\"production_unit\") == \"diger\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"type\")\n                  : \"\";\n              setQrCodeValue(serialCode + \",\" + product.toUpperCase());\n              if (\n                form.getFieldValue(\"model\") &&\n                form.getFieldValue(\"brand\") == \"turktraktor\"\n              ) {\n                form.setFieldsValue({\n                  caldron_color: form.getFieldValue(\"model\"),\n                });\n              }\n            }}\n            onFinish={async (values) => {\n              setIsFetching(true);\n              setOrderNoCounter(0);\n              values.order_no = serialState.order_no;\n              const result = await TakeOrder(values, serialCode);\n              if (result === true) {\n                printQRCode(values.order_amount);\n                form.resetFields();\n              }\n              setIsFetching(false);\n            }}\n            labelCol={{ span: 5 }}\n            wrapperCol={{ span: 24 }}\n            style={{ maxWidth: \"calc(100% - 168px)\", minWidth: \"450px\" }}\n            requiredMark={false}\n          >\n            <Form.Item\n              name=\"date\"\n              initialValue={moment()}\n              label=\"Tarih\"\n              required\n            >\n              <DatePicker disabled />\n            </Form.Item>\n\n            <Form.Item\n              name=\"customer\"\n              label=\"Müşteri Adı\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 250, message: \"Maksimum sınır aşıldı.\" },\n              ]}\n              required\n            >\n              <AutoComplete\n                style={{ width: 200 }}\n                options={customerList}\n                placeholder=\"aramak için yazın.\"\n                filterOption={(inputValue, option) =>\n                  option!.value\n                    .toUpperCase()\n                    .indexOf(inputValue.toUpperCase()) !== -1\n                }\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"address\"\n              label=\"Adresi\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 250, message: \"Maksimum sınır aşıldı.\" },\n              ]}\n              required\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item\n              name=\"phone_number\"\n              label=\"Telefon No\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                {\n                  max: 10,\n                  min: 10,\n                  message: \"Telefon numarası 10 haneden oluşmalıdır.\",\n                },\n              ]}\n              required\n            >\n              <Input addonBefore=\"+90\" style={{ width: \"100%\" }} />\n            </Form.Item>\n            <Form.Item\n              name=\"production_unit\"\n              label=\"Üretim Birimi\"\n              initialValue=\"turbo\"\n              required\n            >\n              <Radio.Group\n                onChange={(e) => {\n                  setProductionUnit(e.target.value);\n                }}\n              >\n                <Radio value=\"turbo\">Turbo</Radio>\n                <Radio value=\"kollu\">Kollu</Radio>\n                <Radio value=\"diger\">Diğer</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item name=\"brand\" label=\"Marka\" required>\n              <Select\n                onSelect={(type) => {\n                  const brand = configFile.brand.filter(\n                    (brand) => brand.type == type\n                  );\n                  setSerialState({ ...serialState, brand: brand[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.brand.map((brand) => {\n                    return (\n                      <Option key={brand.type} value={brand.type}>\n                        {brand.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            {productionUnit == \"turbo\" && serialState.brand == \"T\" ? (\n              <Form.Item name=\"model\" label=\"Model\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.turktraktormodel.map((brand) => {\n                      return (\n                        <Option key={brand.text} value={brand.text}>\n                          {brand.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n\n            <Form.Item name=\"type\" label=\"Tip\" required>\n              {productionUnit === \"turbo\" || productionUnit === \"kollu\" ? (\n                <Select\n                  onSelect={(btype) => {\n                    const type = configFile.type.filter(\n                      (type) => type.type == btype\n                    );\n                    setSerialState({ ...serialState, type: type[0].shortend });\n                  }}\n                >\n                  {(function myFunction() {\n                    return configFile.type.map((type) => {\n                      return (\n                        <Option key={type.type} value={type.type}>\n                          {type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              ) : (\n                <Select\n                  onSelect={(btype) => {\n                    const type = configFile.machine_type.filter(\n                      (machine_type) => machine_type.type == btype\n                    );\n                    setSerialState({ ...serialState, type: type[0].shortend });\n                  }}\n                >\n                  {(function myFunction() {\n                    return configFile.machine_type.map((machine_type) => {\n                      return (\n                        <Option\n                          key={machine_type.type}\n                          value={machine_type.type}\n                        >\n                          {machine_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              )}\n            </Form.Item>\n            {productionUnit == \"kollu\" || productionUnit == \"turbo\" ? (\n              <>\n                <Form.Item\n                  name=\"caldron_color\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 32, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Kazan Rengi\"\n                  required\n                >\n                  <Input />\n                </Form.Item>\n                <Form.Item name=\"caldron_stock\" label=\"Kazan Tedarik\">\n                  <Radio.Group>\n                    <Radio value=\"onstock\">Stoktan</Radio>\n                    <Radio value=\"new\">Kazan Üreticiden</Radio>\n                  </Radio.Group>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"caldron_material\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Materyal\"\n                  required\n                >\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.caldron_material.map(\n                        (caldron_material) => {\n                          return (\n                            <Option\n                              key={caldron_material.type}\n                              value={caldron_material.type}\n                            >\n                              {caldron_material.text}\n                            </Option>\n                          );\n                        }\n                      );\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"tank_size\" label=\"Depo Hacmi\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const tank_size = configFile.tank_size.filter(\n                        (tank_size) => tank_size.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        tank_size: parseInt(tank_size[0].shortend),\n                      });\n                    }}\n                  >\n                    <OptGroup label=\"Litre\">\n                      {(function myFunction() {\n                        return configFile.tank_size.map((tank_size) => {\n                          return (\n                            <Option key={tank_size.type} value={tank_size.type}>\n                              {tank_size.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </OptGroup>\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"tow_type\" label=\"Çeki Tipi\" required>\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.tow_type.map((tow_type) => {\n                        return (\n                          <Option key={tow_type.type} value={tow_type.type}>\n                            {tow_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"pump\" label=\"Pompa\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const pump = configFile.pump.filter(\n                        (pump) => pump.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        pump: pump[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.pump.map((pump) => {\n                        return (\n                          <Option key={pump.type} value={pump.type}>\n                            {pump.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"commander\" label=\"Kumanda\" required>\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.commander.map((commander) => {\n                        return (\n                          <Option key={commander.type} value={commander.type}>\n                            {commander.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"meme_type\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Meme Tipi\"\n                  required\n                >\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.meme_type.map((meme_type) => {\n                        return (\n                          <Option key={meme_type.type} value={meme_type.type}>\n                            {meme_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n              </>\n            ) : null}\n            {productionUnit == \"kollu\" ? (\n              <>\n                <Form.Item name=\"arm_type\" label=\"Kol Tipi\" required>\n                  <Select\n                    onSelect={(btype) => {\n                      const arm_type = configFile.arm_type.filter(\n                        (type) => type.type == btype\n                      );\n                      setSerialState({\n                        ...serialState,\n                        arm_type: arm_type[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.arm_type.map((arm_type) => {\n                        return (\n                          <Option key={arm_type.type} value={arm_type.type}>\n                            {arm_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"meme_distance\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Meme Aralığı\"\n                  required\n                >\n                  <Input maxLength={19} />\n                </Form.Item>\n                <Form.Item\n                  name=\"arm_length\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 30, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Kol Uzunluğu\"\n                  required\n                >\n                  <Input maxLength={20} />\n                </Form.Item>\n              </>\n            ) : null}\n            {productionUnit == \"turbo\" ? (\n              <>\n                <Form.Item name=\"cooler_type\" label=\"Fan Tipi\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const cooler_type = configFile.cooler_type.filter(\n                        (cooler_type) => cooler_type.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        cooler_type: cooler_type[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.cooler_type.map((cooler_type) => {\n                        return (\n                          <Option\n                            key={cooler_type.type}\n                            value={cooler_type.type}\n                          >\n                            {cooler_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"caldron_type\" label=\"Kazan Tipi\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.caldron_type.map((caldron_type) => {\n                          return (\n                            <Option\n                              key={caldron_type.type}\n                              value={caldron_type.type}\n                            >\n                              {caldron_type.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"fan_radius\" label=\"Pervane Çapı\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.fan_radius.map((fan_radius) => {\n                          return (\n                            <Option\n                              key={fan_radius.type}\n                              value={fan_radius.type}\n                            >\n                              {fan_radius.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"fan_type\" label=\"Pervane Tipi\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.fan_type.map((fan_type) => {\n                          return (\n                            <Option key={fan_type.type} value={fan_type.type}>\n                              {fan_type.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n              </>\n            ) : null}\n\n            <Form.Item name=\"order_no\" label=\"Sipariş No\">\n              <Input\n                disabled\n                value={serialState.order_no}\n                style={{ width: \"324px\" }}\n                maxLength={6}\n                onChange={(e) => {\n                  setSerialState({\n                    ...serialState,\n                    order_no: padLeft(e.target.value, \"0\", 6),\n                  });\n                }}\n              />\n              <Button\n                disabled={isFetching || orderNoCounter}\n                icon={<Spin indicator={<UndoOutlined spin={isFetching} />} />}\n                onClick={createOrderNo}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"order_amount\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 5, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Sipariş Adedi\"\n              required\n            >\n              <Input\n                max={99}\n                min={1}\n                type=\"number\"\n                onChange={(e) => {\n                  setSerialState({\n                    ...serialState,\n                    order_amount: parseInt(e.target.value),\n                  });\n                }}\n              />\n            </Form.Item>\n            <Form.Item name=\"year\" label=\"Yıl\" initialValue={moment()} required>\n              <DatePicker disabled picker=\"year\" />\n            </Form.Item>\n\n            <Form.Item name=\"chassis_color\" label=\"Şase Rengi\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.chassis_color.map((chassis_color) => {\n                    return (\n                      <Option\n                        key={chassis_color.type}\n                        value={chassis_color.type}\n                      >\n                        {chassis_color.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"alt_features\"\n              rules={[{ max: 250, message: \"Maksimum sınıra ulaşıldı.\" }]}\n              label=\"Ek Özellikler\"\n              required\n            >\n              <Input.TextArea maxLength={250} />\n            </Form.Item>\n            <Form.Item name=\"order_tooker\" label=\"Sipariş Alan\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.order_tooker.map((order_tooker) => {\n                    return (\n                      <Option key={order_tooker.type} value={order_tooker.type}>\n                        {order_tooker.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"serial_number\" label=\"Seri No\">\n              <Input disabled placeholder={serialCode} />\n            </Form.Item>\n\n            <Form.Item\n              name=\"payment_detail\"\n              rules={[{ max: 250, message: \"Maksimum sınıra ulaşıldı.\" }]}\n              label=\"Ödeme Detay\"\n              required\n            >\n              <Input.TextArea maxLength={250} />\n            </Form.Item>\n\n            <Form.Item required name=\"price\" label=\"Fiyat\">\n              <Input type=\"number\" />\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ span: 24 }}>\n              <Button\n                loading={isFetching}\n                disabled={!orderNoCounter}\n                size=\"large\"\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Siparişi Oluştur {orderNoCounter || \"(Sipariş No'yu Yenileyin)\"}\n              </Button>\n            </Form.Item>\n          </Form>\n          <div style={{ display: \"block\", width: \"min-content\" }}>\n            <QRCode value={qrCodeValue} renderAs=\"svg\" size={178} />\n            {/*<Button type=\"primary\" icon={<PrinterOutlined />} disabled={serialCode.length < 10} onClick={printQRCode} block>\n          Yazdır\n          </Button>*/}\n          </div>\n        </Body>\n      </Content>\n    </Layout>\n  );\n\n  function SerialCodeGenerator(): string {\n    switch (productionUnit) {\n      case \"kollu\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.arm_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"turbo\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.cooler_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"diger\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      default:\n        return \"\";\n    }\n  }\n\n  function printQRCode(amount: number) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n    let reversed = reverseString(serialCode);\n    let data = splitTwoPartsBarcode(reversed);\n    let qrCode = qrCodeValue.split(\",\");\n\n    for (let i = amount; i > 0; i--) {\n      qrCode[0] = data[0] + \"0\" + i;\n\n      let svg = renderToString(\n        <div style={{ width: \"50mm\", height: \"64mm\" }}>\n          <QRCode\n            value={qrCode[0] + \",\" + qrCode[1]}\n            style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n            renderAs=\"svg\"\n          />\n          <p style={{ margin: 10 }}>{qrCode[0]}</p>\n        </div>\n      );\n      //<QRCode value= style={{ width: \"54mm\", height: \"70mm\" }} renderAs=\"svg\" />);\n\n      printWindow?.document.write(String(svg));\n    }\n    if (printWindow) {\n      printWindow.document.body.style.margin = \"0\";\n      printWindow.document.close();\n      printWindow.print();\n    }\n  }\n}\n\nexport function splitTwoPartsBarcode(str: string) {\n  var index = str.indexOf(\"0\"); // Gets the first index where a space occours\n  var amount = reverseString(str.substr(0, index)); // Gets the first part\n  var serial = reverseString(str.substr(index + 1));\n\n  return [serial, amount];\n}\n\nexport function reverseString(str: string) {\n  var newString = \"\";\n  for (var i = str.length - 1; i >= 0; i--) {\n    newString += str[i];\n  }\n  return newString;\n}\n\nexport default CreateOrderScreen;\n","import { Spin, Timeline, Popconfirm, Button, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { RootState } from \"../redux/reducers\";\nimport { GetArmHistory, GetChassisHistory, GetFanHistory, GetOrderHistory, UndoSendTo } from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  machine_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n}\n\nenum PartTypes {\n  arm,\n  fan,\n  chassis,\n}\n\nfunction MachinePartsHistory(props: { machine_id: number; type: PartTypes }) {\n  const { machine_id, type } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    switch (type) {\n      case PartTypes.arm:\n        GetArmHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.fan:\n        GetFanHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n      case PartTypes.chassis:\n        GetChassisHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n          }\n        });\n        break;\n    }\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`Gönderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return data ? (\n    <Card style={{ marginBottom: 5 }} title={type == PartTypes.arm ? \"Kol İşlem Geçmişi\" : type == PartTypes.chassis ? \"Şase İşlem Geçmişi\" : \"Fan İşlem Geçmişi\"}>\n      <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n        {renderTimeline()}\n      </Timeline>\n    </Card>\n  ) : null;\n}\n\nfunction OrderHistory(props: Props) {\n  const { isVisible, setIsVisible, machine_id, serial_number } = props;\n  const [data, setData] = useState((null as unknown) as []);\n  const [lastLocation, setLastLocation] = useState(null);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    GetOrderHistory(machine_id).then((res) => {\n      if (res) {\n        setData(res);\n        setLastLocation(res?.reduce((a, b) => (a.row_created_date > b.row_created_date ? a : b)));\n      }\n    });\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`Gönderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return (\n    <Modal title={serial_number + \" Numaralı Makinenin İşlem Geçmişi\"} visible={isVisible} footer={null} onCancel={() => setIsVisible(false)}>\n      <div style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {data ? (\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n            <Card title=\"Makine İşlem Geçmişi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.chassis} />\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.fan} />\n            <MachinePartsHistory machine_id={machine_id} type={PartTypes.arm} />\n\n            {user.role === \"admin\" && lastLocation?.location !== \"onaybekliyor\" && lastLocation?.location !== \"iptal\" ? (\n              <Popconfirm\n                title=\"Bu siparişi bir önceki konuma göndermek istediğinizden emin misiniz?\"\n                onConfirm={() => {\n                  UndoSendTo(machine_id).then((res) => {\n                    if (res) {\n                      GetHistory();\n                    }\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <Button style={{ marginBottom: 10 }} type=\"primary\">\n                  Bir Önceki Konuma Geri Gönder\n                </Button>\n              </Popconfirm>\n            ) : null}\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default OrderHistory;\n","export default __webpack_public_path__ + \"static/media/kase.64df1020.jpg\";","import { Table } from \"antd\";\nimport Kase from \"../../kase.jpg\";\nimport { StyleProvider } from \"@ant-design/cssinjs\";\n\nconst ProformaInvoice = ({ item }) => {\n  const item1 = {\n    row_created_date: null,\n    pending_amount: 0,\n    order_amount: 20,\n    row_creator_id: 0,\n    id: 176,\n    tank_size: 1600,\n    date: \"22 Şubat 2021, 14:49\",\n    model: null,\n    customer: \"TÜRK TRAKTÖR\",\n    phone_number: \"0000000000\",\n    address: \"ANKARA\",\n    order_no: \"000005\",\n    order_tooker: \"h.z\",\n    status: \"active\",\n    type: \"cekilir\",\n    serial_number: \"TCTT1616000000050201\",\n    cooler_type: \"tersturbo\",\n    pump: \"ar1604\",\n    year: \"21\",\n    tow_type: \"pehlivanceki\",\n    chassis_color: \"mavi\",\n    caldron_color: \"Mavi Beyaz\",\n    caldron_type: \"temizsusuz\",\n    fan_radius: \"82\",\n    fan_type: \"aluminyum\",\n    commander: \"m170\",\n    alt_features: null,\n    brand: \"turktraktor\",\n    production_unit: \"turbo\",\n    arm_length: null,\n    arm_type: null,\n    meme_distance: null,\n    caldron_material: \"\",\n    caldron_stock: null,\n    meme_type: null,\n    location: null,\n    machine_id: 0,\n    last_location_date: null,\n    description: \"TURKTRAKTOR 1600 R\",\n    order_date: null,\n    deliver_date: null,\n    producted_date: null,\n    confirm_date: null,\n    laststatus: \"depo\",\n    planned_date: \"2000-01-01T00:00:00\",\n    pump_serial: null,\n  };\n\n  const currentDate = new Date();\n\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth() + 1;\n  const day = currentDate.getDate();\n\n  const formattedDate = `${day}/${month}/${year}`;\n\n  const columns = [\n    {\n      title: \"ÜRÜN CİNSİ\",\n      dataIndex: \"name\",\n      width: \"12cm\",\n    },\n    {\n      title: \"BİRİM\",\n      dataIndex: \"unit\",\n    },\n    {\n      title: \"ADET\",\n      dataIndex: \"quantity\",\n    },\n    {\n      title: \"BİRİM FİYAT\",\n      dataIndex: \"price\",\n      width: \"3cm\",\n    },\n    {\n      title: \"TUTAR\",\n      dataIndex: \"totalPrice\",\n      width: \"4cm\",\n    },\n  ];\n  const data = [\n    {\n      key: item?.id ?? \"-\",\n      name: item?.description ?? \"-\",\n      quantity: item?.order_amount ?? \"-\",\n      unit: \"ADET\",\n      price: item.price ? (item?.price / 1.1).toFixed(3) : \"-\",\n      totalPrice: item?.price\n        ? ((item?.price * item.order_amount) / 1.1).toFixed(3)\n        : \"-\",\n    },\n  ];\n\n  return (\n    <StyleProvider hashPriority=\"high\">\n      <div\n        style={{\n          padding: \"1cm\",\n          width: \"21cm\",\n          height: \"29.7cm\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <header\n          style={{ display: \"flex\", alignItems: \"center\", height: \"100px\" }}\n        >\n          <div style={{ flex: 1 }}>\n            <img width=\"70\" height=\"70\" src=\"agrotek.png\" alt=\"logo\" />\n          </div>\n          <div\n            style={{\n              flex: 1,\n              textAlign: \"justify\",\n              fontWeight: \"bold\",\n            }}\n          >\n            AGROTEK İLAÇLAMA MAKİNALARI VE TARIM TEKNOLOJİLERİ İTHALAT İHRACAT\n            ZIRAİ ÜRÜNLER SANAYİ TİCARET LTD. ŞTİ.\n          </div>\n        </header>\n\n        <span style={{ alignSelf: \"end\" }}>Tarih: {formattedDate}</span>\n        <span\n          style={{\n            alignSelf: \"center\",\n            marginTop: \"0.5cm\",\n            marginBottom: \"10px\",\n          }}\n        >\n          ZİRAAT BANKASI\n        </span>\n        <span style={{ alignSelf: \"center\", marginBottom: \"6px\" }}>\n          BANKA ŞUBESİ\n        </span>\n        <span>\n          Sn. {item?.customer} aşağıda açıklamaları yazılı olan ilaçlama\n          makinesini firmamızdan talep etmektedir.\n        </span>\n        <span>\n          Sn. {item?.customer}'ün bu talebinin gerçekleştirilmesi için gerekli\n          işlemlerin yapılmasını arz ederiz.\n        </span>\n        <span style={{ marginBottom: \"10px\" }}>Saygılarımızla</span>\n        <span\n          style={{\n            alignSelf: \"end\",\n            marginRight: \"1cm\",\n            marginBottom: \"0.5cm\",\n          }}\n        >\n          Agrotek İlaçlama Mak. LTD. ŞTİ.\n        </span>\n        <span\n          style={{\n            display: \"flex\",\n            alignSelf: \"end\",\n            height: \"100px\",\n            marginBottom: \"10px\",\n          }}\n        >\n          <img\n            style={{ height: \"2.28cm\", width: \"7.57cm\" }}\n            src={Kase}\n            alt=\"logo\"\n          />\n        </span>\n        <span\n          style={{\n            fontWeight: \"bolder\",\n            alignSelf: \"center\",\n            marginBottom: \"2rem\",\n          }}\n        >\n          PROFORMA FATURA\n        </span>\n\n        <div\n          style={{\n            width: \"100%\",\n            border: \"1px solid black\",\n            display: \"flex\",\n            boxSizing: \"border-box\",\n          }}\n        >\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n              flexDirection: \"column\",\n            }}\n          >\n            <span>Sayın :{item.customer}</span>\n            <span>Adres : {item.address}</span>\n            <span></span>\n            <span></span>\n            <span>Vergi No / tc no : -</span>\n            <span>Telefon : {item.phone_number}</span>\n          </div>\n\n          <div\n            style={{\n              flex: 1,\n              padding: \"5px\",\n              display: \"flex\",\n              flexDirection: \"column\",\n              borderLeft: \"1px solid black\",\n            }}\n          >\n            <span>\n              AGROTEK İLAÇLAMA MAKİNALARI VE TARIM TEKN.İTH.İHR.ZİRAİ ÜRÜNLER\n              SAN.TİC.LTD.ŞTİ.\n            </span>\n            <span>HACIRAHMANLI MH. İSTİKLAL CD.(KÜME EVLER) NO:20</span>\n            <span>SARUHANLI / MANİSA</span>\n            <span>ZİRAAT BANKASI / SARUHANLI ŞB. / ŞB.KODU: 622</span>\n            <span>IBAN: TR84 001 0006 2253 4366 4350 01</span>\n          </div>\n        </div>\n\n        <div\n          style={{\n            display: \"flex\",\n            border: \"1px solid black\",\n            marginTop: \"1rem\",\n          }}\n        >\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                flexDirection: \"column\",\n                borderRight: \"1px solid black\",\n              }}\n            >\n              <span\n                style={{\n                  textAlign: \"center\",\n                  borderBottom: \"1px solid black\",\n                  padding: \"5px\",\n                }}\n              >\n                TARİH\n              </span>\n              <span\n                style={{\n                  textAlign: \"center\",\n                  padding: \"13px\",\n                }}\n              >\n                {formattedDate}\n              </span>\n            </div>\n            <div\n              style={{\n                flex: 1,\n                flexDirection: \"column\",\n                display: \"flex\",\n                borderRight: \"1px solid black\",\n              }}\n            >\n              <span\n                style={{\n                  textAlign: \"center\",\n                  borderBottom: \"1px solid black\",\n                  padding: \"5px\",\n                }}\n              >\n                PROFORMA FATURA NUMARASI\n              </span>\n              <span\n                style={{\n                  textAlign: \"center\",\n                  padding: \"13px\",\n                }}\n              >\n                {item?.order_no}\n              </span>\n            </div>\n          </div>\n          <div\n            style={{\n              flex: 1,\n              display: \"flex\",\n            }}\n          >\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                flexDirection: \"column\",\n              }}\n            >\n              <span\n                style={{\n                  textAlign: \"center\",\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                  padding: \"5px\",\n                }}\n              >\n                RUHSAT TARİH / NO\n              </span>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  textAlign: \"center\",\n                  borderRight: \"1px solid black\",\n                  height: \"100%\",\n                }}\n              >\n                <span style={{ flex: 1 }}>4/20/2022</span>\n                <div\n                  style={{\n                    width: \"1px\",\n                    height: \"100%\",\n                    backgroundColor: \"black\",\n                  }}\n                />\n                <span style={{ flex: 1 }}>3058</span>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flex: 1,\n                flexDirection: \"column\",\n              }}\n            >\n              <span\n                style={{\n                  textAlign: \"center\",\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                  padding: \"5px\",\n                }}\n              >\n                DENEY RAPORU NO\n              </span>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  padding: \"5px\",\n                  textAlign: \"center\",\n                  borderRight: \"1px solid black\",\n                  height: \"30px\",\n                }}\n              >\n                <span style={{ flex: 1 }}>2022/11499-TMM.036</span>\n              </div>\n            </div>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"column\",\n              }}\n            >\n              <span\n                style={{\n                  textAlign: \"center\",\n                  borderBottom: \"1px solid black\",\n                  padding: \"5px\",\n                }}\n              >\n                SAYFA\n              </span>\n              <div\n                style={{\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  padding: \"5px\",\n                  textAlign: \"center\",\n                  height: \"30px\",\n                }}\n              >\n                <span style={{ flex: 1 }}>1/1</span>\n              </div>\n            </div>\n          </div>\n        </div>\n\n        <Table\n          style={{ marginTop: \"1rem\" }}\n          columns={columns}\n          dataSource={data}\n          bordered\n          footer={() => (\n            <div\n              style={{\n                display: \"flex\",\n                justifyContent: \"flex-end\",\n                fontWeight: \"bold\",\n              }}\n            >\n              <div style={{ display: \"flex\", flexDirection: \"column\" }}>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    gap: \"12rem\",\n                    marginTop: \"0.5cm\",\n                    borderBottom: \"1px solid black\",\n                  }}\n                >\n                  <span>%10 KDV</span>\n                  <span>\n                    {item.price\n                      ? ((item.price * item.order_amount) / 11).toFixed(3)\n                      : \"-\"}{\" \"}\n                    TL\n                  </span>\n                </div>\n                <div\n                  style={{\n                    display: \"flex\",\n                    justifyContent: \"space-between\",\n                    gap: \"12rem\",\n                    borderBottom: \"1px solid black\",\n                  }}\n                >\n                  <span>G.TOPLAM</span>\n                  <span>\n                    {item.price\n                      ? (item.price * item.order_amount).toFixed(3)\n                      : \"-\"}{\" \"}\n                    TL\n                  </span>\n                </div>\n              </div>\n            </div>\n          )}\n          pagination={false}\n        />\n\n        <span\n          style={{\n            textDecoration: \"underline\",\n            marginTop: \"1rem\",\n            fontSize: \"14px\",\n          }}\n        >\n          NOT: İLAÇLAMA MAKİNALARI KORUMA KONTROL GENEL MD.’NE BAĞLI OLARAK\n          RUHSATLI VE DENEY RAPORLU OLDUĞUNDAN AYRICA ZİRAİ KREDİLENDİRME\n          BELGESİ İSTENMEMEKTEDİR.\n        </span>\n        <span\n          style={{\n            textDecoration: \"underline\",\n            marginTop: \"1rem\",\n            fontWeight: \"bold\",\n            fontSize: \"14px\",\n          }}\n        >\n          **** KREDİNİN ONAYLANMASI HALİNDE PROFORMA FATURADA GÖRÜNEN TÜM\n          BEDELİN HESABIMIZA TRANSFERİNİ RİCA EDERİZ.\n        </span>\n        <span\n          style={{\n            textDecoration: \"underline\",\n            marginTop: \"1rem\",\n            fontWeight: \"bold\",\n          }}\n        >\n          **** PROFORMA FATURA HAZIRLANMA TARİHİNDEN İTİBAREN 14 GÜN GEÇERLİDİR.\n        </span>\n      </div>\n    </StyleProvider>\n  );\n};\n\nexport default ProformaInvoice;\n","import { Capitalize } from \"../../helper\";\n\nconst FanInvoice = ({ item }) => {\n  const configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  const currentDate = new Date();\n\n  const year = currentDate.getFullYear();\n  const month = currentDate.getMonth() + 1;\n  const day = currentDate.getDate();\n\n  const formattedDate = `${day}/${month}/${year}`;\n\n  const data = {\n    Ürün: item.description,\n    Marka: configFile.brand.filter((b) => b.type === item.brand)[0]?.text,\n    Tip: configFile.type.filter((b) => b.type === item.type)[0]?.text\n      ? configFile.type.filter((b) => b.type === item.type)[0]?.text\n      : configFile.machine_type.filter((b) => b.type === item.type)[0]?.text,\n\n    ...(item.cooler_type && {\n      \"Fan Tipi\": configFile.cooler_type.filter(\n        (b) => b.type === item.cooler_type\n      )[0]?.text,\n    }),\n\n    ...(item.tank_size && {\n      \"Kazan Boyutu\": item.tank_size + \" LT\",\n    }),\n\n    ...(item.pump && {\n      Pompa: configFile.pump.filter((b) => b.type === item.pump)[0]?.text,\n    }),\n\n    ...(item.tank_size && {\n      \"Kazan Boyutu\": item.tank_size + \" LT\",\n    }),\n\n    ...(item.meme_type && {\n      \"Meme Tipi\": configFile.meme_type.filter(\n        (b) => b.type === item.meme_type\n      )[0]?.text,\n    }),\n\n    ...(item.meme_distance && {\n      \"Meme Aralığı\": item.meme_distance,\n    }),\n\n    ...(item.tow_type && {\n      \"Çeki Tipi\": configFile.tow_type.filter(\n        (b) => b.type === item.tow_type\n      )[0]?.text,\n    }),\n\n    ...(item.arm_type && {\n      \"Kol Tipi\": configFile.arm_type.filter((b) => b.type === item.arm_type)[0]\n        ?.text,\n    }),\n\n    ...(item.arm_length && {\n      \"Kol Uzunluğu\": item.arm_length,\n    }),\n\n    \"Şase Rengi\": configFile.chassis_color.filter(\n      (b) => b.type === item.chassis_color\n    )[0]?.text,\n    \"Kazan Rengi\": Capitalize(item.caldron_color),\n    \"Kazan Tipi\": configFile.caldron_type.filter(\n      (b) => b.type === item.caldron_type\n    )[0]?.text,\n    Kumanda: configFile.commander.filter((b) => b.type === item.commander)[0]\n      ?.text,\n    \"Ek Özellikler\": item.alt_features,\n  };\n\n  return (\n    <div\n      style={{\n        width: \"21cm\",\n        height: \"29.7cm\",\n      }}\n    >\n      <div style={{ border: \"1px solid black\", marginRight: \"4px\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            borderBottom: \"1px solid black\",\n            gap: \"0.5cm\",\n            padding: \"0.3cm\",\n            justifyContent: \"space-evenly\",\n            alignItems: \"center\",\n          }}\n        >\n          <img width=\"40\" height=\"40\" src=\"agrotek.png\" alt=\"logo\" />\n          <div style={{ display: \"flex\", gap: \"0.5cm\", alignItems: \"center\" }}>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <span>ÇİFTÇİ</span>\n              <div\n                style={{\n                  border: \"1px solid orange\",\n                  height: \"15px\",\n                  width: \"30px\",\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <span>BAYİ</span>\n              <div\n                style={{\n                  border: \"1px solid orange\",\n                  height: \"15px\",\n                  width: \"30px\",\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <span>KURUMSAL</span>\n              <div\n                style={{\n                  border: \"1px solid orange\",\n                  height: \"15px\",\n                  width: \"30px\",\n                }}\n              />\n            </div>\n          </div>\n          <span>SÖZLEŞME TARİHİ: {formattedDate} </span>\n          <span>SERİ NO: {item?.serial_number}</span>\n          <span>\n            PLASİYER: <br />\n          </span>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n            }}\n          >\n            <span style={{ textAlign: \"center\" }}>\n              MÜŞTERİNİN AD-SOYAD/ÜNVANI:\n            </span>\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                height: \"32px\",\n              }}\n            >\n              MÜŞTERİNİN ADRESİ / TEL NO:\n            </span>\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                height: \"32px\",\n              }}\n            >\n              MAKİNE ADI:\n            </span>\n\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                height: \"32px\",\n              }}\n            >\n              SATIŞ ŞEKLİ:\n            </span>\n\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                borderBottom: \"1px solid black\",\n              }}\n            >\n              TAHSİLAT VADESİ:\n            </span>\n            <br />\n            <br />\n          </div>\n          <div\n            style={{ backgroundColor: \"black\", width: \"1px\", height: \"166px\" }}\n          />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 3,\n            }}\n          >\n            <span style={{ paddingLeft: \"20px\" }}>{item?.customer}</span>\n            <span\n              style={{\n                paddingLeft: \"20px\",\n                height: \"32px\",\n                borderTop: \"1px solid black\",\n              }}\n            >\n              {item?.address} / {item?.phone_number}\n            </span>\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                height: \"32px\",\n                maxHeight: \"32px\",\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <span\n                style={{\n                  whiteSpace: \"break-spaces\",\n                  fontWeight: \"bold\",\n                }}\n              >\n                ADET <br />\n                <span style={{ fontWeight: \"normal\" }}>\n                  {item?.order_amount} AD.\n                </span>\n              </span>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"32px\",\n                }}\n              />\n              <div style={{}}>\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                  }}\n                >\n                  FİYAT\n                  <br />\n                  <span style={{ fontWeight: \"normal\" }}>\n                    {item.price.toFixed(3)} TL\n                  </span>\n                </span>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"32px\",\n                }}\n              />\n              <div style={{}}>\n                <span\n                  style={{\n                    fontWeight: \"bold\",\n                    whiteSpace: \"break-spaces\",\n                  }}\n                >\n                  TUTAR <br />\n                  <span style={{ fontWeight: \"normal\" }}>\n                    {(item.order_amount * item.price).toFixed(3)} TL\n                  </span>\n                </span>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"32px\",\n                }}\n              />\n              <span\n                style={{\n                  marginTop: \"-16px\",\n                  textDecoration: \"underline\",\n                }}\n              >\n                ÖZEL NOTLAR\n              </span>\n            </div>\n\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                display: \"flex\",\n                height: \"32px\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  marginTop: \"0.2cm\",\n                  marginLeft: \"0.7cm\",\n                }}\n              >\n                <span>NAKİT</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  marginLeft: \"1.4cm\",\n                  marginTop: \"0.2cm\",\n                }}\n              >\n                <span>ZİRAİ KREDİ</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  marginLeft: \"1.2cm\",\n                  marginTop: \"0.2cm\",\n                }}\n              >\n                <span>C/H</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n              <div\n                style={{\n                  display: \"flex\",\n                  gap: \"5px\",\n                  marginLeft: \"1.8cm\",\n                  marginTop: \"0.2cm\",\n                }}\n              >\n                <span>ÇEK</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                display: \"flex\",\n              }}\n            >\n              <span\n                style={{\n                  flex: 2,\n\n                  borderRight: \"1px solid black\",\n                }}\n              >\n                ÖDEME TARİHİ\n              </span>\n              <span\n                style={{\n                  flex: 1,\n\n                  borderRight: \"1px solid black\",\n                }}\n              >\n                TUTAR\n              </span>\n              <span style={{ flex: 2 }}>KALAN BAKİYE</span>\n            </div>\n            <div\n              style={{\n                height: \"32px\",\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                display: \"flex\",\n              }}\n            >\n              <span\n                style={{\n                  height: \"37px\",\n\n                  flex: 2,\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                }}\n              ></span>\n              <span\n                style={{\n                  height: \"37px\",\n\n                  flex: 1,\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                }}\n              ></span>\n              <span\n                style={{\n                  height: \"37px\",\n                  flex: 2,\n                  borderBottom: \"1px solid black\",\n                }}\n              ></span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ padding: \"1rem\", paddingBottom: 0, textAlign: \"justify\" }}>\n        <span>\n          1-1-Makina, ……………………… …………………………. adresinde ALICIYA teslim\n          edilecektir. Taşıma ve Nakliye Bedeli …..……. ait olup, bu nedenle\n          oluşacak hasarlar da ……………. sorumluluğundadır. Makina’nın teslimi ile\n          sorumluluk ALICIYA geçer.\n          <br /> 2-Makina 2 yıl boyunca SATICININ garantisi altında olup bu süre\n          içerisinde makinanın servis ve bakımları ücretsiz olarak yapılacaktır.\n          Sonraki yıllarda makinanın servis ve bakımından ücret alınabileceğini\n          ALICI kabul eder. Makinanın teslimi ile birlikte, makinanın kurulum ve\n          kullanımla ilgili olarak ALICI’ya eğitim verilecektir. Hatalı\n          kullanımdan doğan arızalar garanti kapsamı dışındadır.\n          <br /> 3-Nakit satımlarda, ALICI’dan peşinat alınır, kalan bedel en\n          geç makinanın teslim günü ALICI tarafından SATICI’ya ödenecektir.\n          Bedelin ödenmemesi halinde makina, SATICI tarafından ALICI’ya teslim\n          edilmez.\n          <br /> 4-Makina ……….. tarihinde ALICI’ya teslim edilecektir.\n          SATICI’nın teslimdeki 1 aylık gecikmesinin, olağan olduğunu ALICI\n          baştan kabul etmektedir. ALICI’nın; en geç …………. tarihine kadar\n          makinayı teslim almaması halinde, ALICI ; makina bedelini bu tarihten\n          itibaren işleyecek ticari temerrüt faizi ile tazmin etmekle yükümlü\n          olacağını kabul ve taahhüt eder.\n          <br />\n          5-ALICI; makina’nın teslimi anında makinanın başında fotoğraflarının\n          çekilmesini ve bunun SATICI’ya ait sosyal medya hesaplarında ad-soyad\n          ve il bilgisi ile paylaşılmasını açık rızası ile kabul etmiş olup,\n          bunun kişisel veri ihlali olmadığını ve olmayacağını kabul ve beyan\n          etmiştir.\n          <br /> 6-SATICI; 6698 Sayılı Kişisel Verilerin Korunması Kanunu’nun\n          10.maddesi gereği Aydınlatma Metnini ALICI’ya arz etmektedir.\n          SATICI’nın veri sorumlusu Agrotek İlaçlama Makinaları Ve Tarım\n          Tek.İth.İhr.Zirai Ürünler San.Tic. Ltd. Şti. olup, aşağıdaki kaşe ve\n          imza bölümünde adres, vergi dairesi ve numarası, mersis numarası ve\n          telefon ve fax numaraları bulunmaktadır. SATICI ; işbu sözleşme\n          kapsamında ALICI’nın ad ve soyadını, ünvanını, T.C. Kimlik Numarasını,\n          adres bilgisini, vergi kimlik numarasını ve fotoğrafını işleyecektir.\n          İşbu kişisel veriler SATICI tarafından faturalandırma, ürün teslimi,\n          eğitim hizmet takibi,garanti takibi, ürün takibi, reklam ve tanıtım\n          sebepleri ile işlenecektir. Kişisel veri işleme süresi 10 senedir.\n          Kişisel Verilerden ALICI’nın adı-soyadı, bulunduğu il ve makina ile\n          çekilmiş fotoğrafları SATICI’nın sosyal medya hesaplarında\n          paylaşılacaktır. ALICININ ad ve soyad, ünvan, T.C. Kimlik Numarası,\n          adres bilgisi, vergi kimlik numarası gibi kişisel verileri\n          faturalandırma süreci ile ilgili olarak, Vergi Dairesi, Tarım İl\n          Müdürlüğü, Sanayi ve Ticaret Bakanlığı, Hazine ve Maliye Bakanlığı ve\n          sair resmi kurumlarla paylaşılmaktadır. 6698 sayılı Kanun’un\n          11.maddesi uyarınca SATICI; ALICI’yı “Kişisel verilerinin işlenip\n          işlenmediğini öğrenme,kişisel verileri işlenmişse buna ilişkin bilgi\n          talep etme, kişisel verilerinin işlenme amacını ve bunların amacına\n          uygun kullanılıp kullanılmadığını öğrenme, yurt içinde veya yurt\n          dışında kişisel verilerinin aktarıldığı üçüncü kişileri bilme, kişisel\n          verilerin eksik veya yanlış işlenmiş olması hâlinde bunların\n          düzeltilmesini isteme, kişisel verilerin silinmesini veya yok\n          edilmesini isteme, kişisel verilerin düzeltilmesi, silinmesi veya yok\n          edilmesine ilişkin işlemlerin kişisel verilerin aktarıldığı üçüncü\n          kişilere bildirilmesini isteme, işlenen verilerin münhasıran otomatik\n          sistemler vasıtasıyla analiz edilmesi suretiyle aleyhine bir sonucun\n          ortaya çıkmasına itiraz etme,kişisel verilerinin kanuna aykırı olarak\n          işlenmesi sebebiyle zarara uğraması hâlinde zararın giderilmesini\n          talep etme” haklarına sahip olduğu konusunda açıkça bilgilendirmiştir.\n        </span>\n      </div>\n      <div\n        style={{\n          padding: \"1rem\",\n          paddingBottom: 0,\n          display: \"flex\",\n          gap: \"24rem\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <span>FATURA NO :</span>\n          <span>İRSALİYE NO :</span>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <span>SEVK TARİHİ :</span>\n          <span>ARAÇ BİLGİSİ :</span>\n        </div>\n      </div>\n      <div\n        style={{\n          padding: \"1rem\",\n          marginTop: \"1rem\",\n          display: \"flex\",\n          gap: \"3rem\",\n        }}\n      >\n        <span\n          style={{\n            border: \"1px solid black\",\n            padding: \"4px\",\n            height: \"20px\",\n            whiteSpace: \"nowrap\",\n          }}\n        >\n          SERİ NO: {item.serial_number}\n        </span>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"-1.2rem\",\n          }}\n        >\n          <span>SATICI KAŞE / İMZA</span>\n          <textarea cols=\"25\" rows=\"5\"></textarea>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"-1.2rem\",\n          }}\n        >\n          <span>ALICI AD-SOYAD / İMZA</span>\n          <textarea cols=\"25\" rows=\"5\"></textarea>\n        </div>\n      </div>\n\n      <span\n        style={{\n          marginLeft: \"1cm\",\n          textDecoration: \"underline\",\n          fontWeight: \"bold\",\n          whiteSpace: \"nowrap\",\n        }}\n      >\n        SATIŞA KONU MAKİNE KONFİGRASYONU\n      </span>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginRight: \"10%\",\n        }}\n      >\n        <div>\n          <ul>\n            {Object.entries(data).map(([key, value]) => (\n              <li key={key}>\n                <strong>{key}:</strong> {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <span\n          style={{\n            border: \"1px solid black\",\n            width: \"400px\",\n            height: \"200px\",\n            padding: \"4px\",\n          }}\n        >\n          NOTLAR:\n        </span>\n      </div>\n      <div style={{ paddingLeft: \"0.5cm\" }}>\n        <span>\n          Siparişinizi <strong>takip.covisart.com.tr</strong> adresinden{\" \"}\n          <strong>{item.customer}</strong> müşteri adı ve{\" \"}\n          <strong>{item.order_no}</strong> sipariş numarası ile takip\n          edebilirsiniz.\n        </span>\n      </div>\n      {/* <div\n        style={{\n          padding: \"1rem\",\n          marginTop: \"1rem\",\n          display: \"flex\",\n          gap: \"1rem\",\n        }}\n      >\n        <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\n          <span>MODEL :</span>\n          <span>BAĞLANTI TİPİ :</span>\n          <span>TANK CİNSİ :</span>\n          <span>TANK RENGİ :</span>\n          <span>TANK İÇİ YIKAMA :</span>\n          <span>ÇEKİ TİPİ :</span>\n          <span>POMPA :</span>\n          <span>KUMANDA :</span>\n          <span>ENJEKTÖR :</span>\n          <span>FAN TİPİ :</span>\n          <span>PERVANE ÇAPI CM :</span>\n          <span>PERVANE TİPİ :</span>\n          <span>ŞASİ RENGİ :</span>\n          <span>EK ÖZELLİKLER :</span>\n        </div>\n        <div\n          style={{\n            marginLeft: \"5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1rem\",\n          }}\n        >\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>FERRARİ</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGROTEK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>MEK.TOZLAYICI</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>HERB.ATAÇ.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>ASILIR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÇEKİLİR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>POLYESTER</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>POLYETİLEN</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>KB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>MB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KG</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KM</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KY</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SG</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>VAR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YOK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>PEHLİVAN</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>DAYAMALI</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>DÜZ ÇEKİ</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>AR 1064</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AR 1203</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AR 1604</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BP 165</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BHA 170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BHA 200</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BHS 200</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGR 160</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>BY MATIC 50</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>M170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ BY MATIC</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ M170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>VDR50</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BRAGIA SEL.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGR.SEL.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>M 62</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>M 82</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ BŞK.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ ÇVK.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>AYR.TF.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ŞANZ.TF.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TF.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>MK.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KTF.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TKF.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BAĞ.M.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ESP.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AV.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>72</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>82</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>93</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>ALÜM. KAVR.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BAŞAK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ALM.G.PLASTİK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>BOYA</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>GALV.DALD.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>KOMPLE MEME</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÜST YÖL.MEMESİZ.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÜST YÖNL.MEMELİ.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ALT.İLAÇLAMA.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÜST İLAÇLAMA.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TOZ İLAÇ ERT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n        </div>\n      </div> */}\n    </div>\n  );\n};\n\nexport default FanInvoice;\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport ReactDomServer from \"react-dom/server\";\n\nimport {\n  Table,\n  Input,\n  Button,\n  Divider,\n  Select,\n  Popconfirm,\n  Switch,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GetAllOrders,\n  GetMovableMachines,\n  SwitchMachines,\n  DeleteOrder,\n  GetMachineListFromOrderById,\n  GetFinishedOrders,\n  DeleteSingleMachine,\n  GetCancelledOrders,\n} from \"../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Modal as ModalFunction } from \"antd\";\n\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport OrderHistory from \"../components/OrderHistory\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport { Link } from \"react-router-dom\";\nimport ProformaInvoice from \"./Invoice/ProformaInvoice\";\nimport FanInvoice from \"./Invoice/FanInvoice\";\n\ndayjs.extend(customParseFormat);\n\ndayjs.locale(\"tr\");\n\nconst QRCode = require(\"qrcode.react\");\n\nexport function renderProperties(key, value) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nclass OrderScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail].map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"Bulunduğu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son İşlem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                    {renderProperties(\n                      \"Planlama Tarihi\",\n                      ConvertDateTime(detail.planned_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        Siparişi Kaydır\n                      </Button>\n                    ) : null}\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu Yazdır\n                    </Button>\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        console.log(record.id);\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      İşlem Geçmişini Göster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n\n                    {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          Makinayı Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  onChange = (checked) => {\n    this.setState({ keepMachineDetails: checked ? true : false });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    keepMachineDetails: false,\n    csvdata: [\n      [\n        \"Seri No\",\n        \"Sipariş No\",\n        \"Sipariş Tarihi\",\n        \"Müşteri\",\n        \"Telefon\",\n        \"Adres\",\n        \"Sipariş Alan\",\n        \"Durum\",\n      ],\n    ],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a, b) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Lokasyon\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Miktar\",\n        sorter: (a, b) => a.pending_amount - b.pending_amount,\n        ...this.getColumnSearchProps(\"order_amount\"),\n        render: (text, order) => (\n          <td\n            style={{ cursor: \"pointer\" }}\n            onClick={() => {\n              GetMachineListFromOrderById(order.id).then((orderDetails) => {\n                const amounts = orderDetails.reduce((acc, curr) => {\n                  const location = ConvertOrderLocation(curr.location);\n                  if (acc[location]) {\n                    acc[location] = acc[location] + 1;\n                  } else acc[location] = 1;\n                  return acc;\n                }, {});\n\n                ModalFunction.success({\n                  title: order.order_no + \" Numaralı Siparişin Durumu\",\n                  content: (\n                    <p>\n                      {Object.keys(amounts).map((key) => (\n                        <p>{key + \" : \" + amounts[key]}</p>\n                      ))}\n                    </p>\n                  ),\n                  okText: \"Tamam\",\n                });\n              });\n            }}\n          >\n            {String(order.order_amount - order.pending_amount) +\n              \"/\" +\n              order.order_amount}\n          </td>\n        ),\n      },\n      {\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"date\",\n        //render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a, b) =>\n          dayjs(a.date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"date\"),\n      },\n\n      {\n        title: \"Sipariş Alan\",\n        dataIndex: \"order_tooker\",\n        sorter: (a, b) => a.order_tooker.localeCompare(b.order_tooker),\n        ...this.getColumnSearchProps(\"order_tooker\"),\n        render: (text) => <td>{text.toUpperCase()}</td>,\n      },\n      {\n        title: \"Sipariş Durumu\",\n        dataIndex: \"laststatus\",\n        sorter: (a, b) => a.laststatus.localeCompare(b.laststatus),\n        ...this.getColumnSearchProps(\"laststatus\"),\n        render: (text, column) => (\n          <td>\n            {column.status === \"pendingfinance\"\n              ? \"FİNANS ONAYI BEKLİYOR\"\n              : text?.toUpperCase()}\n          </td>\n        ),\n      },\n      {\n        title: \"Planlanan Tarih\",\n        dataIndex: \"planned_date\",\n        sorter: (a, b) =>\n          dayjs(a.planned_date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.planned_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"planned_date\"),\n        render: (text) => (\n          <td>{text ? ConvertDateTime(text, \"D MMMM YYYY\") : \"Planlanmadı\"}</td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value, serialNumber) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    this.props.isFinishedOrders\n      ? GetFinishedOrders().then((result) => {\n          if (result) {\n            let dateModifiedData = result?.map((order) => {\n              order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n              return order;\n            });\n            this.setState({ data: dateModifiedData });\n          }\n        })\n      : this.props.isCancelledOrders\n      ? GetCancelledOrders().then((result) => {\n          let dateModifiedData = result?.map((order) => {\n            order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n            return order;\n          });\n          this.setState({ data: dateModifiedData });\n        })\n      : GetAllOrders().then((result) => {\n          let dateModifiedData = result\n            ?.sort((order1, order2) => {\n              return dayjs(order1.date, \"D MMMM YYYY, HH:mm\").unix() >\n                dayjs(order2.date, \"D MMMM YYYY, HH:mm\").unix()\n                ? 1\n                : -1;\n            })\n            .map((order) => {\n              order.date = dayjs(order.date).format(\"D MMMM YYYY, HH:mm\");\n              return order;\n            });\n          this.setState({ data: dateModifiedData });\n        });\n  }\n\n  componentDidMount = () => {\n    this.GetOrders();\n    GetMovableMachines().then((machines) => {\n      if (machines) {\n        this.setState({ movableMachines: machines });\n      }\n    });\n  };\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          expandable={{\n            expandedRowRender: (record) => (\n              <div\n                key={\"keyexpandable \" + record.id}\n                style={{ marginLeft: \"3rem\" }}\n              >\n                {renderProperties(\"Ürün\", record.description)}\n                {renderProperties(\"Tarih\", record.date)}\n                {renderProperties(\n                  \"Marka\",\n                  this.configFile.brand.filter(\n                    (b) => b.type === record.brand\n                  )[0]?.text\n                )}\n                {renderProperties(\"Sipariş No\", record.order_no)}\n                {renderProperties(\n                  \"Sipariş Miktarı\",\n                  String(record.order_amount)\n                )}\n                {renderProperties(\n                  \"Tip\",\n                  this.configFile.type.filter((b) => b.type === record.type)[0]\n                    ?.text\n                    ? this.configFile.type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                    : this.configFile.machine_type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                )}\n                {renderProperties(\n                  \"Fan Tipi\",\n                  this.configFile.cooler_type.filter(\n                    (b) => b.type === record.cooler_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Boyutu\",\n                  record.tank_size ? record.tank_size + \" LT\" : null\n                )}\n                {renderProperties(\n                  \"Kazan Materyali\",\n                  this.configFile.caldron_material.filter(\n                    (b) => b.type === record.caldron_material\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Pompa\",\n                  this.configFile.pump.filter((b) => b.type === record.pump)[0]\n                    ?.text\n                )}\n                {renderProperties(\"Model Yılı\", record.year)}\n                {renderProperties(\n                  \"Meme Tipi\",\n                  this.configFile.meme_type.filter(\n                    (b) => b.type === record.meme_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Meme Aralığı\", record.meme_distance)}\n                {renderProperties(\n                  \"Çeki Tipi\",\n                  this.configFile.tow_type.filter(\n                    (b) => b.type === record.tow_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kol Tipi\",\n                  this.configFile.arm_type.filter(\n                    (b) => b.type === record.arm_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Kol Uzunluğu\", record.arm_length)}\n                {renderProperties(\n                  \"Şase Rengi\",\n                  this.configFile.chassis_color.filter(\n                    (b) => b.type === record.chassis_color\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Rengi\",\n                  Capitalize(record.caldron_color)\n                )}\n                {renderProperties(\n                  \"Kazan Tipi\",\n                  this.configFile.caldron_type.filter(\n                    (b) => b.type === record.caldron_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kumanda\",\n                  this.configFile.commander.filter(\n                    (b) => b.type === record.commander\n                  )[0]?.text\n                )}\n                {renderProperties(\"Alternatif Özellikler\", record.alt_features)}\n                {renderProperties(\n                  \"Ödeme Detayları\",\n                  record.payment_detail || \"Ödeme Detayı Yok\"\n                )}\n                {renderProperties(\n                  \"Fiyat\",\n                  record.price ? record.price + \"₺\" : \"Fiyat Bilgisi Yok\"\n                )}\n\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    let printWindow = window.open(\n                      \"\",\n                      \"\",\n                      \"height=1024, width=1024\"\n                    );\n\n                    printWindow?.document.write(\n                      ReactDomServer.renderToStaticMarkup(\n                        <FanInvoice item={record} />\n                      )\n                    );\n\n                    printWindow.document.head.appendChild(\n                      document.createElement(\"style\")\n                    ).innerHTML =\n                      \"body {margin:0; padding:4px;} span {font-size: 12px;} .ant-table-cell {border-bottom: 1px solid black;} table {  border-collapse: collapse;} table, th, td {border: 1px solid; text-align: center;}\";\n\n                    printWindow.document.body.contentEditable = true;\n\n                    printWindow?.document.close();\n                  }}\n                >\n                  Satış Sözleşmesi\n                </Button>\n\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    let printWindow = window.open(\n                      \"\",\n                      \"\",\n                      \"height=1024, width=1024\"\n                    );\n\n                    printWindow?.document.write(\n                      ReactDomServer.renderToStaticMarkup(\n                        <ProformaInvoice item={record} />\n                      )\n                    );\n\n                    printWindow.document.head.appendChild(\n                      document.createElement(\"style\")\n                    ).innerHTML =\n                      \"span {font-size: 12px;} .ant-table-cell {border-bottom: 1px solid black;} table {  border-collapse: collapse;} table, th, td {border: 1px solid; text-align: center;}\";\n\n                    printWindow.document.body.contentEditable = true;\n\n                    printWindow?.document.close();\n                  }}\n                >\n                  Proforma Fatura\n                </Button>\n\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    GetMachineListFromOrderById(record.id).then(\n                      (orderDetails) => {\n                        this.setState({\n                          orderDetails: {\n                            ...this.state.orderDetails,\n                            [record.id]: orderDetails,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  Detayları Göster\n                </Button>\n                {this.renderOrderDetails(record)}\n                {record.status !== \"cancelled\" &&\n                this.props.user?.role == \"admin\" &&\n                !this.props.isFinishedOrders ? (\n                  <Popconfirm\n                    title=\"Bu siparişi iptal etmek istediğinizden emin misiniz?\"\n                    onConfirm={() => DeleteOrder(record.id)}\n                    okText=\"Evet\"\n                    cancelText=\"Hayır\"\n                  >\n                    <Button\n                      danger\n                      style={{ marginBottom: 10, marginRight: 10 }}\n                      type=\"primary\"\n                    >\n                      Siparişi İptal Et\n                    </Button>\n                  </Popconfirm>\n                ) : null}\n\n                <Link\n                  style={{\n                    display:\n                      record.order_amount !== record.pending_amount && \"none\",\n                    color: \"white\",\n                    marginBottom: 10,\n                    backgroundColor: \"#1677ff\",\n                    padding: \"8px\",\n                    borderRadius: \"6px\",\n                  }}\n                  to={{\n                    pathname: `/editOrder/${record.serial_number}`,\n                  }}\n                >\n                  Düzenle\n                </Link>\n              </div>\n            ),\n          }}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Modal\n          title={\n            this.state.orderSelected?.serial_number + \" Seri Numaralı Makine.\"\n          }\n          open={this.state.orderModalVisible}\n          onOk={() => {\n            this.setState({ orderModalVisible: false });\n            SwitchMachines({\n              order1: this.state.selectedToMove,\n              order2: this.state.orderSelected,\n              keepMachineDetails: this.state.keepMachineDetails,\n            });\n          }}\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <p>Lütfen değişim yapmak istediğiniz makineyi seçin.</p>\n          <Select\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            style={{ width: \"100%\" }}\n            onSelect={(value) => {\n              console.log(value);\n              this.setState({\n                selectedToMove: {\n                  serial_number: value.split(\" \")[0],\n                  order_id: Number.parseInt(value.split(\" \")[1]),\n                },\n              });\n            }}\n            placeholder=\"Lütfen bir makine seçin\"\n            defaultActiveFirstOption={true}\n          >\n            {this.state.movableMachines?.map((machine) => {\n              return (\n                <Select.Option\n                  key={machine.order_id}\n                  value={machine.serial_number + \" \" + machine.order_id}\n                >\n                  {machine.serial_number +\n                    \" \" +\n                    machine.customer +\n                    \" \" +\n                    Capitalize(machine.location)}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          <div style={{ marginTop: \"2rem\", display: \"flex\", gap: \"1rem\" }}>\n            <span>Sipariş Detayını Değiştir</span>\n            <Switch onChange={this.onChange} />\n            <span>Sipariş Detayını Koru (STOK)</span>\n          </div>\n        </Modal>\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderScreen);\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport async function GetChassisNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetChassisNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetTotalNeeds(value: number | string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetTotalNeeds/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFanNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetFanNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetPumpNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetPumpNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetCommanderNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetCommanderNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetTowNeeds() {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetTowNeeds/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetGenericTaskRoleAuthorizationList(value: string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Task/GetGenericTaskRoleAuthorizationList/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function AddGenericTaskRoleAuthorizationList(obj: { role: string; authority: string }) {\n  const response = await Axios.post(API_ADDRESS + \"/api/Task/AddGenericTaskRoleAuthorizationList/\", obj, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteGenericTaskRoleAuthorizationList(id: number) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/Task/DeleteGenericTaskRoleAuthorizationList/\" + id, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetNeedsList(value: number | string) {\n  const response = await Axios.get(API_ADDRESS + \"/api/Config/GetNeedList/\" + value, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function AddNeedsList(obj: { name: string; amount: number; tank_size: number | string }) {\n  const response = await Axios.post(API_ADDRESS + \"/api/Config/AddNeedList/\", obj, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteNeedsList(id: number) {\n  const response = await Axios.delete(API_ADDRESS + \"/api/Config/DeleteNeedList/\" + id, {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n","import { Button, Card, Form, Input, InputNumber, Modal, Popover, Table } from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { getConfig } from '../redux/actions/authActions';\nimport { RootState } from '../redux/reducers';\nimport { addConfig } from '../services/ConfigService';\nimport { AddNeedsList, DeleteNeedsList, GetNeedsList } from '../services/NeedListService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nconst typeToString: { [key: string]: string } = {\n  machine_type: 'Makine Tipleri',\n  brand: 'Markalar',\n  type: 'Tipler',\n  cooler_type: 'Fan Tipleri',\n  tank_size: 'Depo Boyutları',\n  pump: 'Pompalar',\n  tow_type: 'Çeki Tipleri',\n  chassis_color: 'Şase Renkleri',\n  caldron_type: 'Kazan Tipleri',\n  fan_type: 'Pervane Tipleri',\n  arm_type: 'Kol Tipleri',\n  fan_radius: 'Fan Çapları',\n  order_tooker: 'Sipariş Alanlar',\n  commander: 'Kumandalar',\n  turktraktormodel: 'Türk Traktör Modelleri',\n  meme_type: 'Meme Tipleri',\n  caldron_material: 'Kazan Materyalleri',\n  role: 'Kullanıcı Rolleri',\n};\n\nfunction ManageConfigScreen(props: Props) {\n  const [form] = Form.useForm();\n\n  function renderTable() {\n    return Object.keys(configFile).map((key) => {\n      let configs = configFile[key];\n      if (typeof configs == 'object') {\n        if (Object.keys(configs[0]).length === 2) {\n          return renderDoubleColumnTable(configs as ISerializationUnEffectiveField[], key);\n        } else if (Object.keys(configs[0]).length === 3) {\n          return renderTripleColumnTable(configs as ISerializationEffectiveField[], key);\n        }\n      }\n      return null;\n    });\n  }\n\n  function NeedsListTable(props: { value: number | string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n    const user = useSelector((state: RootState) => state.auth.user);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetNeedsList(value).then((res) => {\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: 'Ürün Adı',\n        dataIndex: 'name',\n        key: 'type',\n      },\n      {\n        title: 'Gereken Miktar',\n        dataIndex: 'amount',\n      },\n      {\n        title: 'İşlemler',\n        render: (text: string, order: any) => (\n          <td>\n            {user.role == 'admin' ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                danger\n                type=\"primary\"\n                onClick={() => {\n                  DeleteNeedsList(order.id).then((res) => {\n                    if (res) {\n                      GetData();\n                    } else {\n                      Modal.error({\n                        title: 'Bir hata oluştu',\n                        content: <p>Lütfen tekrar deneyin.</p>,\n                        okText: 'Tamam',\n                      });\n                    }\n                  });\n                }}\n              >\n                Sil\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddNeedsList({ amount: values.amount, name: values.name, value }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: 'Bir hata oluştu',\n                            content: <p>Lütfen tekrar deneyin.</p>,\n                            okText: 'Tamam',\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"name\"\n                      label=\"Ürün\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"amount\" label=\"Miktar\">\n                      <InputNumber min={0} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  function renderDoubleColumnTable(config: ISerializationUnEffectiveField[], key: string) {\n    const columns = [\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        key: 'type',\n        width: 50,\n      },\n      {\n        title: 'Gösterim',\n        dataIndex: 'text',\n        width: 50,\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values).then((res) => {\n                        if (res) getConfig();\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      label=\"Tip\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Lütfen sadece küçük harf ve boşluksuz yazın.',\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"Gösterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  function renderTripleColumnTable(config: ISerializationEffectiveField[], key: string) {\n    const columns = [\n      {\n        title: 'Tip',\n        dataIndex: 'type',\n        key: 'type',\n        width: 33,\n      },\n      {\n        title: 'Gösterim',\n        dataIndex: 'text',\n        width: 33,\n      },\n      {\n        title: 'Kısaltma (Barkod üzerinde)',\n        dataIndex: 'shortend',\n        width: 34,\n      },\n    ];\n    return (\n      <Card style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values);\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Lütfen sadece küçük harf ve boşluksuz yazın.',\n                        },\n                      ]}\n                      label=\"Tip\"\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"Gösterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"shortend\"\n                      label=\"Kısaltma\"\n                      rules={[\n                        {\n                          required: true,\n                          message: 'Lütfen sadece büyük harf yazın, ve harf sayısına dikkat edin.',\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) => a.type.localeCompare(b.type))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }} title=\"\">\n          {renderTable()}\n        </Card>\n        <Card title=\"Üretim Süresi İşlemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Şase Üretim Süresi\"\n            placeholder={String(configFile?.chassis_production_time)}\n            suffix=\"Gün\"\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('chassis_production_time', { text: value });\n            }}\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Fan Üretim Süresi\"\n            suffix=\"Gün\"\n            placeholder={String(configFile?.fan_production_time)}\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('fan_production_time', { text: value });\n            }}\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Kol Üretim Süresi\"\n            placeholder={String(configFile?.arm_production_time)}\n            suffix=\"Gün\"\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig('arm_production_time', { text: value });\n            }}\n          />\n        </Card>\n\n        <Card title=\"İhtiyaç Listesi İşlemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n          {(() => {\n            return configFile['tank_size']\n              .sort((a, b) => parseInt(b.type) - parseInt(a.type))\n              .map((tank_size) => {\n                return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.text} LT Tank İhtiyaç Listesi`} />;\n              });\n          })()}\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default ManageConfigScreen;\n","import { Button, Spin } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { renderProperties } from \"../screens/OrderScreen\";\nimport { GenericOrder, GetOrderDetails } from \"../services/OrderService\";\nimport OrderHistory from \"./OrderHistory\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\ndayjs.locale(\"tr\");\n\ninterface Props {\n  serial_number: string;\n  data: any;\n  externalDetails: any;\n}\n\nfunction OrderDetails(props: Props) {\n  const configFile = JSON.parse(\n    localStorage.getItem(\"config\") ?? \"{}\"\n  ) as IAgrotekConfig;\n  const { serial_number } = props;\n  const [record, setRecord] = useState(null as unknown as GenericOrder);\n  const [isVisible, setIsVisible] = useState(false);\n\n  useEffect(() => {\n    GetOrderDetails(serial_number).then((res) => {\n      if (res) {\n        setRecord(res);\n      }\n    });\n  }, []);\n\n  return (\n    <div style={{ marginLeft: \"40px\" }}>\n      {props.externalDetails ? props.externalDetails : <></>}\n      {record ? (\n        <>\n          {renderProperties(\"Ürün\", record.description)}\n          {renderProperties(\n            \"Son İşlem Tarihi\",\n            ConvertDateTime(record.last_location_date)\n          )}\n          {renderProperties(\n            \"Marka\",\n            configFile.brand.filter((b) => b.type === record.brand)[0]?.text\n          )}\n          {renderProperties(\"Sipariş No\", record.order_no)}\n          {renderProperties(\"Sipariş Miktarı\", String(record.order_amount))}\n          {renderProperties(\n            \"Tip\",\n            configFile.type.filter((b) => b.type === record.type)[0]?.text\n              ? configFile.type.filter((b) => b.type === record.type)[0]?.text\n              : configFile.machine_type.filter((b) => b.type === record.type)[0]\n                  ?.text\n          )}\n          {renderProperties(\n            \"Fan Tipi\",\n            configFile.cooler_type.filter(\n              (b) => b.type === record.cooler_type\n            )[0]?.text\n          )}\n          {renderProperties(\"Kazan Boyutu\", record.tank_size + \" LT\")}\n          {renderProperties(\n            \"Pompa\",\n            configFile.pump.filter((b) => b.type === record.pump)[0]?.text\n          )}\n          {renderProperties(\"Pompa Seri No\", record?.pump_serial)}\n          {renderProperties(\"Model Yılı\", record.year)}\n          {renderProperties(\n            \"Meme Tipi\",\n            configFile.meme_type.filter((b) => b.type === record.meme_type)[0]\n              ?.text\n          )}\n          {renderProperties(\"Meme Aralığı\", record.meme_distance)}\n          {renderProperties(\n            \"Çeki Tipi\",\n            configFile.tow_type.filter((b) => b.type === record.tow_type)[0]\n              ?.text\n          )}\n          {renderProperties(\n            \"Kol Tipi\",\n            configFile.arm_type.filter((b) => b.type === record.arm_type)[0]\n              ?.text\n          )}\n          {renderProperties(\"Kol Uzunluğu\", record.arm_length)}\n          {renderProperties(\n            \"Şase Rengi\",\n            configFile.chassis_color.filter(\n              (b) => b.type === record.chassis_color\n            )[0]?.text\n          )}\n          {renderProperties(\"Kazan Rengi\", Capitalize(record.caldron_color))}\n          {renderProperties(\n            \"Kazan Tipi\",\n            configFile.caldron_type.filter(\n              (b) => b.type === record.caldron_type\n            )[0]?.text\n          )}\n          {renderProperties(\n            \"Kumanda\",\n            configFile.commander.filter((b) => b.type === record.commander)[0]\n              ?.text\n          )}\n          {renderProperties(\"Alternatif Özellikler\", record.alt_features)}\n          {!props.hideShowTransactions && (\n            <Button type=\"primary\" onClick={() => setIsVisible(true)}>\n              İşlem Geçmişini Göster\n            </Button>\n          )}\n          <OrderHistory\n            serial_number={serial_number}\n            machine_id={record.id}\n            isVisible={isVisible}\n            setIsVisible={setIsVisible}\n          />\n        </>\n      ) : (\n        <Spin style={{ margin: \"25%\" }} size=\"large\" />\n      )}\n    </div>\n  );\n}\n\nexport default OrderDetails;\n","import React, { ReactNode } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder, GetDeliveryReport } from \"../services/OrderService\";\nimport OrderDetails from \"../components/OrderDetails\";\nimport { ConvertDateTime } from \"../helper\";\n\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nexport default class DeliveryScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[\"Seri No\", \"Teslim Tarihi\", \"Müşteri\", \"Telefon No\", \"Adres\"]],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Teslim Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n\n      {\n        title: \"Açıklama\",\n        dataIndex: \"comment\",\n        ...this.getColumnSearchProps(\"comment\"),\n      },\n    ],\n  };\n\n  componentDidMount = async () => {\n    const result = await GetDeliveryReport();\n\n    this.setState({ data: result });\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <Table\n        rowKey={(row) => \"key\" + row.serial_number}\n        size=\"small\"\n        loading={this.state.loading}\n        pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n        columns={this.state.columns}\n        dataSource={state.data}\n        expandable={{\n          expandedRowRender: (record) => (\n            <OrderDetails serial_number={record.serial_number} />\n          ),\n        }}\n      />\n    );\n  }\n}\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button, Card, Checkbox } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GetAllTankProducerOrders,\n  sendToTankProducer,\n} from \"../services/OrderService\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize } from \"../helper\";\nimport { renderToString } from \"react-dom/server\";\nimport QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\ndayjs.locale(\"tr\");\n\nclass TankProducerScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    activeOrders: [],\n    showAllOrders: false,\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no - b.order_no,\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        /*\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      */\n      },\n      {\n        /*\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"order_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.order_date, \"D MMMM YYYY, HH:mm\").unix() - dayjs(b.order_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"order_date\"),\n      */\n      },\n      {\n        title: \"Planlanan Üretim Tarihi\",\n        dataIndex: \"planned_date\",\n        sorter: (a, b) =>\n          dayjs(\n            a.planned_date !== \"\" ? a.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix() -\n          dayjs(\n            b.planned_date !== \"\" ? b.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix(),\n        ...this.getColumnSearchProps(\"planned_date\"),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"last_operation_date\",\n        sorter: (a, b) =>\n          dayjs(a.last_operation_date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.last_operation_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"last_operation_date\"),\n      },\n      {\n        title: \"Durum\",\n        dataIndex: \"status\",\n        sorter: (a, b) => a.status.localeCompare(b.status),\n        ...this.getColumnSearchProps(\"status\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n      },\n      {\n        title: \"Depo Boyutu\",\n        dataIndex: \"tank_size\",\n        sorter: (a, b) => a.tank_size - b.tank_size,\n        ...this.getColumnSearchProps(\"tank_size\"),\n      },\n      {\n        title: \"Depo Rengi\",\n        dataIndex: \"caldron_color\",\n        ...this.getColumnSearchProps(\"caldron_color\"),\n      },\n      {\n        title: \"Depo Tipi\",\n        dataIndex: \"caldron_type\",\n        sorter: (a, b) => a?.caldron_type?.localeCompare(b?.caldron_type),\n      },\n      {\n        title: \"Marka\",\n        dataIndex: \"brand\",\n        sorter: (a, b) => a.brand.localeCompare(b.brand),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ||\n            this.props.user.role == \"tankproducer\" ? (\n              <Button\n                block\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode(\"TU\" + order.serial_number);\n                }}\n              >\n                QR Kodu Yazdır\n              </Button>\n            ) : null}\n            {this.props.user.role == \"tankproducer\" &&\n              (order.status === \"Onay Bekliyor\" ||\n                order.status === \"Üretiliyor (Onaylandı)\") && (\n                <Button\n                  block\n                  style={{ marginBottom: 10 }}\n                  type=\"primary\"\n                  onClick={() => {\n                    const status =\n                      order.status === \"Onay Bekliyor\"\n                        ? \"pending\"\n                        : order.status === \"Üretiliyor (Onaylandı)\"\n                        ? \"confirmed\"\n                        : \"\";\n                    sendToTankProducer(status, order.id).then(async () => {\n                      const result = await GetAllTankProducerOrders();\n                      const filteredResult = this.filterResult(result);\n                      this.setState({ data: filteredResult });\n                    });\n                  }}\n                >\n                  {order.status === \"Onay Bekliyor\"\n                    ? \"Onayla\"\n                    : order.status === \"Üretiliyor (Onaylandı)\"\n                    ? \"Üretildi Olarak İşaretle\"\n                    : \"\"}\n                </Button>\n              )}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  filterResult(result) {\n    result.forEach((record) => {\n      record.last_operation_date = record.deliver_date\n        ? dayjs(record.deliver_date).format(\"D MMMM YYYY, HH:mm\")\n        : record.producted_date\n        ? dayjs(record.producted_date).format(\"D MMMM YYYY, HH:mm\")\n        : record.confirmed_date\n        ? dayjs(record.confirmed_date).format(\"D MMMM YYYY, HH:mm\")\n        : dayjs(record.order_date).format(\"D MMMM YYYY, HH:mm\");\n      record.order_date = dayjs(record.order_date).format(\"D MMMM YYYY, HH:mm\");\n      record.planned_date = record.planned_date\n        ? dayjs(record.planned_date).format(\"D MMMM YYYY\")\n        : \"\";\n      record.brand = Capitalize(record.brand);\n      record.status =\n        record.status == \"delivered\"\n          ? \"Teslim Edildi\"\n          : record.status == \"producted\"\n          ? \"Üretim Tamamlandı (Hazır)\"\n          : record.status == \"confirmed\"\n          ? \"Üretiliyor (Onaylandı)\"\n          : record.status == \"cancelled\"\n          ? \"İptal Edildi\"\n          : record.status == \"ontheway\"\n          ? \"Yolda (Saruhanlıya Gönderildi)\"\n          : record.status === \"pending\"\n          ? \"Onay Bekliyor\"\n          : record.status;\n      record.caldron_type = record.caldron_type\n        ? Capitalize(record.caldron_type)\n        : \"\";\n      record.caldron_color = Capitalize(record.caldron_color);\n      record.status = Capitalize(record.status);\n    });\n    return result;\n  }\n\n  componentDidMount = async () => {\n    const result = await GetAllTankProducerOrders();\n    const filteredResult = this.filterResult(result);\n    const onlyActiveOrders = filteredResult.filter(\n      (res) => res.status !== \"Teslim Edildi\"\n    );\n    this.setState({ data: filteredResult, activeOrders: onlyActiveOrders });\n\n    let csv = [\n      [\n        \"Sipariş No\",\n        \"Müşteri\",\n        \"Sipariş Tarihi\",\n        \"Son İşlem Tarihi\",\n        \"Durum\",\n        \"Depo Boyutu\",\n        \"Kazan Tipi\",\n        \"Kazan Rengi\",\n        \"Marka\",\n      ],\n    ];\n\n    result.forEach((record) =>\n      csv.push([\n        record.order_no,\n        record.customer,\n        record.order_date,\n        record.last_operation_date,\n        record.status,\n        record.tank_size,\n        record.caldron_type,\n        record.caldron_color,\n        record.brand,\n      ])\n    );\n\n    this.setState({ csvdata: csv, loading: false });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n    const onChange = (e) => {\n      this.setState({ showAllOrders: e.target.checked });\n    };\n\n    return (\n      <>\n        <Card\n          style={{\n            display: \"flex\",\n            alignItems: \"center\",\n            justifyContent: \"center\",\n          }}\n        >\n          <Checkbox onChange={onChange}>Tüm Siparişleri Göster</Checkbox>\n        </Card>\n\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.showAllOrders ? state.data : state.activeOrders}\n        />\n        <Button style={{ float: \"right\", marginRight: 10 }} type=\"default\">\n          <CSVLink data={state.csvdata}>CSV'ye aktar</CSVLink>\n        </Button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(TankProducerScreen);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport OrderDetails from \"../components/OrderDetails\";\nimport { sendTo, GetProductionReadyOrders } from \"../services/OrderService\";\nimport { connect } from \"react-redux\";\n\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nclass PendingOrdersScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    orderModalVisible: false,\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a, b) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        render: (text) => <td>{Capitalize(text)}</td>,\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n      },\n\n      {\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"last_location_date\",\n        render: (text) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a, b) =>\n          moment(a.last_location_date).unix() -\n          moment(b.last_location_date).unix(),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                disabled={\n                  order.production_unit == \"diger\"\n                    ? false\n                    : !order.can_start_production\n                }\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  sendTo(order.production_unit, order.id).then((res) => {\n                    if (res) {\n                      this.GetPendingOrdersData();\n                    }\n                  });\n                }}\n              >\n                Üretime Başla\n              </Button>\n            ) : null}\n          </td>\n        ),\n        sorter: (a, b) =>\n          (a.production_unit == \"diger\" ? false : !a.can_start_production) -\n          (b.production_unit == \"diger\" ? false : !b.can_start_production),\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    this.GetPendingOrdersData();\n  };\n\n  GetPendingOrdersData = () => {\n    GetProductionReadyOrders().then((result) => {\n      this.setState({ data: result });\n    });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <Table\n        rowKey={(row) => \"key\" + row.id}\n        size=\"small\"\n        loading={state.loading}\n        pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n        columns={state.columns}\n        dataSource={state.data}\n        expandable={{\n          expandedRowRender: (record) => (\n            <OrderDetails serial_number={record.serial_number} />\n          ),\n        }}\n      />\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(PendingOrdersScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode } from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder, GetActiveOrders } from \"../services/OrderService\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport OrderDetails from \"../components/OrderDetails\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs, { Dayjs } from \"dayjs\";\ndayjs.locale(\"tr\");\n\nexport default class ActiveOrdersScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [\n      [\n        \"Seri No\",\n        \"Sipariş No\",\n        \"Sipariş Tarihi\",\n        \"Müşteri\",\n        \"Telefon\",\n        \"Adres\",\n        \"Sipariş Alan\",\n        \"Sipariş Özellikleri\",\n        \"Durum\",\n        \"Üretim Birimi\",\n      ],\n    ],\n    movableMachines: [],\n    orderModalVisible: false,\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.production_unit.localeCompare(b.production_unit),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"last_location_date\",\n        defaultSortOrder: \"descend\",\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          dayjs(a.last_location_date).unix() -\n          dayjs(b.last_location_date).unix(),\n      },\n      {\n        title: \"Bulunduğu Konum\",\n        dataIndex: \"location\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps(\"location\"),\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    let csvdata = [\n      [\n        \"Seri No\",\n        \"Sipariş No\",\n        \"Sipariş Tarihi\",\n        \"Müşteri\",\n        \"Telefon\",\n        \"Adres\",\n        \"Sipariş Alan\",\n        \"Durum\",\n        \"Üretim Birimi\",\n        \"Sipariş Özellikleri\",\n      ],\n    ];\n    GetActiveOrders().then((res) => {\n      let filteredRes = res?.filter(\n        (detail) =>\n          !(\n            detail.location == \"iptal\" ||\n            detail.location == \"teslimat\" ||\n            detail.location == \"onaybekliyor\"\n          )\n      );\n      filteredRes = filteredRes?.map((detail) => {\n        detail.location = ConvertOrderLocation(detail.location);\n        return detail;\n      });\n\n      this.setState({ data: filteredRes, csvDataloaded: true });\n      this.state.data?.forEach((order) => {\n        let order_details =\n          order.brand +\n          \"$\" +\n          order.production_unit +\n          \"$\" +\n          order.caldron_color +\n          \"$\" +\n          order.caldron_type +\n          \"$\" +\n          order.cooler_type +\n          \"$\" +\n          order.fan_radius +\n          \"$\" +\n          order.fan_type +\n          \"$\" +\n          order.pump +\n          \"$\" +\n          order.meme_distance +\n          \"$\" +\n          order.meme_type +\n          \"$\" +\n          order.tank_size +\n          \"$\" +\n          order.type +\n          \"$\" +\n          order.tow_type +\n          \"$\" +\n          order.alt_features +\n          \"$\" +\n          order.year;\n        csvdata.push([\n          order.serial_number,\n          order.order_no,\n          order.date,\n          order.customer,\n          order.phone_number,\n          order.address,\n          order.order_tooker,\n          order.location,\n          order.production_unit,\n          order_details,\n        ]);\n      });\n      this.setState({ csvdata });\n    });\n  };\n\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.last_location_date + row.serial_number}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n          expandable={{\n            expandedRowRender: (record) => (\n              <OrderDetails serial_number={record.serial_number} />\n            ),\n          }}\n        />\n      </>\n    );\n  }\n}\n","import Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\nimport { GetTaskRequestConfig } from \"./OrderService\";\nimport * as FileSaver from \"file-saver\";\nimport moment from \"moment\";\n\nexport async function GetReports() {\n  const response = await Axios.get(API_ADDRESS + \"/api/report/\", {\n    headers: {\n      Authorization: \"Bearer \" + GetToken(),\n    },\n  })\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetReportsWithDate(selectedDate: string) {\n  console.log(selectedDate);\n  const response = await Axios.get(\n    `${API_ADDRESS}/api/report/?date_parameter=${moment(\n      selectedDate,\n      \"YYYY-MM-DD\"\n    )\n      .add(\"hours\", 3)\n      .toISOString()}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n\nexport class ExportCSVModel extends GetTaskRequestConfig {\n  OrderStartDate: string = \"\";\n  OrderEndDate: string = \"\";\n  StatusStartDate: string = \"\";\n  StatusEndDate: string = \"\";\n}\n\nexport async function ExportCSVReport(model: ExportCSVModel) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/report/ExportToCSV\",\n    model,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n      responseType: \"blob\",\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        FileSaver.saveAs(res.data, \"rapor.xlsx\");\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\nexport async function ExportCSVReportWithGroup(model: ExportCSVModel) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/report/ExportToCSVByGroupMachine\",\n    model,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n      responseType: \"blob\",\n    }\n  )\n    .then((res) => {\n      if (res.status === 200) {\n        FileSaver.saveAs(res.data, \"rapor.xlsx\");\n        return res.data;\n      }\n    })\n    .catch(() => {\n      return null;\n    });\n\n  return response;\n}\n","import React from \"react\";\nimport { Typography } from \"antd\";\n\ninterface Props {\n  title: string;\n  data: string | number;\n  color: string;\n}\nconst { Title } = Typography;\n\nfunction ReportSquare(props: Props) {\n  const { title, data, color } = props;\n\n  return (\n    <div style={{ boxSizing: \"border-box\", overflow: \"auto\", maxWidth: \"100%\", margin: 10, borderRadius: 10 }}>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignContent: \"center\", width: \"100%\", backgroundColor: color, padding: 5 }}>\n        <Title level={5} style={{ margin: 0, color: \"white\" }}>\n          {title}\n        </Title>\n        <Title level={3} style={{ margin: 0, color: \"white\" }}>\n          {data}\n        </Title>\n      </div>\n    </div>\n  );\n}\n\nexport default ReportSquare;\n","import { Col, Row, Typography, Form, Checkbox, DatePicker, Button } from \"antd\";\nimport {\n  ExportCSVModel,\n  ExportCSVReport,\n  ExportCSVReportWithGroup,\n} from \"../services/ReportService\";\nimport { useHistory } from \"react-router\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport { useState } from \"react\";\n\ndayjs.locale(\"tr\");\n\nconst { Title } = Typography;\nconst { RangePicker } = DatePicker;\n\nfunction ExportCSV() {\n  const history = useHistory();\n  const formItemLayout = {\n    labelCol: { span: 6 },\n    wrapperCol: { span: 24 },\n  };\n  const [isChecked, setIsChecked] = useState(false);\n\n  const onFinish = (values: any) => {\n    let model: any = new ExportCSVModel();\n\n    values[\"bulundugu-konum\"]?.forEach((value: any) => {\n      model[value] = true;\n    });\n\n    model.OrderStartDate = values[\"siparis-tarihi\"][0];\n    model.OrderEndDate = values[\"siparis-tarihi\"][1];\n    model.StatusStartDate = values[\"son-islem-tarihi\"][0];\n    model.StatusEndDate = values[\"son-islem-tarihi\"][1];\n\n    !isChecked\n      ? ExportCSVReport(model).then((res) => {\n          if (res) {\n            console.log(\"excel file donwloaded\");\n            history.push(\"/\");\n            //setCSVData(res);\n          }\n        })\n      : ExportCSVReportWithGroup(model).then((res) => {\n          if (res) {\n            console.log(\"excel file donwloaded\");\n            history.push(\"/\");\n          }\n        });\n  };\n\n  const locations: { [key: string]: string } = {\n    turbo: \"Turbo Üretimde\",\n    kollu: \"Kollu Üretimde\",\n    diger: \"Diğer Üretimde\",\n    test: \"Testte\",\n    iptal: \"İptal Edilmiş\",\n    onaybekliyor: \"Üretim Onayı Bekliyor\",\n    teslimat: \"Teslim Edilmiş\",\n    depo: \"Depoda\",\n    bahce: \"Bahçede\",\n    planlandı: \"Planlandı\",\n  };\n\n  return (\n    <div\n      style={{\n        boxSizing: \"border-box\",\n        overflow: \"auto\",\n        maxWidth: \"100%\",\n        margin: 10,\n        borderRadius: 10,\n      }}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignContent: \"center\",\n          width: \"100%\",\n          backgroundColor: \"rgb(240,240,240)\",\n          padding: \"5%\",\n        }}\n      >\n        <Title level={4}>Siparişleri CSV'ye aktar</Title>\n        <Form\n          {...formItemLayout}\n          name=\"reportPrefences\"\n          onFinish={onFinish}\n          initialValues={{\n            \"bulundugu-konum\": [\"turbo\", \"kollu\", \"diger\", \"test\"],\n            // \"siparis-tarihi\": [dayjs().startOf(\"year\"), dayjs().add(1, \"days\")],\n            // \"son-islem-tarihi\": [\n            //   dayjs().startOf(\"year\"),\n            //   dayjs().add(1, \"days\"),\n            // ],\n          }}\n        >\n          <Form.Item label=\"Sipariş Tarihi\" name=\"siparis-tarihi\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item label=\"Son İşlem Tarihi\" name=\"son-islem-tarihi\">\n            <RangePicker />\n          </Form.Item>\n          <Form.Item name=\"bulundugu-konum\">\n            <Checkbox.Group>\n              <Row>\n                {(function renderCheckboxs() {\n                  return Object.keys(locations).map((location) => {\n                    return (\n                      <Col key={\"exportcsvcheckbox\" + location} span={12}>\n                        <Checkbox\n                          value={location}\n                          style={{ lineHeight: \"32px\" }}\n                        >\n                          {locations[location]}\n                        </Checkbox>\n                      </Col>\n                    );\n                  });\n                })()}\n              </Row>\n            </Checkbox.Group>\n          </Form.Item>\n          <Row\n            style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}\n          >\n            <Checkbox onChange={() => setIsChecked(!isChecked)}>\n              Grupla\n            </Checkbox>\n\n            <Button htmlType=\"submit\" type=\"primary\">\n              Excel'e Aktar\n            </Button>\n          </Row>\n        </Form>\n      </div>\n    </div>\n  );\n}\n\nexport default ExportCSV;\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Row, Col, Spin, Layout, DatePicker } from \"antd\";\nimport { GetReports, GetReportsWithDate } from \"../services/ReportService\";\nimport ReportSquare from \"../components/ReportSquare\";\nimport ExportCSV from \"../components/ExportCSV\";\nimport Title from \"antd/lib/typography/Title\";\nimport Text from \"antd/lib/typography/Text\";\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\ninterface ReportModel {\n  toplam_siparis: number;\n  turbo_siparis: number;\n  kollu_siparis: number;\n  diger_siparis: number;\n  kollugereken: number;\n  turbogereken: number;\n  digergereken: number;\n  kolluplanlanan: number;\n  turboplanlanan: number;\n  digerplanlanan: number;\n  turbo_bugun_yapilan_is: [string];\n  kollu_bugun_yapilan_is: [string];\n  diger_bugun_yapilan_is: [string];\n  test_bugun_yapilan_is: [string];\n  teslimat_bugun_yapilan_is: [string];\n  stocks: { [key: string]: number };\n}\n\nclass StatisticsScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n  state = {\n    reports: null as unknown as ReportModel,\n    selectedDate: moment().format(\"YYYY-MM-DD\"),\n  };\n\n  searchInput: React.ReactNode;\n\n  componentDidMount() {\n    GetReportsWithDate(this.state.selectedDate).then((res) => {\n      if (res) {\n        res.test_bugun_yapilan_is = this.uniq(res.test_bugun_yapilan_is);\n        res.turbo_bugun_yapilan_is = this.uniq(res.turbo_bugun_yapilan_is);\n        res.diger_bugun_yapilan_is = this.uniq(res.diger_bugun_yapilan_is);\n        res.teslimat_bugun_yapilan_is = this.uniq(\n          res.teslimat_bugun_yapilan_is\n        );\n        res.kollu_bugun_yapilan_is = this.uniq(res.kollu_bugun_yapilan_is);\n      }\n      if (res) this.setState({ reports: res });\n    });\n  }\n\n  uniq(a: Array<any>) {\n    return Array.from(new Set(a));\n  }\n\n  handleDateChange = async (event: any) => {\n    await this.setState({\n      selectedDate: event.target.value,\n      reports: {\n        ...this.state.reports,\n        test_bugun_yapilan_is: [],\n        turbo_bugun_yapilan_is: [],\n        diger_bugun_yapilan_is: [],\n        teslimat_bugun_yapilan_is: [],\n        kollu_bugun_yapilan_is: [],\n      },\n    });\n    GetReportsWithDate(this.state.selectedDate).then((res) => {\n      if (res) {\n        res.test_bugun_yapilan_is = this.uniq(res.test_bugun_yapilan_is);\n        res.turbo_bugun_yapilan_is = this.uniq(res.turbo_bugun_yapilan_is);\n        res.diger_bugun_yapilan_is = this.uniq(res.diger_bugun_yapilan_is);\n        res.teslimat_bugun_yapilan_is = this.uniq(\n          res.teslimat_bugun_yapilan_is\n        );\n        res.kollu_bugun_yapilan_is = this.uniq(res.kollu_bugun_yapilan_is);\n      }\n      if (res) this.setState({ reports: res });\n    });\n  };\n\n  renderReports() {\n    const { reports } = this.state;\n    return (\n      <>\n        <ReportSquare\n          title=\"Toplam Onay Bekleyen Sipariş\"\n          data={reports?.toplam_siparis}\n          color=\"#4A66C5\"\n        />\n        <ReportSquare\n          title=\"Kollu Onay Bekleyen Sipariş\"\n          data={reports?.kollu_siparis}\n          color=\"#898C94\"\n        />\n        <ReportSquare\n          title=\"Kollu Üretimde\"\n          data={reports?.kollugereken}\n          color=\"#FF7800\"\n        />\n        <ReportSquare\n          title=\"Kollu Planlanan\"\n          data={reports?.kolluplanlanan}\n          color=\"#EE204D\"\n        />\n        <ReportSquare\n          title=\"Turbo Onay Bekleyen Sipariş\"\n          data={reports?.turbo_siparis}\n          color=\"#9C459E\"\n        />\n        <ReportSquare\n          title=\"Turbo Üretimde\"\n          data={reports?.turbogereken}\n          color=\"#8EBF00\"\n        />\n        <ReportSquare\n          title=\"Turbo Planlanan\"\n          data={reports?.turboplanlanan}\n          color=\"#4A66C5\"\n        />\n      </>\n    );\n  }\n\n  renderStocks() {\n    const { reports } = this.state;\n\n    return (\n      <>\n        {Object.keys(reports?.stocks).length > 0 ? (\n          <>\n            <ReportSquare\n              title=\"Diğer Onay Bekleyen Sipariş\"\n              data={reports?.diger_siparis}\n              color=\"#00C5CD\"\n            />\n            <ReportSquare\n              title=\"Diğer Üretimde\"\n              data={reports?.digergereken}\n              color=\"#499370\"\n            />\n            <ReportSquare\n              title=\"Diğer Planlanan\"\n              data={reports?.digerplanlanan}\n              color=\"#8EBF00\"\n            />\n            <ReportSquare\n              title=\"Bahçedeki Turbo Makinalar\"\n              data={\n                reports?.stocks[\"bahce turbo\"]\n                  ? reports?.stocks[\"bahce turbo\"]\n                  : 0\n              }\n              color=\"#B4674D\"\n            />\n            <ReportSquare\n              title=\"Depodaki Turbo Makinalar\"\n              data={\n                reports?.stocks[\"depo turbo\"]\n                  ? reports?.stocks[\"depo turbo\"]\n                  : 0\n              }\n              color=\"#EE204D\"\n            />\n            <ReportSquare\n              title=\"Bahçedeki Kollu Makinalar\"\n              data={\n                reports?.stocks[\"bahce kollu\"]\n                  ? reports?.stocks[\"bahce kollu\"]\n                  : 0\n              }\n              color=\"#1A4876\"\n            />\n            <ReportSquare\n              title=\"Depodaki Kollu Makinalar\"\n              data={\n                reports?.stocks[\"depo kollu\"]\n                  ? reports?.stocks[\"bahce kollu\"]\n                  : 0\n              }\n              color=\"#8EE53F\"\n            />\n            <ReportSquare\n              title=\"Bahçedeki Diğer Makinalar\"\n              data={\n                reports?.stocks[\"bahce diger\"]\n                  ? reports?.stocks[\"bahce diger\"]\n                  : 0\n              }\n              color=\"#FF7518\"\n            />\n            <ReportSquare\n              title=\"Depodaki Diğer Makinalar\"\n              data={\n                reports?.stocks[\"depo diger\"]\n                  ? reports?.stocks[\"depo diger\"]\n                  : 0\n              }\n              color=\"#00C5CD\"\n            />\n          </>\n        ) : (\n          <Spin />\n        )}\n      </>\n    );\n  }\n\n  renderDailyCompletedTasks() {\n    return (\n      <div\n        style={{\n          boxSizing: \"border-box\",\n          overflow: \"auto\",\n          maxWidth: \"100%\",\n          margin: 10,\n          borderRadius: 10,\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            alignContent: \"center\",\n            width: \"100%\",\n            backgroundColor: \"#1A4876\",\n            padding: 5,\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              gap: \"1rem\",\n            }}\n          >\n            <input\n              id=\"datepicker-input\"\n              style={{\n                border: \"1px solid white\",\n                // backgroundColor: \"transparent\",\n                color: \"#1A4876\",\n                borderRadius: 10,\n                padding: \"0.4rem\",\n                marginTop: \"1rem\",\n                outline: \"none\",\n              }}\n              type=\"date\"\n              value={this.state.selectedDate}\n              onChange={this.handleDateChange}\n            />\n            <Title level={3} style={{ color: \"white\" }}>\n              Yapılan İşler\n            </Title>\n          </div>\n          <Row gutter={[0, 24]}>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: \"center\" }}>\n              <Title\n                level={5}\n                style={{ margin: 0, color: \"white\", textAlign: \"center\" }}\n              >\n                Turbo Üretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.turbo_bugun_yapilan_is.map(\n                  (serial_number: string) => {\n                    return (\n                      <Row key={\"turborowkey\" + serial_number}>\n                        <Text\n                          code\n                          style={{ margin: 0, width: \"100%\", color: \"white\" }}\n                        >\n                          {serial_number}\n                        </Text>\n                      </Row>\n                    );\n                  }\n                );\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: \"center\" }}>\n              <Title\n                level={5}\n                style={{ margin: 0, color: \"white\", textAlign: \"center\" }}\n              >\n                Kollu Üretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.kollu_bugun_yapilan_is.map(\n                  (serial_number: string) => {\n                    return (\n                      <Row key={\"kollurowkey\" + serial_number}>\n                        <Text\n                          code\n                          style={{ margin: 0, width: \"100%\", color: \"white\" }}\n                        >\n                          {serial_number}\n                        </Text>\n                      </Row>\n                    );\n                  }\n                );\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: \"center\" }}>\n              <Title\n                level={5}\n                style={{ margin: 0, color: \"white\", textAlign: \"center\" }}\n              >\n                Diğer Üretilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.diger_bugun_yapilan_is.map(\n                  (serial_number: string) => {\n                    return (\n                      <Row key={\"digerrowkey\" + serial_number}>\n                        <Text\n                          code\n                          style={{ margin: 0, width: \"100%\", color: \"white\" }}\n                        >\n                          {serial_number}\n                        </Text>\n                      </Row>\n                    );\n                  }\n                );\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: \"center\" }}>\n              <Title\n                level={5}\n                style={{ margin: 0, color: \"white\", textAlign: \"center\" }}\n              >\n                Test Edilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.test_bugun_yapilan_is.map(\n                  (serial_number: string) => {\n                    return (\n                      <Row key={\"testrowkey\" + serial_number}>\n                        <Text\n                          code\n                          style={{ margin: 0, width: \"100%\", color: \"white\" }}\n                        >\n                          {serial_number}\n                        </Text>\n                      </Row>\n                    );\n                  }\n                );\n              })()}\n            </Col>\n            <Col xs={24} sm={12} md={12} style={{ alignItems: \"center\" }}>\n              <Title\n                level={5}\n                style={{ margin: 0, color: \"white\", textAlign: \"center\" }}\n              >\n                Teslim Edilen Makineler\n              </Title>\n              {(() => {\n                return this.state?.reports?.teslimat_bugun_yapilan_is.map(\n                  (serial_number: string) => {\n                    return (\n                      <Row key={\"teslimatrowkey\" + serial_number}>\n                        <Text\n                          code\n                          style={{ margin: 0, width: \"100%\", color: \"white\" }}\n                        >\n                          {serial_number}\n                        </Text>\n                      </Row>\n                    );\n                  }\n                );\n              })()}\n            </Col>\n          </Row>\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return (\n      <Layout>\n        {this.state.reports ? (\n          <Row>\n            <Col xs={24} sm={24} md={12} lg={8} xl={6}>\n              {this.state.reports ? this.renderReports() : <Spin />}\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={8} xl={6}>\n              {this.state.reports ? this.renderStocks() : <Spin />}\n            </Col>\n            <Col xs={24} sm={24} md={12} lg={8} xl={12}>\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                {this.state.reports ? (\n                  this.renderDailyCompletedTasks()\n                ) : (\n                  <Spin />\n                )}\n              </Col>\n              <Col xs={24} sm={24} md={24} lg={24} xl={24}>\n                <ExportCSV />\n              </Col>\n            </Col>\n          </Row>\n        ) : (\n          <Spin style={{ alignSelf: \"center\" }} />\n        )}\n      </Layout>\n    );\n  }\n}\n\nexport default StatisticsScreen;\n","import { Modal } from \"antd\";\nimport Axios from \"axios\";\nimport { API_ADDRESS } from \"..\";\nimport { GetToken } from \"../helper\";\n\nexport async function CreateProductionPlan(values: any, onSuccess: () => void) {\n  console.log(values);\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/ProductionPlan/CreatePlan\",\n    values,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res) {\n        onSuccess();\n        return true;\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: (\n          <p>Plan oluşturulurken bir hata oluştu lütfen tekrar deneyin..</p>\n        ),\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function CancelProductionPlan(\n  machineId: number,\n  onSuccess: () => void\n) {\n  const response = await Axios.put(\n    API_ADDRESS + `/api/ProductionPlan/CancelPlan/${machineId}`,\n    null,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      if (res) {\n        onSuccess();\n        return true;\n      }\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Hata\",\n        content: (\n          <p>Sipariş iptal edilirken bir hata oluştu.Lütfen tekrar deneyin..</p>\n        ),\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetProductionPlans() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionPlan/GetPlans\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetChassisProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetChassisProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetArmProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetArmProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function CreateGenericTask(data: {\n  title: string;\n  description: string;\n  group: string;\n  amount: number;\n}) {\n  console.log(data);\n  const response = await Axios.post(\n    API_ADDRESS + \"/api/Task/AddGenericTask\",\n    data,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function ModifyGenericTask(data: {\n  id: number;\n  new_group: string;\n}) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/Task/ModifyGenericTask\",\n    data,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetActiveGenericTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/Task/GetGenericTasksWeb\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\nexport async function GetGenericTaskWithRole(id: string) {\n  const response = await Axios.get(\n    API_ADDRESS + `/api/Task/GetGenericTasksWithRole/${id}`,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function GetFinishedGenericTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/Task/GetFinishedGenericTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n\nexport async function DeleteGenericTask(id: number) {\n  const response = await Axios.delete(\n    API_ADDRESS + \"/api/Task/DeleteGenericTask/\" + id,\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir hata oluştu\",\n        content: <p>Lütfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function DivideGenericTask(id: number, amount: number) {\n  const response = await Axios.put(\n    API_ADDRESS + \"/api/Task/DivideGenericTask/\" + id + \"/\" + amount,\n    {},\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return true;\n    })\n    .catch((err) => {\n      Modal.error({\n        title: \"Bir hata oluştu\",\n        content: <p>Lütfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function UpdateGenericTask(id: number, amount: number) {\n  const response = await Axios.put(\n    `${API_ADDRESS}/api/Task/UpdateGenericTask`,\n    {\n      id,\n      amount,\n    },\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      console.log(res);\n      return res;\n    })\n    .catch((err) => {\n      console.log(err);\n      Modal.error({\n        title: \"Bir hata oluştu\",\n        content: <p>Lütfen tekrar deneyin..</p>,\n        okText: \"Tamam\",\n      });\n      return false;\n    });\n\n  return response;\n}\n\nexport async function GetFanProductionTasks() {\n  const response = await Axios.get(\n    API_ADDRESS + \"/api/ProductionTasks/GetFanProductionTasks\",\n    {\n      headers: {\n        Authorization: \"Bearer \" + GetToken(),\n      },\n    }\n  )\n    .then((res) => {\n      return res.data;\n    })\n    .catch((err) => {\n      return null;\n    });\n\n  return response;\n}\n","/* eslint-disable eqeqeq */\nimport React, { createRef } from 'react';\nimport { Button, Calendar, Card, Col, Form, Popconfirm, Row, Select } from 'antd';\nimport { connect } from 'react-redux';\nimport { GetPendingOrders } from '../services/OrderService';\nimport Title from 'antd/lib/typography/Title';\nimport { CancelProductionPlan, CreateProductionPlan, GetProductionPlans } from '../services/ProductionPlanService';\nimport Text from 'antd/lib/typography/Text';\nimport { DeleteOutlined } from '@ant-design/icons';\nimport { FormInstance } from 'antd/lib/form';\nimport { CSVLink } from 'react-csv';\nimport { ConvertDateTime } from '../helper';\nimport * as XLSX from 'xlsx/xlsx.mjs';\n\nimport 'dayjs/locale/tr'\nimport dayjs, { Dayjs } from 'dayjs';\n\nconst { Option } = Select;\ndayjs.locale('tr')\n\nconst layout = {\n  labelCol: { span: 7 },\n  wrapperCol: { span: 17 },\n};\nconst tailLayout = {\n  wrapperCol: { offset: 8, span: 16 },\n};\n\nclass OrderPlanningScreen extends React.Component<any> {\n  configFile = JSON.parse(localStorage.getItem('config') ?? '{}');\n  formRef = createRef<FormInstance>();\n\n  constructor(props: any) {\n    super(props);\n    this.dateCellRender = this.dateCellRender.bind(this);\n    this.GetData = this.GetData.bind(this);\n  }\n\n  state = {\n    loading: true,\n    selectedDate: null as unknown as Dayjs,\n    pendingOrders: [] as unknown as [any],\n    data: [] as unknown as [any],\n    csvdata: [[]] as unknown as [[any]],\n  };\n\n  componentDidMount() {\n    this.GetData();\n  }\n\n  GetData() {\n    GetProductionPlans().then((res) => {\n      this.setState({ data: res });\n      console.log(res);\n      let csv = [['Planlanan Tarih', 'Müşteri', 'Seri No', 'Ürün', 'Durum']];\n\n      res.forEach((record: any) => csv.push([ConvertDateTime(record.planned_date), record.customer, record.serial_number, record.description, record.status]));\n      this.setState({ csvdata: csv, data: res, loading: false });\n    });\n    GetPendingOrders().then((res) => {\n      this.setState({ pendingOrders: res });\n    });\n  }\n\n  dateCellRender(value: Dayjs) {\n    const filteredData = this.state.data?.filter((data) => value.isSame(data.planned_date, 'day'));\n    return (\n      <ul style={{ margin: 0, padding: 0 }} className=\"events\">\n        {filteredData?.map((item) => (\n          <li key={item.serial_number}>\n            <Text style={{ fontSize: 8 }} ellipsis>\n              {item.serial_number}\n            </Text>\n          </li>\n        ))}\n      </ul>\n    );\n  }\n\n  onFinish = (values: any) => {\n    console.log('Success:', values);\n    CreateProductionPlan({ ...values, planned_date: this.state?.selectedDate.format() }, this.GetData).then(() => {\n      this.formRef.current?.resetFields();\n    });\n  };\n\n  onFinishFailed = (errorInfo: any) => {\n    console.log('Failed:', errorInfo);\n  };\n  SaveExcel = (data) =>{\n    console.log(\"clikced\");\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  }\n  render() {\n    const { selectedDate, pendingOrders } = this.state;\n    const { onFinish, onFinishFailed } = this;\n\n    return (\n      <>\n        <Row>\n          <Col md={24} lg={10}>\n            {selectedDate ? (\n              <>\n                <Card style={{ margin: '5%' }}>\n                  <Form {...layout} name=\"basic\" ref={this.formRef} onFinish={onFinish} onFinishFailed={onFinishFailed}>\n                    <Title level={5}>{`${selectedDate?.startOf('day').locale('tr').format('D MMMM YYYY')} Tarihine İş Ekle`}</Title>\n\n                    <Form.Item label=\"Üretilecek Makinalar\" name=\"machine_ids\" rules={[{ required: true, message: 'Lütfen en az bir makine seçin.' }]}>\n                      <Select mode=\"multiple\" optionFilterProp=\"children\" filterOption={(input, option) => option?.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}>\n                        {(() => {\n                          return pendingOrders?.map((order) => {\n                            return <Option value={order.id}>{order.customer + ' ' + order.serial_number}</Option>;\n                          });\n                        })()}\n                      </Select>\n                    </Form.Item>\n\n                    <Form.Item {...tailLayout}>\n                      {this.props.user.role == 'admin' && (\n                        <Button type=\"primary\" htmlType=\"submit\">\n                          Ekle\n                        </Button>\n                      )}\n                    </Form.Item>\n                  </Form>\n                </Card>\n                <Card style={{ margin: '5%' }}>\n                  {(() => {\n                    let tasks = this.state.data?.filter((data) => this.state.selectedDate?.isSame(data.planned_date, 'day'));\n                    return (\n                      <ul style={{ margin: 0, padding: 0 }} className=\"events\">\n                        {tasks?.map((item) => (\n                          <li key={item.serial_number}>\n                            <div style={{ width: '100%', display: 'flex', alignItems: 'center', justifyContent: 'space-between', margin: 5, padding: 2, borderBottom: '0.5px solid' }}>\n                              <Text ellipsis>{item.customer + ' - ' + item.serial_number}</Text>\n                              {this.props.user.role == 'admin' && (\n                                <Popconfirm\n                                  title=\"Bu planı silmek istediğinizden emin misiniz?\"\n                                  onConfirm={() => {\n                                    CancelProductionPlan(item.machine_id, this.GetData);\n                                  }}\n                                  okText=\"Evet\"\n                                  cancelText=\"Hayır\"\n                                >\n                                  <Button shape=\"circle\" icon={<DeleteOutlined />} danger />\n                                </Popconfirm>\n                              )}\n                            </div>\n                          </li>\n                        ))}\n                      </ul>\n                    );\n                  })()}\n                </Card>\n              </>\n            ) : null}\n          </Col>\n          <Col md={24} lg={14}>\n            <Button loading={this.state.loading} style={{ float: 'right' }} onClick={()=>this.SaveExcel(this.state.csvdata)}>\n              Excele Aktar\n            </Button>\n            <Calendar\n              onSelect={(date) => {\n                this.setState({ selectedDate: dayjs(date) });\n              }}\n              dateCellRender={this.dateCellRender}\n            />\n          </Col>\n        </Row>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state: { auth: { user: any } }, ownProps: any) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderPlanningScreen);\n","import { Spin, Timeline, Popconfirm, Button, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { RootState } from \"../redux/reducers\";\nimport {\n  GetArmHistory,\n  GetChassisHistory,\n  GetFanHistory,\n  GetOrderHistory,\n  sendToArm,\n  sendToChassis,\n  sendToFan,\n  UndoArmTo,\n  UndoChassisTo,\n  UndoFanTo,\n  UndoSendTo,\n} from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  machine_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n  partType: PartTypes;\n  details: any;\n}\n\nenum PartTypes {\n  arm,\n  fan,\n  chassis,\n}\n\nfunction PartsHistory(props: {\n  machine_id: number;\n  type: PartTypes;\n  details: any;\n}) {\n  const { machine_id, type, details } = props;\n  const [data, setData] = useState(null as unknown as []);\n  const user = useSelector((state: RootState) => state.auth.user);\n  const [lastLocation, setLastLocation] = useState(null) as any;\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    switch (type) {\n      case PartTypes.arm:\n        GetArmHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(\n              res?.reduce(\n                (\n                  a: { row_created_date: number },\n                  b: { row_created_date: number }\n                ) => (a.row_created_date > b.row_created_date ? a : b)\n              )\n            );\n          }\n        });\n        break;\n      case PartTypes.fan:\n        GetFanHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(\n              res?.reduce(\n                (\n                  a: { row_created_date: number },\n                  b: { row_created_date: number }\n                ) => (a.row_created_date > b.row_created_date ? a : b)\n              )\n            );\n          }\n        });\n        break;\n      case PartTypes.chassis:\n        GetChassisHistory(machine_id).then((res) => {\n          if (res.length > 0) {\n            setData(res);\n            setLastLocation(\n              res?.reduce(\n                (\n                  a: { row_created_date: number },\n                  b: { row_created_date: number }\n                ) => (a.row_created_date > b.row_created_date ? a : b)\n              )\n            );\n          }\n        });\n        break;\n    }\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item\n          key={\"timelinekey\" + timeline.row_created_date}\n          label={ConvertDateTime(timeline.row_created_date)}\n        >\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`Gönderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return data ? (\n    <Card\n      style={{ marginBottom: 5 }}\n      title={\n        type === PartTypes.arm\n          ? \"Kol İşlem Geçmişi\"\n          : type === PartTypes.chassis\n          ? \"Şase İşlem Geçmişi\"\n          : \"Fan İşlem Geçmişi\"\n      }\n    >\n      <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n        {renderTimeline()}\n      </Timeline>\n      {user.role === \"admin\" &&\n      lastLocation?.location !== \"onaybekliyor\" &&\n      lastLocation?.location !== \"iptal\" ? (\n        <Popconfirm\n          title=\"Bu parçayı bir sonraki konuma göndermek istediğinizden emin misiniz?\"\n          onConfirm={() => {\n            switch (type) {\n              case PartTypes.arm:\n                switch (lastLocation?.location) {\n                  case \"onproduction\":\n                    sendToArm(\n                      details.chassis_color === \"galvaniz\"\n                        ? \"sendedgalvaniz\"\n                        : \"sendedpaint\",\n                      details.machine_id,\n                      GetHistory\n                    );\n\n                    break;\n                  case \"sendedpaint\":\n                  case \"sendedgalvaniz\":\n                    sendToArm(\n                      details.chassis_color === \"galvaniz\"\n                        ? \"receivedgalvaniz\"\n                        : \"receivedpaint\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                    break;\n                  case \"receivedgalvaniz\":\n                  case \"receivedpaint\":\n                    sendToArm(\n                      \"sendedsaruhanli\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                    break;\n                  case \"sendedsaruhanli\":\n                    sendToArm(\n                      \"receivedsaruhanli\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                }\n                break;\n              case PartTypes.fan:\n                switch (lastLocation?.location) {\n                  case \"onproduction\":\n                    sendToFan(\n                      \"receivedsaruhanli\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                }\n                break;\n              case PartTypes.chassis:\n                console.log(\"lastLocation?.location\", lastLocation?.location);\n                switch (lastLocation?.location) {\n                  case \"onproduction\":\n                    sendToChassis(\n                      details.chassis_color === \"galvaniz\"\n                        ? \"sendedgalvaniz\"\n                        : \"sendedpaint\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                    break;\n                  case \"sendedpaint\":\n                  case \"sendedgalvaniz\":\n                    sendToChassis(\n                      details.chassis_color === \"galvaniz\"\n                        ? \"receivedgalvaniz\"\n                        : \"receivedpaint\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                    break;\n                  case \"receivedgalvaniz\":\n                  case \"receivedpaint\":\n                    sendToChassis(\n                      \"sendedsaruhanli\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                    break;\n                  case \"sendedsaruhanli\":\n                    sendToChassis(\n                      \"receivedsaruhanli\",\n                      details.machine_id,\n                      GetHistory\n                    );\n                }\n                break;\n            }\n          }}\n          okText=\"Evet\"\n          cancelText=\"Hayır\"\n        >\n          <Button style={{ marginBottom: 10 }} type=\"primary\">\n            Bir Sonraki Konuma Gönder\n          </Button>\n        </Popconfirm>\n      ) : null}\n    </Card>\n  ) : null;\n}\n\nfunction PartHistory(props: Props) {\n  const {\n    isVisible,\n    setIsVisible,\n    machine_id,\n    serial_number,\n    partType,\n    details,\n  } = props;\n  const [data, setData] = useState(null as unknown as []);\n\n  const [lastLocation, setLastLocation] = useState(null) as any;\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [machine_id]);\n\n  function GetHistory() {\n    GetOrderHistory(machine_id).then((res) => {\n      if (res) {\n        setData(res);\n        setLastLocation(\n          res?.reduce(\n            (\n              a: { row_created_date: number },\n              b: { row_created_date: number }\n            ) => (a.row_created_date > b.row_created_date ? a : b)\n          )\n        );\n      }\n    });\n  }\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item\n          key={\"timelinekey\" + timeline.row_created_date}\n          label={ConvertDateTime(timeline.row_created_date)}\n        >\n          <p>\n            <b>{ConvertOrderLocation(timeline.location)}</b>\n          </p>\n          <p>{`Gönderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return (\n    <Modal\n      title={serial_number + \" Numaralı Parçanın İşlem Geçmişi\"}\n      visible={isVisible}\n      footer={null}\n      onCancel={() => setIsVisible(false)}\n    >\n      <div\n        style={{\n          display: \"flex\",\n          width: \"100%\",\n          alignContent: \"center\",\n          alignItems: \"center\",\n          justifyContent: \"center\",\n        }}\n      >\n        {data ? (\n          <div\n            style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}\n          >\n            <PartsHistory\n              details={details}\n              machine_id={machine_id}\n              type={partType}\n            />\n            <Card title=\"Makine İşlem Geçmişi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n            {user.role === \"admin\" &&\n            lastLocation?.location !== \"onaybekliyor\" &&\n            lastLocation?.location !== \"iptal\" ? (\n              <Popconfirm\n                title=\"Bu parçayı bir önceki konuma göndermek istediğinizden emin misiniz?\"\n                onConfirm={() => {\n                  switch (partType) {\n                    case PartTypes.arm:\n                      UndoArmTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                    case PartTypes.fan:\n                      UndoFanTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                    case PartTypes.chassis:\n                      UndoChassisTo(machine_id).then((res) => {\n                        if (res) {\n                          GetHistory();\n                        }\n                      });\n                      break;\n                  }\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <Button style={{ marginBottom: 10 }} type=\"primary\">\n                  Bir Önceki Konuma Geri Gönder\n                </Button>\n              </Popconfirm>\n            ) : null}\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default PartHistory;\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { GetChassisProductionTasks } from \"../services/ProductionPlanService\";\nimport { renderToString } from \"react-dom/server\";\nimport QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport PartHistory from \"../components/PartsHistory\";\nimport ExcelJS from \"exceljs\";\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\nconst getBase64FromUrl = async (url) => {\n  const data = await fetch(url);\n  const blob = await data.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      resolve(base64data);\n    };\n  });\n};\n\nfunction exportWithExcel(data) {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n  sheet.properties.defaultRowHeight = 80;\n\n  sheet.columns = [\n    { header: \"Sipariş Numarası\", key: \"order_no\", width: 10 },\n    { header: \"Seri No\", key: \"serial_number\", width: 32 },\n    { header: \"Tip\", key: \"type\", width: 32 },\n    { header: \"Marka\", key: \"brand\", width: 32 },\n    { header: \"Model\", key: \"description\", width: 32 },\n    { header: \"Fan Tipi\", key: `cooler_type`, width: 32 },\n    { header: \"Şase Rengi\", key: `chassis_color`, width: 32 },\n    { header: \"Depo Boyutu\", key: `tank_size`, width: 32 },\n    { header: \"Alternatif Özellikler\", key: `alt_features`, width: 64 },\n    { header: \"Durum\", key: `location`, width: 32 },\n    { header: \"Son İşlem Tarihi\", key: `row_updated_date`, width: 32 },\n\n    {\n      header: \"QR\",\n      key: \"qr_code\",\n      width: 30,\n    },\n  ];\n\n  const promise = Promise.all(\n    data?.map(async (item, index) => {\n      const rowNumber = index + 1;\n      sheet.addRow({\n        order_no: item?.order_no,\n        serial_number: item?.serial_number,\n        type: configFile.type.filter((b) => b.type === item.type)[0]?.text\n          ? configFile.type.filter((b) => b.type === item.type)[0]?.text\n          : configFile.machine_type.filter((b) => b.type === item.type)[0]\n              ?.text,\n        brand: configFile.brand.filter((b) => b.type === item.brand)[0]?.text,\n        description: item.description,\n\n        cooler_type: configFile.cooler_type.filter(\n          (b) => b.type === item.cooler_type\n        )[0]?.text,\n        chassis_color: configFile.chassis_color.filter(\n          (b) => b.type === item.chassis_color\n        )[0]?.text,\n        tank_size: item.tank_size + \" LT\",\n        location: item?.location,\n        alt_features: item?.alt_features,\n        row_updated_date: item?.row_updated_date,\n      });\n      let qrCodeValue = \"SU\" + item.serial_number;\n\n      let url = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrCodeValue}`;\n\n      const res = await getBase64FromUrl(url);\n\n      const imageId2 = workbook.addImage({\n        base64: res,\n        extension: \"jpg\",\n      });\n\n      sheet.addImage(imageId2, {\n        tl: { col: 11, row: rowNumber },\n        ext: { width: 100, height: 100 },\n      });\n    })\n  );\n  promise.then(() => {\n    const priceCol = sheet.getColumn(5);\n    priceCol.eachCell((cell) => {\n      const cellValue = sheet.getCell(cell?.address).value;\n      if (cellValue > 50 && cellValue < 1000) {\n        sheet.getCell(cell?.address).fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FF0000\" },\n        };\n      }\n    });\n    workbook.xlsx.writeBuffer().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.download = \"download.xlsx\";\n      anchor.click();\n      window.URL.revokeObjectURL(url);\n    });\n  });\n}\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Tip\",\n        dataIndex: \"type\",\n        sorter: (a, b) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps(\"type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Marka\",\n        dataIndex: \"brand\",\n        sorter: (a, b) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps(\"brand\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Model\",\n        dataIndex: \"description\",\n        sorter: (a, b) =>\n          a.description &&\n          a.description.localeCompare(b.description && b.description),\n        ...this.getColumnSearchProps(\"model\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Fan Tipi\",\n        dataIndex: \"cooler_type\",\n        sorter: (a, b) =>\n          a.cooler_type &&\n          a.cooler_type.localeCompare(b.cooler_type && b.cooler_type),\n        ...this.getColumnSearchProps(\"cooler_type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Şase Rengi\",\n        dataIndex: \"chassis_color\",\n        sorter: (a, b) =>\n          a.chassis_color &&\n          a.chassis_color.localeCompare(b.chassis_color && b.chassis_color),\n        ...this.getColumnSearchProps(\"cooler_type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Depo Boyutu\",\n        dataIndex: \"tank_size\",\n        sorter: (a, b) => a.tank_size - b.tank_size,\n        ...this.getColumnSearchProps(\"tank_size\"),\n      },\n      {\n        title: \"Durum\",\n        dataIndex: \"location\",\n        sorter: (a, b) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps(\"location\"),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a, b) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode(\"SU\" + order.serial_number);\n                }}\n              >\n                QR Kodu Yazdır\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.setState({\n                    historyModalVisible: true,\n                    historyModalId: order.machine_id,\n                    orderSelected: {\n                      ...order,\n                      serial_number: order.serial_number,\n                      order_id: order.id,\n                    },\n                  });\n                }}\n              >\n                İşlem Geçmişi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetChassisProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [\n        [\n          \"Sipariş No\",\n          \"Seri No\",\n          \"Tip\",\n          \"Marka\",\n          \"Ürün\",\n          \"Fan Tipi\",\n          \"Şase Rengi\",\n          \"Kazan Boyutu\",\n          \"Durum\",\n          \"Son İşlem Tarihi\",\n        ],\n      ];\n\n      data?.forEach((record) =>\n        csv.push([\n          record.order_no,\n          record.serial_number,\n          record.type,\n          record.brand,\n          record.description,\n          record.cooler_type,\n          record.chassis_color,\n          record.tank_size,\n          record.location,\n          record.row_updated_date,\n        ])\n      );\n\n      this.setState({ csvdata: csv, loading: false });\n    });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.serial_number}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <Button style={{ float: \"right\", marginRight: 10 }} type=\"default\">\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        <Button\n          loading={this.state.loading}\n          style={{\n            float: \"right\",\n            marginLeft: \"1rem\",\n            marginRight: \"1rem\",\n          }}\n          type=\"primary\"\n          onClick={() => exportWithExcel(this?.state?.data)}\n        >\n          QR Kod\n        </Button>\n        {this.state.historyModalVisible ? (\n          <PartHistory\n            details={this.state.orderSelected}\n            key={this.state.historyModalId}\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            partType={2}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { GetArmProductionTasks } from \"../services/ProductionPlanService\";\nimport { renderToString } from \"react-dom/server\";\nimport QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport PartHistory from \"../components/PartsHistory\";\nimport ExcelJS from \"exceljs\";\nimport { renderProperties } from \"./OrderScreen\";\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst getBase64FromUrl = async (url) => {\n  const data = await fetch(url);\n  const blob = await data.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      resolve(base64data);\n    };\n  });\n};\n\nfunction exportWithExcel(data) {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n  sheet.properties.defaultRowHeight = 80;\n\n  sheet.columns = [\n    { header: \"Sipariş Numarası\", key: \"order_no\", width: 10 },\n    { header: \"Seri No\", key: \"serial_number\", width: 32 },\n    { header: \"Tip\", key: \"type\", width: 32 },\n    { header: \"Marka\", key: \"brand\", width: 32 },\n    { header: \"Model\", key: \"description\", width: 32 },\n    { header: \"Kol Tipi\", key: `arm_type`, width: 32 },\n    { header: \"Kol Uzunluğu\", key: `arm_length`, width: 32 },\n    { header: \"Alternatif Özellikler\", key: `alt_features`, width: 64 },\n    { header: \"Durum\", key: `location`, width: 32 },\n    { header: \"Son İşlem Tarihi\", key: `row_updated_date`, width: 32 },\n\n    {\n      header: \"QR\",\n      key: \"qr_code\",\n      width: 30,\n    },\n  ];\n\n  const promise = Promise.all(\n    data?.map(async (item, index) => {\n      const rowNumber = index + 1;\n      sheet.addRow({\n        order_no: item?.order_no,\n        serial_number: item?.serial_number,\n        type: configFile.type.filter((b) => b.type === item.type)[0]?.text\n          ? configFile.type.filter((b) => b.type === item.type)[0]?.text\n          : configFile.machine_type.filter((b) => b.type === item.type)[0]\n              ?.text,\n        brand: configFile.brand.filter((b) => b.type === item.brand)[0]?.text,\n        description: item.description,\n        arm_type: configFile.arm_type.filter((b) => b.type === item.arm_type)[0]\n          ?.text,\n        arm_length: item.arm_length,\n        location: item?.location,\n        alt_features: item?.alt_features,\n        row_updated_date: item?.row_updated_date,\n      });\n      let qrCodeValue = \"KU\" + item.serial_number;\n\n      let url = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrCodeValue}`;\n\n      const res = await getBase64FromUrl(url);\n\n      const imageId2 = workbook.addImage({\n        base64: res,\n        extension: \"jpg\",\n      });\n\n      sheet.addImage(imageId2, {\n        tl: { col: 10, row: rowNumber },\n        ext: { width: 100, height: 100 },\n      });\n    })\n  );\n  promise.then(() => {\n    const priceCol = sheet.getColumn(5);\n    priceCol.eachCell((cell) => {\n      const cellValue = sheet.getCell(cell?.address).value;\n      if (cellValue > 50 && cellValue < 1000) {\n        sheet.getCell(cell?.address).fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FF0000\" },\n        };\n      }\n    });\n    workbook.xlsx.writeBuffer().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.download = \"download.xlsx\";\n      anchor.click();\n      window.URL.revokeObjectURL(url);\n    });\n  });\n}\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Tip\",\n        dataIndex: \"type\",\n        sorter: (a, b) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps(\"type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Marka\",\n        dataIndex: \"brand\",\n        sorter: (a, b) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps(\"brand\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Model\",\n        dataIndex: \"description\",\n        sorter: (a, b) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"model\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Kol Tipi\",\n        dataIndex: \"arm_type\",\n        sorter: (a, b) =>\n          a.arm_type && a.arm_type.localeCompare(b.arm_type && b.arm_type),\n        ...this.getColumnSearchProps(\"arm_type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Kol Uzunluğu\",\n        dataIndex: \"arm_length\",\n        sorter: (a, b) => a.arm_length.localeCompare(b.arm_length),\n        ...this.getColumnSearchProps(\"arm_length\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Durum\",\n        dataIndex: \"location\",\n        sorter: (a, b) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps(\"location\"),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a, b) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode(\"KU\" + order.serial_number);\n                }}\n              >\n                QR Kodu Yazdır\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.setState({\n                    historyModalVisible: true,\n                    historyModalId: order.machine_id,\n                    orderSelected: {\n                      ...order,\n                      serial_number: order.serial_number,\n                      order_id: order.id,\n                    },\n                  });\n                }}\n              >\n                İşlem Geçmişi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value, amount) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetArmProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [\n        [\n          \"Sipariş No\",\n          \"Seri No\",\n          \"Tip\",\n          \"Marka\",\n          \"Ürün\",\n          \"Kol Tipi\",\n          \"Kol Uzunluğu\",\n          \"Durum\",\n          \"Son İşlem Tarihi\",\n        ],\n      ];\n\n      data?.forEach((record) =>\n        csv.push([\n          record.order_no,\n          record.serial_number,\n          record.type,\n          record.brand,\n          record.description,\n          record.arm_type,\n          record.arm_length,\n          record.location,\n          record.row_updated_date,\n        ])\n      );\n\n      this.setState({ csvdata: csv, loading: false });\n    });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.serial_number}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Button\n          loading={this.state.loading}\n          style={{ float: \"right\", marginRight: 10 }}\n          type=\"default\"\n        >\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        <Button\n          loading={this.state.loading}\n          style={{\n            float: \"right\",\n            marginLeft: \"1rem\",\n            marginRight: \"1rem\",\n          }}\n          type=\"primary\"\n          onClick={() => exportWithExcel(this?.state?.data)}\n        >\n          QR Kod\n        </Button>\n        {this.state.historyModalVisible ? (\n          <PartHistory\n            details={this.state.orderSelected}\n            key={this.state.historyModalId}\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            partType={0}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport { GetFanProductionTasks } from \"../services/ProductionPlanService\";\nimport { renderToString } from \"react-dom/server\";\nimport QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport PartHistory from \"../components/PartsHistory\";\nimport ExcelJS from \"exceljs\";\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst getBase64FromUrl = async (url) => {\n  const data = await fetch(url);\n  const blob = await data.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      resolve(base64data);\n    };\n  });\n};\n\nfunction exportWithExcel(data) {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n  sheet.properties.defaultRowHeight = 80;\n\n  sheet.columns = [\n    { header: \"Sipariş Numarası\", key: \"order_no\", width: 10 },\n    { header: \"Seri No\", key: \"serial_number\", width: 32 },\n    { header: \"Tip\", key: \"type\", width: 32 },\n    { header: \"Marka\", key: \"brand\", width: 32 },\n    { header: \"Model\", key: \"description\", width: 32 },\n    { header: \"Fan Tipi\", key: `fan_type`, width: 32 },\n    { header: \"Pervane Tipi\", key: `cooler_type`, width: 32 },\n    { header: \"Pervane Çapı\", key: `fan_radius`, width: 32 },\n    { header: \"Meme Tipi\", key: `meme_type`, width: 32 },\n    { header: \"Durum\", key: `location`, width: 32 },\n    { header: \"Alternatif Özellikler\", key: `alt_features`, width: 64 },\n    { header: \"Son İşlem Tarihi\", key: `row_updated_date`, width: 32 },\n\n    {\n      header: \"QR\",\n      key: \"qr_code\",\n      width: 30,\n    },\n  ];\n\n  const promise = Promise.all(\n    data?.map(async (item, index) => {\n      const rowNumber = index + 1;\n      sheet.addRow({\n        order_no: item?.order_no,\n        serial_number: item?.serial_number,\n        type: configFile.type.filter((b) => b.type === item.type)[0]?.text\n          ? configFile.type.filter((b) => b.type === item.type)[0]?.text\n          : configFile.machine_type.filter((b) => b.type === item.type)[0]\n              ?.text,\n        brand: configFile.brand.filter((b) => b.type === item.brand)[0]?.text,\n        description: item.description,\n        fan_type: item?.fan_type,\n        cooler_type: configFile.cooler_type.filter(\n          (b) => b.type === item.cooler_type\n        )[0]?.text,\n        fan_radius: item?.fan_radius,\n        meme_type: item.meme_type,\n        location: item?.location,\n        alt_features: item?.alt_features,\n        row_updated_date: item?.row_updated_date,\n      });\n      let qrCodeValue = \"FU\" + item.serial_number;\n\n      let url = `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrCodeValue}`;\n\n      const res = await getBase64FromUrl(url);\n\n      const imageId2 = workbook.addImage({\n        base64: res,\n        extension: \"jpg\",\n      });\n\n      sheet.addImage(imageId2, {\n        tl: { col: 12, row: rowNumber },\n        ext: { width: 100, height: 100 },\n      });\n    })\n  );\n  promise.then(() => {\n    const priceCol = sheet.getColumn(5);\n    priceCol.eachCell((cell) => {\n      const cellValue = sheet.getCell(cell?.address).value;\n      if (cellValue > 50 && cellValue < 1000) {\n        sheet.getCell(cell?.address).fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FF0000\" },\n        };\n      }\n    });\n    workbook.xlsx.writeBuffer().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.download = \"download.xlsx\";\n      anchor.click();\n      window.URL.revokeObjectURL(url);\n    });\n  });\n}\n\nclass ChassisProductionTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Tip\",\n        dataIndex: \"type\",\n        sorter: (a, b) => a.type.localeCompare(b.type),\n        ...this.getColumnSearchProps(\"type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Marka\",\n        dataIndex: \"brand\",\n        sorter: (a, b) => a.brand.localeCompare(b.brand),\n        ...this.getColumnSearchProps(\"brand\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Model\",\n        dataIndex: \"description\",\n        sorter: (a, b) => a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"model\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Fan Tipi\",\n        dataIndex: \"cooler_type\",\n        sorter: (a, b) =>\n          a.cooler_type &&\n          a.cooler_type.localeCompare(b.cooler_type && b.cooler_type),\n        ...this.getColumnSearchProps(\"cooler_type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Pervane Tipi\",\n        dataIndex: \"fan_type\",\n        sorter: (a, b) =>\n          a.fan_type && a.fan_type.localeCompare(b.fan_type && b.fan_type),\n        ...this.getColumnSearchProps(\"fan_type\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Pervane Çapı\",\n        dataIndex: \"fan_radius\",\n        sorter: (a, b) => a.fan_radius - b.fan_radius,\n        ...this.getColumnSearchProps(\"fan_radius\"),\n      },\n      {\n        title: \"Meme Tipi\",\n        dataIndex: \"meme_type\",\n        sorter: (a, b) => a.meme_type - b.meme_type,\n        ...this.getColumnSearchProps(\"meme_type\"),\n      },\n      {\n        title: \"Durum\",\n        dataIndex: \"location\",\n        sorter: (a, b) => a.location.localeCompare(b.location),\n        ...this.getColumnSearchProps(\"location\"),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a, b) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode(\"FU\" + order.serial_number);\n                }}\n              >\n                QR Kodu Yazdır\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n      {\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  console.log(\"ID:\" + order.machine_id);\n                  this.setState({\n                    historyModalVisible: true,\n                    historyModalId: order.machine_id,\n                    orderSelected: {\n                      ...order,\n                      serial_number: order.serial_number,\n                      order_id: order.id,\n                    },\n                  });\n                }}\n              >\n                İşlem Geçmişi\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value, amount) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidMount = async () => {\n    GetFanProductionTasks().then((data) => {\n      data = data?.map((data) => {\n        return {\n          ...data,\n          location: ConvertOrderLocation(data.location),\n          row_updated_date: ConvertDateTime(data.row_updated_date),\n        };\n      });\n\n      this.setState({ data });\n\n      let csv = [\n        [\n          \"Sipariş No\",\n          \"Seri No\",\n          \"Tip\",\n          \"Marka\",\n          \"Ürün\",\n          \"Fan Tipi\",\n          \"Pervane Tipi\",\n          \"Pervane Çapı\",\n          \"Meme Tipi\",\n          \"Durum\",\n          \"Son İşlem Tarihi\",\n        ],\n      ];\n\n      data?.forEach((record) =>\n        csv.push([\n          record.order_no,\n          record.serial_number,\n          record.type,\n          record.brand,\n          record.description,\n          record.cooler_type,\n          record.fan_type,\n          record.fan_radius,\n          record.meme_type,\n          record.location,\n          record.row_updated_date,\n        ])\n      );\n\n      this.setState({ csvdata: csv, loading: false });\n    });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <Button style={{ float: \"right\", marginRight: 10 }} type=\"default\">\n          <CSVLink separator=\"$\" data={state.csvdata}>\n            CSV'ye aktar\n          </CSVLink>\n        </Button>\n        <Button\n          loading={this.state.loading}\n          style={{\n            float: \"right\",\n            marginLeft: \"1rem\",\n            marginRight: \"1rem\",\n          }}\n          type=\"primary\"\n          onClick={() => exportWithExcel(this?.state?.data)}\n        >\n          QR Kod\n        </Button>\n        {this.state.historyModalVisible ? (\n          <PartHistory\n            details={this.state.orderSelected}\n            key={this.state.historyModalId}\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            partType={1}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ChassisProductionTasksScreen);\n","import { Spin, Timeline, Card } from \"antd\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { RootState } from \"../redux/reducers\";\nimport { GetGenericTaskHistory } from \"../services/OrderService\";\n\ninterface Props {\n  isVisible: boolean;\n  task_id: number;\n  serial_number: string;\n  setIsVisible: (bool: boolean) => void;\n}\n\nconst config: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nfunction GenericTaskHistory(props: Props) {\n  const { isVisible, setIsVisible, task_id } = props;\n  const [data, setData] = useState((null as unknown) as []);\n\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  useEffect(() => {\n    GetHistory();\n  }, [task_id]);\n\n  function GetHistory() {\n    GetGenericTaskHistory(task_id).then((res) => {\n      if (res) {\n        setData(res);\n      }\n    });\n  }\n\n  function renderTimeline() {\n    return data?.map((timeline: any) => {\n      return (\n        <Timeline.Item key={\"timelinekey\" + timeline.row_created_date} label={ConvertDateTime(timeline.row_created_date)}>\n          <p>\n            <b>{config.role.find((role) => role.type === timeline.location)?.text}</b>\n          </p>\n          <p>{`Gönderen: ${timeline.name} ${timeline.surname}`}</p>\n        </Timeline.Item>\n      );\n    });\n  }\n\n  return (\n    <Modal title={task_id + \" Numaralı Makinenin İşlem Geçmişi\"} visible={isVisible} footer={null} onCancel={() => setIsVisible(false)}>\n      <div style={{ display: \"flex\", width: \"100%\", alignContent: \"center\", alignItems: \"center\", justifyContent: \"center\" }}>\n        {data ? (\n          <div style={{ display: \"flex\", flexDirection: \"column\", width: \"100%\" }}>\n            <Card title=\"Makine İşlem Geçmişi\" style={{ marginBottom: 5 }}>\n              <Timeline mode=\"left\" style={{ width: \"100%\" }}>\n                {renderTimeline()}\n              </Timeline>\n            </Card>\n          </div>\n        ) : (\n          <Spin size=\"large\" />\n        )}\n      </div>\n    </Modal>\n  );\n}\n\nexport default GenericTaskHistory;\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode, useState } from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Select,\n  Card,\n  InputNumber,\n  Popconfirm,\n  Popover,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder } from \"../services/OrderService\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport {\n  DivideGenericTask,\n  DeleteGenericTask,\n  GetActiveGenericTasks,\n  CreateGenericTask,\n  GetFinishedGenericTasks,\n  ModifyGenericTask,\n  UpdateGenericTask,\n} from \"../services/ProductionPlanService\";\nimport { connect } from \"react-redux\";\nimport GenericTaskHistory from \"../components/TaskHistory\";\nimport * as XLSX from \"xlsx/xlsx.mjs\";\nimport { GetGenericTaskRoleAuthorizationList } from \"../services/NeedListService\";\n\nconst config: IAgrotekConfig = JSON.parse(\n  localStorage.getItem(\"config\") ?? \"{}\"\n);\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst DivideContent = (Props) => {\n  const [amount, setAmount] = useState(1);\n\n  return (\n    <div>\n      <InputNumber\n        max={Props.maxAmount}\n        style={{ width: \"70%\" }}\n        size=\"large\"\n        defaultValue={1}\n        formatter={(value) => `Bölünen Miktar ${value}`}\n        parser={(value) => value.split(\"Bölünen Miktar \")[1]}\n        onChange={(value) => setAmount(value)}\n      />\n      <Button\n        danger\n        size=\"large\"\n        style={{ marginLeft: 10 }}\n        onClick={() => {\n          DivideGenericTask(Props.id, amount).then((res) => {\n            if (res) Props.getTasks();\n          });\n        }}\n      >\n        Böl\n      </Button>\n    </div>\n  );\n};\n\nclass GenericTasksScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    selectedRole: \"anasiparis\",\n    selectedUnit: \"adet\",\n    authorizationList: [],\n    csvdata: [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Kazan Tipi\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ],\n    loading: false,\n    data: [],\n    columns: [\n      {\n        title: \"Görev No\",\n        dataIndex: \"id\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.id - b.id,\n        ...this.getColumnSearchProps(\"id\"),\n      },\n      {\n        title: \"Grup\",\n        dataIndex: \"last_location\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.last_location.localeCompare(b.last_location),\n        ...this.getColumnSearchProps(\"last_location\"),\n        render: (text: string, data) => (\n          <td>\n            {this.props.isActive ? (\n              <Select\n                value={text}\n                size=\"large\"\n                style={{ width: 200 }}\n                onChange={(value) => {\n                  ModifyGenericTask({ id: data.id, new_group: value }).then(\n                    (res) => {\n                      this.GetTasks();\n                    }\n                  );\n                }}\n              >\n                {(() => {\n                  console.log(this.state.authorizationList);\n                  return this.state.authorizationList?.map((permission) => {\n                    return (\n                      <Select.Option value={permission.authority}>\n                        {\n                          config.role?.find(\n                            (role) => role.type === permission.authority\n                          )?.text\n                        }\n                      </Select.Option>\n                    );\n                  });\n                })()}\n              </Select>\n            ) : (\n              (() => {\n                return config.role?.map((role) => {\n                  if (role.type == text) return <p>{role.text}</p>;\n                });\n              })()\n            )}\n          </td>\n        ),\n      },\n      {\n        title: \"Başlık\",\n        dataIndex: \"title\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.title.localeCompare(b.title),\n        ...this.getColumnSearchProps(\"title\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Ek Açıklama\",\n        dataIndex: \"description\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"description\"),\n        render: (text: string) => <td>{text ? Capitalize(text) : \"\"}</td>,\n      },\n      {\n        title: \"Miktar\",\n        dataIndex: \"amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          parseInt(a.amount.split(\" \")[0]) - parseInt(b.amount.split(\" \")[0]),\n      },\n      {\n        title: \"Tamamlanan\",\n        dataIndex: \"completed_amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.completed_amount - b.completed_amount,\n      },\n      {\n        title: \"Görev Verilme Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        ...this.getColumnSearchProps(\"row_created_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n\n      {\n        title: \"İşlemler\",\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {(this.props.user.role == \"admin\" ||\n              this.props.user.role == \"ambar1\") &&\n            order.last_location == \"ambar1\" &&\n            order.title == \"QR Kod Basımı\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi tamamlamak istediğinizden eminmisiniz? <br /> Bu\n                    işlem geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  UpdateGenericTask(order.id, 1).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <Button style={{ margin: 5 }} block size=\"large\" type=\"primary\">\n                  Tamamla\n                </Button>\n              </Popconfirm>\n            ) : null}\n            {this.props.user.role == \"admin\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi silmek istediğinizden eminmisiniz? <br /> Bu işlem\n                    geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  DeleteGenericTask(order.id).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayir\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Sil\n                </Button>\n              </Popconfirm>\n            ) : null}\n            <Button\n              block\n              style={{ margin: 5 }}\n              onClick={() => {\n                this.setState({\n                  isModalVisible: true,\n                  selectedTaskId: order.id,\n                });\n              }}\n              size=\"large\"\n              type=\"primary\"\n            >\n              İşlem Geçmişi\n            </Button>\n            {this.props.user.role !== \"depo\" ||\n            (this.props.user.role == \"depo\" &&\n              order.completed_amount == 0 &&\n              this.props.isActive) ? (\n              <Popover\n                content={\n                  <DivideContent\n                    maxAmount={parseInt(order.amount.split(\" \")[0]) - 1}\n                    id={order.id}\n                    getTasks={this.GetTasks.bind(this)}\n                  />\n                }\n                title={\n                  <>\n                    Görevin tamamlanan ve kalan kısmını ayırmak istediğinizden\n                    emin misiniz? <br /> Bu işlem geri alınamaz\n                  </>\n                }\n                trigger=\"click\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Böl\n                </Button>\n              </Popover>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.GetTasks();\n    GetGenericTaskRoleAuthorizationList(this.props.user.role).then((res) => {\n      if (res) {\n        this.setState({ authorizationList: res });\n      }\n    });\n  }\n\n  componentWillReceiveProps = (newProps, oldProps) => {\n    setTimeout(() => {\n      this.GetTasks();\n      GetGenericTaskRoleAuthorizationList(this.props.user.role).then((res) => {\n        if (res) {\n          this.setState({ authorizationList: res });\n        }\n      });\n    }, 500);\n  };\n\n  GetTasks() {\n    let isActive = this.props.isActive;\n    console.log(isActive);\n    this.setState({ loading: true });\n    let csvdata = [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ];\n\n    if (isActive) {\n      GetActiveGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([\n            task.id,\n            task.last_location,\n            task.title,\n            task.description,\n            task.amount,\n            task.completed_amount,\n            ConvertDateTime(task.row_created_date),\n            ConvertDateTime(task.row_updated_date),\n          ]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    } else {\n      GetFinishedGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([\n            task.id,\n            task.last_location,\n            task.title,\n            task.description,\n            task.amount,\n            task.completed_amount,\n            ConvertDateTime(task.row_created_date),\n            ConvertDateTime(task.row_updated_date),\n          ]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    }\n  }\n  SaveExcel = (data) => {\n    console.log(\"clikced\");\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    console.log(\"sasa\", state.authorizationList);\n    return (\n      <>\n        <div>\n          <Card>\n            {this.props.user.role === \"admin\" && (\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"row\",\n                  flexWrap: \"nowrap\",\n                  marginBottom: 5,\n                }}\n              >\n                <Input\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedTitle: e.target.value });\n                  }}\n                  value={this.state.selectedTitle}\n                  style={{ width: 500 }}\n                  size=\"large\"\n                  addonBefore=\"Görev\"\n                  placeholder=\"Görev Tanımı\"\n                />\n                <Input\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedDescription: e.target.value });\n                  }}\n                  value={this.state.selectedDescription}\n                  style={{ width: 500, marginLeft: 25, marginRight: 25 }}\n                  size=\"large\"\n                  addonBefore=\"Açıklama?\"\n                  placeholder=\"Opsiyonel\"\n                />\n                <Input.Group compact>\n                  <InputNumber\n                    disabled={!this.props.isActive}\n                    onChange={(e) => {\n                      this.setState({ selectedAmount: e });\n                    }}\n                    value={this.state.selectedAmount}\n                    style={{ width: 100 }}\n                    min={1}\n                    placeholder=\"0\"\n                    size=\"large\"\n                  />\n                  <Input\n                    disabled={!this.props.isActive}\n                    onChange={(e) => {\n                      this.setState({ selectedUnit: e.target.value });\n                    }}\n                    value={this.state.selectedUnit}\n                    style={{ width: 100 }}\n                    defaultValue=\"adet\"\n                    size=\"large\"\n                  />\n                </Input.Group>\n                <Button\n                  style={styles.button}\n                  type=\"primary\"\n                  loading={this.state.addTaskButtonLoading}\n                  disabled={\n                    !state.selectedAmount ||\n                    !state.selectedTitle ||\n                    !state.selectedRole\n                  }\n                  onClick={() => {\n                    this.setState({ addTaskButtonLoading: true });\n                    CreateGenericTask({\n                      title: state.selectedTitle,\n                      description: state.selectedDescription,\n                      group: state.selectedRole,\n                      amount: state.selectedAmount,\n                      unit: state.selectedUnit,\n                    }).then((res) => {\n                      if (res) {\n                        this.setState({\n                          selectedTitle: null,\n                          selectedDescription: null,\n                          selectedAmount: null,\n                          selectedUnit: \"adet\",\n                        });\n                        this.GetTasks();\n                      }\n                      this.setState({ addTaskButtonLoading: false });\n                    });\n                  }}\n                >\n                  Emir Oluştur\n                </Button>\n              </div>\n            )}\n            <Button\n              style={{ ...styles.button, float: \"right\" }}\n              onClick={() => this.SaveExcel(this.state.csvdata)}\n            >\n              Emirleri Excele Aktar\n            </Button>\n          </Card>\n        </div>\n\n        <Table\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          style={{ maxWidth: \"99.5%\" }}\n          loading={this.state.loading}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <GenericTaskHistory\n          isVisible={this.state.isModalVisible}\n          task_id={this.state.selectedTaskId}\n          setIsVisible={(value) => this.setState({ isModalVisible: value })}\n        />\n      </>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(GenericTasksScreen);\n","import { Card, Table } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { GetTotalNeeds } from \"../services/NeedListService\";\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nfunction OtherNeedListScreen(props: Props) {\n  function NeedsListTable(props: { value: number | string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetTotalNeeds(value).then((res) => {\n        console.log(res);\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: \"Ürün Adı\",\n        dataIndex: \"name\",\n        key: \"type\",\n        width: 50,\n      },\n      {\n        title: \"Gereken Miktar\",\n        dataIndex: \"amount\",\n        width: 50,\n      },\n    ];\n    return (\n      <Card style={{ width: \"60%\", marginBottom: \"1%\", marginTop: \"2%\" }}>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{text}</b>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n        {(() => {\n          return configFile[\"tank_size\"]\n            .sort((a, b) => parseInt(b.type) - parseInt(a.type))\n            .map((tank_size) => {\n              return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.type} LT Tank İçin İhtiyaç Listesi`} />;\n            });\n        })()}\n      </div>\n    </>\n  );\n}\n\nexport default OtherNeedListScreen;\n","import { Button, Card, Form, Input, Popover, Table } from 'antd';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { addConfig } from '../services/ConfigService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nfunction UserRollsConfigScreen(props: Props) {\n \n    function renderTable() {\n      return Object.keys(configFile).map((key) => {\n        let configs = configFile[key];\n        if(key =='role'){\n          let configNew = configs as ISerializationEffectiveField[];\n          return renderTripleColumnTable(configNew, key);\n        }\n        /*if (typeof configs == 'object') {\n          console.log(configs);\n          if (Object.keys(configs[0]).length === 2) {\n            return renderDoubleColumnTable(configs as ISerializationUnEffectiveField[], key);\n          } else if (Object.keys(configs[0]).length === 3) {\n            return renderTripleColumnTable(configs as ISerializationEffectiveField[], key);\n          }\n        }*/\n        return null;\n      });\n    }\n      \n    function renderTripleColumnTable(config: ISerializationEffectiveField[], key: string) {\n      const columns = [\n        {\n          title: 'Tip',\n          dataIndex: 'type',\n          width: 33,\n        },\n        {\n          title: 'Gösterim',\n          dataIndex: 'text',\n          width: 33,\n        },\n        {\n          title: 'İşlem',\n          dataIndex: 'shortend',\n          width: 34,\n        }\n      ];\n      const data = config?.sort((a: any, b: any) => a.type.localeCompare(b.type))\n      return (\n        <Card key='hello' style={{ marginBottom: 10 }}>\n          <Table\n            pagination={false}\n            style={{ width: '100%' }}\n            title={() => (\n              <>\n                <b>Kullanıcı Rolleri</b>\n                <Popover\n                  content={\n                    <Form\n                      layout=\"vertical\"\n                      onFinish={(values) => {\n                        addConfig(String(key), values);\n                      }}\n                    >\n                      <Form.Item\n                        name=\"type\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Lütfen sadece küçük harf ve boşluksuz yazın.',\n                          },\n                        ]}\n                        label=\"Tip\"\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item name=\"text\" label=\"Gösterim\">\n                        <Input />\n                      </Form.Item>\n                      <Form.Item\n                        name=\"shortend\"\n                        label=\"Kısaltma\"\n                        rules={[\n                          {\n                            required: true,\n                            message: 'Lütfen sadece büyük harf yazın, ve harf sayısına dikkat edin.',\n                          },\n                        ]}\n                      >\n                        <Input />\n                      </Form.Item>\n                      <Form.Item>\n                        <Button type=\"primary\" htmlType=\"submit\">\n                          Ekle\n                        </Button>\n                      </Form.Item>\n                    </Form>\n                  }\n                  title={`Yeni kullanıcı ekle`}\n                  trigger=\"click\"\n                >\n                  <Button type=\"primary\" style={{ float: 'right' }}>\n                    Ekle\n                  </Button>\n                </Popover>\n              </>\n            )}\n            dataSource={data}\n            columns={columns}\n            rowKey=\"type\"\n          />\n        </Card>\n      );\n    }\n  \n    return (\n      <>\n        <div key='hello' style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n          <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }} title=\"\">\n            {renderTable()}\n          </Card>\n        </div>\n      </>\n    );\n  }\n  \n  export default UserRollsConfigScreen;\n  ","import { Button, Card, Col, Form, Input, InputNumber, Modal, Popover, Row, Select, Table } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from \"../IAgrotekConfig\";\nimport { getConfig } from \"../redux/actions/authActions\";\nimport { RootState } from \"../redux/reducers\";\nimport { addConfig } from \"../services/ConfigService\";\nimport { AddGenericTaskRoleAuthorizationList, AddNeedsList, DeleteGenericTaskRoleAuthorizationList, DeleteNeedsList, GetGenericTaskRoleAuthorizationList, GetNeedsList } from \"../services/NeedListService\";\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\nconst typeToString: { [key: string]: string } = {\n  machine_type: \"Makine Tipleri\",\n  brand: \"Markalar\",\n  type: \"Tipler\",\n  cooler_type: \"Fan Tipleri\",\n  tank_size: \"Depo Boyutları\",\n  pump: \"Pompalar\",\n  tow_type: \"Çeki Tipleri\",\n  chassis_color: \"Şase Renkleri\",\n  caldron_type: \"Kazan Tipleri\",\n  fan_type: \"Pervane Tipleri\",\n  arm_type: \"Kol Tipleri\",\n  fan_radius: \"Fan Çapları\",\n  order_tooker: \"Sipariş Alanlar\",\n  commander: \"Kumandalar\",\n  turktraktormodel: \"Türk Traktör Modelleri\",\n  meme_type: \"Meme Tipleri\",\n  caldron_material: \"Kazan Materyalleri\",\n  role: \"Kullanıcı Rolleri\",\n};\n\nfunction GenericTasksConfigScreen(props: Props) {\n  const [form] = Form.useForm();\n\n  function RoleListTable(props: { value: string; text: string }) {\n    const { value, text } = props;\n    const [data, setData] = useState([]);\n    const user = useSelector((state: RootState) => state.auth.user);\n\n    useEffect(() => {\n      GetData();\n    }, [value]);\n\n    function GetData() {\n      GetGenericTaskRoleAuthorizationList(value).then((res) => {\n        if (res) {\n          setData(res);\n        }\n      });\n    }\n\n    const columns = [\n      {\n        title: \"Yetki\",\n        dataIndex: \"authority\",\n        render: (text:any) => <td>{configFile[\"role\"].find((role) => role.type === text)?.text}</td>,\n      },\n      {\n        title: \"İşlemler\",\n        width: \"min-content\",\n        render: (text: string, order: any) => (\n          <td>\n            {user.role == \"admin\" ? (\n              <Button\n                style={{ marginBottom: 10 }}\n                danger\n                type=\"primary\"\n                onClick={() => {\n                  DeleteGenericTaskRoleAuthorizationList(order.id).then((res) => {\n                    if (res) {\n                      GetData();\n                    } else {\n                      Modal.error({\n                        title: \"Bir hata oluştu\",\n                        content: <p>Lütfen tekrar deneyin.</p>,\n                        okText: \"Tamam\",\n                      });\n                    }\n                  });\n                }}\n              >\n                Sil\n              </Button>\n            ) : null}\n          </td>\n        ),\n      },\n    ];\n\n    return (\n      <Card>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddGenericTaskRoleAuthorizationList({ role: value, authority: values.authority }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: \"Bir hata oluştu\",\n                            content: <p>Lütfen tekrar deneyin.</p>,\n                            okText: \"Tamam\",\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"authority\"\n                      label=\"Yetki\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Select>\n                        {(() => {\n                          return configFile[\"role\"]\n                            .sort((a, b) => b.text.localeCompare(b.text))\n                            .filter((newUser) => newUser.type !== user.role)\n                            .map((user) => {\n                              return <Select.Option value={user.type}>{user.text}</Select.Option>;\n                            });\n                        })()}\n                      </Select>\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: \"right\" }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: \"flex\", flexDirection: \"column\", alignItems: \"center\" }}>\n          <Row gutter={[10, 10]}>\n            {(() => {\n              return configFile[\"role\"]\n                .sort((a, b) => b.text.localeCompare(b.text))\n                .map((user) => {\n                  return (\n                    <Col xs={24} sm={24} md={12} lg={8} xl={8}>\n                      <RoleListTable value={user.type} text={`${user.text} Rolünün Yetkileri `} />\n                    </Col>\n                  );\n                });\n            })()}\n          </Row>\n      </div>\n    </>\n  );\n}\n\nexport default GenericTasksConfigScreen;\n","/* eslint-disable no-restricted-globals */\n/* eslint-disable no-unused-vars */\n/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Select } from \"antd\";\nimport { useEffect, useState } from \"react\";\nimport {\n  GridContextProvider,\n  GridDropZone,\n  GridItem,\n  swap,\n} from \"react-grid-dnd\";\nimport { useHistory } from \"react-router-dom\";\nimport styled from \"styled-components\";\nimport {\n  AddShortcut,\n  GetShortcuts,\n  RemoveShortcuts,\n} from \"../services/OrderService\";\n\nfunction Shortcuts() {\n  const [_items, setItems] = useState([]);\n  const items = _items?.filter((item) => item !== \"\");\n\n  const [dataForSelect, setDataForSelect] = useState();\n  const [selectedData, setSelectedData] = useState();\n\n  const history = useHistory();\n\n  const constantProduction = [\n    {\n      label: \"Kollu Siparişler\",\n      route: \"kollu\",\n    },\n    {\n      label: \"Turbo Siparişler\",\n      route: \"turbo\",\n    },\n    {\n      label: \"Diğer Siparişler\",\n      route: \"diger\",\n    },\n    {\n      label: \"Hazır Tanklar\",\n      route: \"tanklar\",\n    },\n    {\n      label: \"Aktif Makina Durumları\",\n      route: \"aktifMakina\",\n    },\n  ];\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"config\");\n    let parsedData = JSON.parse(data)?.role;\n    setDataForSelect(parsedData);\n  }, []);\n\n  useEffect(async () => {\n    GetShortcuts().then((res) => setItems(res?.split(\",\")));\n  }, []);\n\n  function onChange(sourceIndex, targetIndex) {\n    const nextState = swap(items, sourceIndex, targetIndex);\n    setItems(nextState);\n  }\n\n  const handleChange = (value) => {\n    setSelectedData(value);\n  };\n  const handleClick = async () => {\n    AddShortcut(items, selectedData).then((res) => setItems(res?.split(\",\")));\n    setSelectedData(null);\n  };\n  const handleDelete = async (item) => {\n    RemoveShortcuts(items, item).then((res) => setItems(res?.split(\",\")));\n  };\n\n  let isSmallScreen = screen.width < 800;\n\n  return (\n    <>\n      <Wrapper>\n        <Button\n          disabled={!selectedData}\n          style={styles.button}\n          onClick={handleClick}\n          type=\"primary\"\n        >\n          Kısayol Oluştur +\n        </Button>\n\n        <Select\n          placeholder=\"Seçin\"\n          style={{\n            width: 120,\n          }}\n          value={selectedData}\n          onChange={handleChange}\n          options={dataForSelect\n            ?.filter((data) => !items?.includes(data.type))\n            ?.map((data) => ({\n              value: data.type,\n              label: data.text,\n            }))}\n        />\n      </Wrapper>\n\n      <GridContextProvider onChange={onChange}>\n        <GridDropZone\n          id=\"items\"\n          boxesPerRow={isSmallScreen ? 2 : 4}\n          rowHeight={100}\n          style={{ height: \"400px\" }}\n        >\n          {items\n            ?.filter((item) => item !== \"\")\n            ?.map((item, key) => (\n              <GridItem\n                key={key}\n                style={{\n                  display: !item ? \"none\" : \"block\",\n                }}\n              >\n                <div\n                  style={{\n                    padding: \"5px\",\n                    position: \"relative\",\n                  }}\n                >\n                  <button\n                    style={{\n                      position: \"absolute\",\n                      right: 0,\n                      top: 10,\n                      borderTopRightRadius: \"10px\",\n                      backgroundColor: \"#FF4845\",\n                      color: \"white\",\n                      boxShadow: \"none\",\n                      border: \"none\",\n                      height: \"26px\",\n                      width: \"40px\",\n                      cursor: \"pointer\",\n                    }}\n                    onClick={() => handleDelete(item)}\n                  >\n                    Sil\n                  </button>\n                  <div\n                    style={{\n                      margin: \"5px\",\n                      borderRadius: \"10px\",\n                      backgroundColor: \"rgb(245,245,245)\",\n                      width: \"100%\",\n                      height: \"90px\",\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      justifyContent: \"center\",\n                      cursor: \"grabbing\",\n                    }}\n                  >\n                    <span\n                      style={{ cursor: \"pointer\", userSelect: \"none\" }}\n                      onClick={(e) => {\n                        history.push({\n                          pathname: \"GenericTaskWithRoleScreen\",\n                          state: { role: item },\n                        });\n                      }}\n                    >\n                      {dataForSelect?.find((data) => data?.type === item)?.text}\n                    </span>\n                  </div>\n                </div>\n              </GridItem>\n            ))}\n        </GridDropZone>\n      </GridContextProvider>\n      <hr />\n\n      <div\n        style={{\n          display: \"grid\",\n          gridTemplateColumns: \"auto auto auto\",\n          gap: \"1rem\",\n        }}\n      >\n        {constantProduction?.map((prod, key) => (\n          <div\n            key={key}\n            onClick={() =>\n              history.push({\n                pathname:\n                  prod.route === \"aktifMakina\"\n                    ? `/activeMachines`\n                    : prod.route === \"tanklar\"\n                    ? `/tankProducerFromShortcuts`\n                    : `filteredOrders/${prod.route}`,\n              })\n            }\n            style={{\n              margin: \"5px\",\n              borderRadius: \"10px\",\n              backgroundColor: \"rgb(245,245,245)\",\n              width: \"100%\",\n              height: \"90px\",\n              display: \"flex\",\n              alignItems: \"center\",\n              justifyContent: \"center\",\n              cursor: \"grabbing\",\n            }}\n          >\n            {prod.label}\n          </div>\n        ))}\n      </div>\n    </>\n  );\n}\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nexport const Wrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  padding: 1rem;\n  gap: 1rem;\n`;\nexport default Shortcuts;\n","import { Card, Table } from 'antd';\nimport { useEffect, useState } from 'react';\nimport { GetChassisNeeds, GetCommanderNeeds, GetFanNeeds, GetPumpNeeds, GetTowNeeds } from '../services/NeedListService';\n\nfunction NeedListScreen(Props: { type: string }) {\n  function NeedsListTable() {\n    const [data, setData] = useState([] as { name: string; amount: number }[]);\n\n    useEffect(() => {\n      GetData();\n    }, []);\n\n    function GetData() {\n      switch (Props.type) {\n        case 'Fan':\n          GetFanNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Kumanda':\n          GetCommanderNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Çeki':\n          GetTowNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Pompa':\n          GetPumpNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number }[] = [];\n              Object.keys(res).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res[key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n        case 'Şase':\n          GetChassisNeeds().then((res) => {\n            if (res) {\n              let formattedData: { name: string; amount: number; finished_amount: number }[] = [];\n              Object.keys(res['total']).forEach((key: string) => {\n                formattedData.push({ name: key, amount: res['total'][key], finished_amount: res['finished'][key] });\n              });\n              setData(formattedData);\n            }\n          });\n          break;\n      }\n    }\n\n    const columns =\n      Props.type === 'Şase'\n        ? [\n            {\n              title: 'Ürün Adı',\n              dataIndex: 'name',\n              key: 'type',\n              width: 50,\n            },\n            {\n              title: 'Gereken Miktar',\n              dataIndex: 'amount',\n              width: 50,\n            },\n            {\n              title: 'Stoktaki Miktar',\n              dataIndex: 'finished_amount',\n              width: 50,\n              render: (data: any) => <div>{data ? data : 0}</div>,\n            },\n            {\n              title: 'Net Stok',\n              width: 50,\n              render: (data: any, record: any, full_data: any) => {\n                let net_stock = (record.finished_amount ? record.finished_amount : 0) - record.amount;\n                return <div style={{ color: net_stock < 0 ? 'red' : undefined, fontWeight: 'bolder' }}>{net_stock}</div>;\n              },\n            },\n          ]\n        : [\n            {\n              title: 'Ürün Adı',\n              dataIndex: 'name',\n              key: 'type',\n              width: 50,\n            },\n            {\n              title: 'Gereken Miktar',\n              dataIndex: 'amount',\n              width: 50,\n            },\n          ];\n\n    return (\n      <Card style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{Props.type} İhtiyaç Listesi</b>\n            </>\n          )}\n          dataSource={data.sort((a, b) => a.name.localeCompare(b.name))}\n          columns={columns}\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>\n        <NeedsListTable />\n      </div>\n    </>\n  );\n}\n\nexport default NeedListScreen;\n","import { Button, Card, Form, Input, Popover, Table } from \"antd\";\nimport Search from \"antd/lib/input/Search\";\nimport IAgrotekConfig, {\n  ISerializationEffectiveField,\n  ISerializationUnEffectiveField,\n} from \"../IAgrotekConfig\";\nimport { getConfig } from \"../redux/actions/authActions\";\nimport { addConfig, deleteConfig } from \"../services/ConfigService\";\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(\n  localStorage.getItem(\"config\") ?? \"{}\"\n);\n\nconst typeToString: { [key: string]: string } = {\n  machine_type: \"Makine Tipleri\",\n  brand: \"Markalar\",\n  type: \"Tipler\",\n  cooler_type: \"Fan Tipleri\",\n  tank_size: \"Depo Boyutları\",\n  pump: \"Pompalar\",\n  tow_type: \"Çeki Tipleri\",\n  chassis_color: \"Şase Renkleri\",\n  caldron_type: \"Kazan Tipleri\",\n  fan_type: \"Pervane Tipleri\",\n  arm_type: \"Kol Tipleri\",\n  fan_radius: \"Fan Çapları\",\n  order_tooker: \"Sipariş Alanlar\",\n  commander: \"Kumandalar\",\n  turktraktormodel: \"Türk Traktör Modelleri\",\n  meme_type: \"Meme Tipleri\",\n  caldron_material: \"Kazan Materyalleri\",\n  role: \"Kullanıcı Rolleri\",\n};\n\nfunction MachineTypeConfigScreen(props: Props) {\n  function renderTable() {\n    return Object.keys(configFile).map((key) => {\n      let configs = configFile[key];\n      if (typeof configs == \"object\" && key != \"role\") {\n        if (Object.keys(configs[0]).length === 2) {\n          return renderDoubleColumnTable(\n            configs as ISerializationUnEffectiveField[],\n            key\n          );\n        } else if (Object.keys(configs[0]).length === 3) {\n          return renderTripleColumnTable(\n            configs as ISerializationEffectiveField[],\n            key\n          );\n        }\n      }\n      return null;\n    });\n  }\n\n  function renderDoubleColumnTable(\n    config: ISerializationUnEffectiveField[],\n    key: string\n  ) {\n    const columns = [\n      {\n        title: \"Tip\",\n        dataIndex: \"type\",\n        key: \"type\",\n        width: 45,\n      },\n      {\n        title: \"Gösterim\",\n        dataIndex: \"text\",\n        width: 45,\n      },\n      {\n        title: \"İşlemler\",\n        width: 10,\n        render: (text: any) => (\n          <td>\n            <Button\n              style={{ marginBottom: 10 }}\n              danger\n              type=\"primary\"\n              onClick={() => {\n                deleteConfig({ ...text, key }).then((res) => {\n                  if (res) getConfig();\n                });\n              }}\n            >\n              Sil\n            </Button>\n          </td>\n        ),\n      },\n    ];\n    return (\n      <Card key={key} style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values).then((res) => {\n                        if (res) getConfig();\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      label=\"Tip\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"Lütfen sadece küçük harf ve boşluksuz yazın.\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"Gösterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: \"right\" }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) =>\n            a.type.localeCompare(b.type)\n          )}\n          columns={columns}\n          rowKey=\"type\"\n        />\n      </Card>\n    );\n  }\n\n  function renderTripleColumnTable(\n    config: ISerializationEffectiveField[],\n    key: string\n  ) {\n    const columns = [\n      {\n        title: \"Tip\",\n        dataIndex: \"type\",\n        key: \"type\",\n        width: 30,\n      },\n      {\n        title: \"Gösterim\",\n        dataIndex: \"text\",\n        width: 30,\n      },\n      {\n        title: \"Kısaltma (Barkod üzerinde)\",\n        dataIndex: \"shortend\",\n        width: 30,\n      },\n      {\n        title: \"İşlemler\",\n        width: 10,\n        render: (text: any) => (\n          <td>\n            <Button\n              style={{ marginBottom: 10 }}\n              danger\n              type=\"primary\"\n              onClick={() => {\n                deleteConfig({ ...text, key }).then((res) => {\n                  if (res) getConfig();\n                });\n              }}\n            >\n              Sil\n            </Button>\n          </td>\n        ),\n      },\n    ];\n    return (\n      <Card key={key} style={{ marginBottom: 10 }}>\n        <Table\n          pagination={false}\n          style={{ width: \"100%\" }}\n          title={() => (\n            <>\n              <b>{typeToString[key]}</b>\n              <Popover\n                content={\n                  <Form\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      addConfig(String(key), values);\n                    }}\n                  >\n                    <Form.Item\n                      name=\"type\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"Lütfen sadece küçük harf ve boşluksuz yazın.\",\n                        },\n                      ]}\n                      label=\"Tip\"\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"text\" label=\"Gösterim\">\n                      <Input />\n                    </Form.Item>\n                    <Form.Item\n                      name=\"shortend\"\n                      label=\"Kısaltma\"\n                      rules={[\n                        {\n                          required: true,\n                          message:\n                            \"Lütfen sadece büyük harf yazın, ve harf sayısına dikkat edin.\",\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${typeToString[key]}a Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: \"right\" }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={config?.sort((a: any, b: any) =>\n            a.type.localeCompare(b.type)\n          )}\n          columns={columns}\n          rowKey=\"type\"\n        />\n      </Card>\n    );\n  }\n\n  return (\n    <>\n      <div\n        key=\"hello\"\n        style={{\n          display: \"flex\",\n          flexDirection: \"column\",\n          alignItems: \"center\",\n        }}\n      >\n        <Card\n          key=\"uretimSuresiProgress\"\n          title=\"Üretim Süresi İşlemleri\"\n          style={{ width: \"60%\", marginBottom: \"1%\", marginTop: \"2%\" }}\n        >\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Şase Üretim Süresi\"\n            placeholder={String(configFile?.chassis_production_time)}\n            suffix=\"Gün\"\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig(\"chassis_production_time\", { text: value });\n            }}\n            key=\"saseUretim\"\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Fan Üretim Süresi\"\n            suffix=\"Gün\"\n            placeholder={String(configFile?.fan_production_time)}\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig(\"fan_production_time\", { text: value });\n            }}\n            key=\"fanUretim\"\n          />\n          <Search\n            style={{ marginBottom: 10 }}\n            addonBefore=\"Kol Üretim Süresi\"\n            placeholder={String(configFile?.arm_production_time)}\n            suffix=\"Gün\"\n            enterButton=\"Değiştir\"\n            size=\"large\"\n            onSearch={(value) => {\n              addConfig(\"arm_production_time\", { text: value });\n            }}\n            key=\"kolUretim\"\n          />\n        </Card>\n        <Card\n          key=\"configTable\"\n          style={{ width: \"60%\", marginBottom: \"1%\", marginTop: \"2%\" }}\n          title=\"\"\n        >\n          {renderTable()}\n        </Card>\n      </div>\n    </>\n  );\n}\n\nexport default MachineTypeConfigScreen;\n","//IhtiyacListesiConfigScreen\n\nimport { Button, Card, Form, Input, InputNumber, Modal, Popover, Table } from 'antd';\nimport Search from 'antd/lib/input/Search';\nimport { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport IAgrotekConfig, { ISerializationEffectiveField, ISerializationUnEffectiveField } from '../IAgrotekConfig';\nimport { getConfig } from '../redux/actions/authActions';\nimport { RootState } from '../redux/reducers';\nimport { addConfig } from '../services/ConfigService';\nimport { AddNeedsList, DeleteNeedsList, GetNeedsList } from '../services/NeedListService';\n\ninterface Props {}\nconst configFile: IAgrotekConfig = JSON.parse(localStorage.getItem('config') ?? '{}');\n\nfunction IhtiyacListesiConfigScreen(props: Props) {\n    const [form] = Form.useForm();\n    function NeedsListTable(props: { value: number | string; text: string }) {\n      const { value, text } = props;\n      const [data, setData] = useState([]);\n      const user = useSelector((state: RootState) => state.auth.user);\n  \n      useEffect(() => {\n        GetData();\n      }, [value]);\n  \n      function GetData() {\n        GetNeedsList(value).then((res) => {\n          if (res) {\n            setData(res);\n          }\n        });\n      }\n      const columns = [\n        {\n          title: 'Ürün Adı',\n          dataIndex: 'name',\n          key: 'type',\n        },\n        {\n          title: 'Gereken Miktar',\n          dataIndex: 'amount',\n        },\n        {\n          title: 'İşlemler',\n          render: (text: string, order: any) => (\n            <td>\n              {user.role == 'admin' ? (\n                <Button\n                  style={{ marginBottom: 10 }}\n                  danger\n                  type=\"primary\"\n                  onClick={() => {\n                    DeleteNeedsList(order.id).then((res) => {\n                      if (res) {\n                        GetData();\n                      } else {\n                        Modal.error({\n                          title: 'Bir hata oluştu',\n                          content: <p>Lütfen tekrar deneyin.</p>,\n                          okText: 'Tamam',\n                        });\n                      }\n                    });\n                  }}\n                >\n                  Sil\n                </Button>\n              ) : null}\n            </td>\n          ),\n        },\n      ];\n      return (  \n        <Table\n          pagination={false}\n          style={{ width: '100%' }}\n          title={() => (\n            <>\n              <b>{text}</b>\n              <Popover\n                content={\n                  <Form\n                    form={form}\n                    layout=\"vertical\"\n                    onFinish={(values) => {\n                      AddNeedsList({ amount: values.amount, name: values.name, tank_size: value }).then((res) => {\n                        if (res) {\n                          GetData();\n                          form.resetFields();\n                        } else\n                          Modal.error({\n                            title: 'Bir hata oluştu',\n                            content: <p>Lütfen tekrar deneyin.</p>,\n                            okText: 'Tamam',\n                          });\n                      });\n                    }}\n                  >\n                    <Form.Item\n                      name=\"name\"\n                      label=\"Ürün\"\n                      rules={[\n                        {\n                          required: true,\n                        },\n                      ]}\n                    >\n                      <Input />\n                    </Form.Item>\n                    <Form.Item name=\"amount\" label=\"Miktar\">\n                      <InputNumber min={0} />\n                    </Form.Item>\n                    <Form.Item>\n                      <Button type=\"primary\" htmlType=\"submit\">\n                        Ekle\n                      </Button>\n                    </Form.Item>\n                  </Form>\n                }\n                title={`${text} Ekleme Yap`}\n                trigger=\"click\"\n              >\n                <Button type=\"primary\" style={{ float: 'right' }}>\n                  Ekle\n                </Button>\n              </Popover>\n            </>\n          )}\n          dataSource={data}\n          columns={columns}\n          rowKey = 'id'\n          key={value.toString()+'Head'}\n        />\n      );\n    }  \n    return (\n      <>\n        <div key='hello' style={{ display: 'flex', flexDirection: 'column', alignItems: 'center' }}>  \n          <Card key='requiermentTable' title=\"İhtiyaç Listesi İşlemleri\" style={{ width: '60%', marginBottom: '1%', marginTop: '2%' }}>\n            {(() => {\n                const sortedData = configFile['tank_size']\n                .sort((a, b) => parseInt(b.type) - parseInt(a.type));\n              return sortedData.map((tank_size) => {\n                  return <NeedsListTable value={parseInt(tank_size.type)} text={`${tank_size.text} LT Tank İhtiyaç Listesi`} key ={tank_size.type}/>;\n                });\n            })()}\n          </Card>\n        </div>\n      </>\n    );\n  }\n  \n  export default IhtiyacListesiConfigScreen;\n  ","/* eslint-disable eqeqeq */\nimport React, { ReactNode, useState } from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Select,\n  Card,\n  InputNumber,\n  Popconfirm,\n  Popover,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder } from \"../services/OrderService\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport {\n  DivideGenericTask,\n  DeleteGenericTask,\n  GetActiveGenericTasks,\n  CreateGenericTask,\n  GetFinishedGenericTasks,\n  ModifyGenericTask,\n  UpdateGenericTask,\n  GetGenericTaskWithRole,\n} from \"../services/ProductionPlanService\";\nimport { connect } from \"react-redux\";\nimport GenericTaskHistory from \"../components/TaskHistory\";\nimport * as XLSX from \"xlsx/xlsx.mjs\";\n\nconst config: IAgrotekConfig = JSON.parse(\n  localStorage.getItem(\"config\") ?? \"{}\"\n);\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst DivideContent = (Props: {\n  maxAmount: number,\n  id: number,\n  getTasks: () => void,\n}) => {\n  const [amount, setAmount] = useState(1);\n\n  return (\n    <div>\n      <InputNumber\n        max={Props.maxAmount}\n        style={{ width: \"70%\" }}\n        size=\"large\"\n        defaultValue={1}\n        formatter={(value) => `Bölünen Miktar ${value}`}\n        parser={(value) => value?.split(\"Bölünen Miktar \")[1]}\n        onChange={(value) => setAmount(value)}\n      />\n      <Button\n        danger\n        size=\"large\"\n        style={{ marginLeft: 10 }}\n        onClick={() => {\n          DivideGenericTask(Props.id, amount).then((res) => {\n            if (res) Props.getTasks();\n          });\n        }}\n      >\n        Böl\n      </Button>\n    </div>\n  );\n};\n\nclass GenericTasksScreen extends React.Component {\n  constructor(props) {\n    super(props);\n  }\n\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    selectedRole: \"anasiparis\",\n    selectedUnit: \"adet\",\n    csvdata: [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Kazan Tipi\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ],\n    loading: false,\n    data: [],\n    columns: [\n      {\n        title: \"Görev No\",\n        dataIndex: \"id\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.id - b.id,\n        ...this.getColumnSearchProps(\"id\"),\n      },\n      {\n        title: \"Grup\",\n        dataIndex: \"last_location\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.last_location.localeCompare(b.last_location),\n        ...this.getColumnSearchProps(\"last_location\"),\n        render: (text: string, data) => (\n          <td>\n            {this.props.isActive ? (\n              <Select\n                disabled={this.props.user.role !== \"admin\"}\n                value={text}\n                size=\"large\"\n                style={{ width: 200 }}\n                onChange={(value) => {\n                  ModifyGenericTask({ id: data.id, new_group: value }).then(\n                    (res) => {\n                      this.GetTasks();\n                    }\n                  );\n                }}\n              >\n                {(() => {\n                  return config.role?.map((role) => {\n                    return (\n                      <Select.Option value={role.type}>\n                        {role.text}\n                      </Select.Option>\n                    );\n                  });\n                })()}\n              </Select>\n            ) : (\n              (() => {\n                return config.role?.map((role) => {\n                  if (role.type == text) return <p>{role.text}</p>;\n                });\n              })()\n            )}\n          </td>\n        ),\n      },\n      {\n        title: \"Başlık\",\n        dataIndex: \"title\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.title.localeCompare(b.title),\n        ...this.getColumnSearchProps(\"title\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Ek Açıklama\",\n        dataIndex: \"description\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"description\"),\n        render: (text: string) => <td>{text ? Capitalize(text) : \"\"}</td>,\n      },\n      {\n        title: \"Miktar\",\n        dataIndex: \"amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          parseInt(a.amount?.split(\" \")[0]) - parseInt(b.amount?.split(\" \")[0]),\n      },\n      {\n        title: \"Tamamlanan\",\n        dataIndex: \"completed_amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.completed_amount - b.completed_amount,\n      },\n      {\n        title: \"Görev Verilme Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        ...this.getColumnSearchProps(\"row_created_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n        render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n      },\n\n      {\n        title: \"İşlemler\",\n        render: (text: string, order: GenericOrder) => (\n          <td>\n            {(this.props.user.role == \"admin\" ||\n              this.props.user.role == \"ambar1\") &&\n            order.last_location == \"ambar1\" &&\n            order.title == \"QR Kod Basımı\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi tamamlamak istediğinizden eminmisiniz? <br /> Bu\n                    işlem geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  UpdateGenericTask(order.id, 1).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <Button style={{ margin: 5 }} block size=\"large\" type=\"primary\">\n                  Tamamla\n                </Button>\n              </Popconfirm>\n            ) : null}\n            {this.props.user.role == \"admin\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi silmek istediğinizden eminmisiniz? <br /> Bu işlem\n                    geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  DeleteGenericTask(order.id).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayir\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Sil\n                </Button>\n              </Popconfirm>\n            ) : null}\n            <Button\n              block\n              style={{ margin: 5 }}\n              onClick={() => {\n                this.setState({\n                  isModalVisible: true,\n                  selectedTaskId: order.id,\n                });\n              }}\n              size=\"large\"\n              type=\"primary\"\n            >\n              İşlem Geçmişi\n            </Button>\n            {this.props.user.role == \"admin\" ||\n            this.props.user.role == \"lazer\" ||\n            this.props.user.role === \"lazer2\" ||\n            this.props.user.role === \"lazerkesim\" ||\n            (this.props.user.role == \"depo\" &&\n              order.completed_amount == 0 &&\n              this.props.isActive) ? (\n              <Popover\n                content={\n                  <DivideContent\n                    maxAmount={parseInt(order?.amount?.split(\" \")[0]) - 1}\n                    id={order.id}\n                    getTasks={this.GetTasks.bind(this)}\n                  />\n                }\n                title={\n                  <>\n                    Görevin tamamlanan ve kalan kısmını ayırmak istediğinizden\n                    emin misiniz? <br /> Bu işlem geri alınamaz\n                  </>\n                }\n                trigger=\"click\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Böl\n                </Button>\n              </Popover>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  componentDidMount() {\n    if (!this.props.location?.state?.role) {\n      this.props.history.push(\"shortcuts\");\n    } else {\n      this.GetTasks();\n    }\n  }\n\n  componentWillReceiveProps = (newProps, oldProps) => {\n    setTimeout(() => {\n      if (!this.props.location?.state?.role) {\n        this.props.history.push(\"shortcuts\");\n      } else {\n        this.GetTasks();\n      }\n    }, 500);\n  };\n\n  GetTasks() {\n    let isActive = this.props.isActive;\n    this.setState({ loading: true });\n\n    let csvdata = [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ];\n\n    GetGenericTaskWithRole(this.props.location.state.role).then((data) => {\n      data?.forEach((task) => {\n        csvdata.push([\n          task.id,\n          task.last_location,\n          task.title,\n          task.description,\n          task.amount,\n          task.completed_amount,\n          ConvertDateTime(task.row_created_date),\n          ConvertDateTime(task.row_updated_date),\n        ]);\n      });\n      this.setState({ data, csvdata, loading: false });\n    });\n  }\n  SaveExcel = (data) => {\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <div>\n          <Card\n            style={{\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Button\n              style={{ ...styles.button, float: \"right\" }}\n              onClick={() => this.SaveExcel(this.state.csvdata)}\n            >\n              Emirleri Excele Aktar\n            </Button>\n          </Card>\n        </div>\n\n        <Table\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          style={{ maxWidth: \"99.5%\" }}\n          loading={this.state.loading}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <GenericTaskHistory\n          isVisible={this.state.isModalVisible}\n          task_id={this.state.selectedTaskId}\n          setIsVisible={(value) => this.setState({ isModalVisible: value })}\n        />\n      </>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(GenericTasksScreen);\n","/* eslint-disable eqeqeq */\nimport {\n  AutoComplete,\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  Radio,\n  Select,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { renderToString } from \"react-dom/server\";\nimport { Body } from \"./MainScreen\";\nimport moment from \"moment\";\nimport IAgrotekConfig from \"../IAgrotekConfig\";\nimport { padLeft } from \"../helper\";\nimport { GetOrderDetails, UpdateOrder } from \"../services/OrderService\";\nimport { getCustomerList } from \"../services/ConfigService\";\nimport { useHistory, useLocation } from \"react-router-dom\";\n\nconst { Option, OptGroup } = Select;\nconst QRCode = require(\"qrcode.react\");\n\nfunction EditOrderScreen(props: any) {\n  const configFile: IAgrotekConfig = JSON.parse(\n    localStorage.getItem(\"config\") ?? \"{}\"\n  );\n  const [qrCodeValue, setQrCodeValue] = useState(\"\");\n  const [customerList, setCustomerList] = useState([] as any);\n  const [orderDetails, setOrderDetails] = useState([] as any);\n  const [productionUnit, setProductionUnit] = useState(\"turbo\");\n\n  const [serialState, setSerialState] = useState({\n    brand: \"\",\n    type: \"\",\n    cooler_type: \"\",\n    arm_type: \"\",\n    tank_size: 0,\n    pump: \"\",\n    order_no: \"000000\",\n    order_amount: 0,\n    year: \"\",\n  });\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  let serialCode = SerialCodeGenerator();\n  const [form] = Form.useForm();\n\n  const { pathname }: any = useLocation();\n  const history = useHistory();\n  const serialNumber = pathname.split(\"/\")[2];\n\n  useEffect(() => {\n    GetOrderDetails(serialNumber).then((orderDetails) => {\n      delete orderDetails.date;\n      delete orderDetails.year;\n      setProductionUnit(orderDetails.production_unit);\n\n      setOrderDetails({\n        orderDetails,\n        caldron_stock: \"onstock\",\n        order_amount: String(orderDetails.order_amount),\n      });\n      form.setFieldsValue({\n        ...orderDetails,\n        caldron_stock: \"onstock\",\n        order_amount: String(orderDetails.order_amount),\n      });\n    });\n  }, [serialNumber]);\n\n  useEffect(() => {\n    getCustomerList().then((res) => {\n      setCustomerList(res);\n    });\n  }, []);\n\n  return (\n    <Body\n      style={{\n        display: \"flex\",\n        justifyContent: \"space-evenly\",\n        flexWrap: \"wrap-reverse\",\n        overflow: \"auto\",\n      }}\n    >\n      <Form\n        form={form}\n        initialValues={orderDetails?.orderDetails}\n        onFieldsChange={() => {\n          let product =\n            form.getFieldValue(\"brand\") == \"turktraktor\"\n              ? form.getFieldValue(\"brand\") + \" \" + form.getFieldValue(\"model\")\n              : form.getFieldValue(\"production_unit\") == \"turbo\"\n              ? form.getFieldValue(\"brand\") +\n                \" \" +\n                form.getFieldValue(\"tank_size\") +\n                \"LT \" +\n                form.getFieldValue(\"cooler_type\") +\n                form.getFieldValue(\"fan_radius\") +\n                \"cm \" +\n                form.getFieldValue(\"fan_type\")\n              : form.getFieldValue(\"production_unit\") == \"kollu\"\n              ? form.getFieldValue(\"brand\") +\n                \" \" +\n                form.getFieldValue(\"tank_size\") +\n                \"LT \" +\n                form.getFieldValue(\"arm_type\") +\n                \" \" +\n                form.getFieldValue(\"arm_length\")\n              : form.getFieldValue(\"production_unit\") == \"diger\"\n              ? form.getFieldValue(\"brand\") + \" \" + form.getFieldValue(\"type\")\n              : \"\";\n          setQrCodeValue(serialCode + \",\" + product.toUpperCase());\n          if (\n            form.getFieldValue(\"model\") &&\n            form.getFieldValue(\"brand\") == \"turktraktor\"\n          ) {\n            form.setFieldsValue({ caldron_color: form.getFieldValue(\"model\") });\n          }\n        }}\n        onFinish={async (values) => {\n          setIsLoading(true);\n          const result = await UpdateOrder(values, serialCode);\n          setIsLoading(false);\n          if (result) {\n            history.goBack();\n          }\n          // if (result === true) {\n          //   printQRCode(values.order_amount);\n          //   form.resetFields();\n          // }\n        }}\n        labelCol={{ span: 5 }}\n        wrapperCol={{ span: 24 }}\n        style={{ maxWidth: \"calc(100% - 168px)\", minWidth: \"450px\" }}\n        requiredMark={false}\n      >\n        <Form.Item name=\"date\" initialValue={moment()} label=\"Tarih\" required>\n          <DatePicker disabled />\n        </Form.Item>\n\n        <Form.Item\n          name=\"customer\"\n          label=\"Müşteri Adı\"\n          rules={[\n            { required: true, message: \"Bu alan boş bırakılamaz\" },\n            { max: 250, message: \"Maksimum sınır aşıldı.\" },\n          ]}\n          required\n        >\n          <AutoComplete\n            style={{ width: 200 }}\n            options={customerList}\n            placeholder=\"aramak için yazın.\"\n            filterOption={(inputValue, option) =>\n              option!.value.toUpperCase().indexOf(inputValue.toUpperCase()) !==\n              -1\n            }\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"address\"\n          label=\"Adresi\"\n          rules={[\n            { required: true, message: \"Bu alan boş bırakılamaz\" },\n            { max: 250, message: \"Maksimum sınır aşıldı.\" },\n          ]}\n          required\n        >\n          <Input />\n        </Form.Item>\n        <Form.Item\n          name=\"phone_number\"\n          label=\"Telefon No\"\n          rules={[\n            { required: true, message: \"Bu alan boş bırakılamaz\" },\n            {\n              max: 10,\n              min: 10,\n              message: \"Telefon numarası 10 haneden oluşmalıdır.\",\n            },\n          ]}\n          required\n        >\n          <Input addonBefore=\"+90\" style={{ width: \"100%\" }} />\n        </Form.Item>\n        <Form.Item\n          name=\"production_unit\"\n          label=\"Üretim Birimi\"\n          initialValue={orderDetails?.orderDetails?.productUnit}\n          required\n        >\n          <Radio.Group\n            onChange={(e) => {\n              setProductionUnit(e.target.value);\n            }}\n          >\n            <Radio value=\"turbo\">Turbo</Radio>\n            <Radio value=\"kollu\">Kollu</Radio>\n            <Radio value=\"diger\">Diğer</Radio>\n          </Radio.Group>\n        </Form.Item>\n        <Form.Item name=\"brand\" label=\"Marka\" required>\n          <Select\n            onSelect={(type) => {\n              const brand = configFile.brand.filter(\n                (brand) => brand.type == type\n              );\n              setSerialState({ ...serialState, brand: brand[0].shortend });\n            }}\n          >\n            {(function myFunction() {\n              return configFile.brand.map((brand) => {\n                return (\n                  <Option key={brand.type} value={brand.type}>\n                    {brand.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        {productionUnit == \"turbo\" && serialState.brand == \"T\" ? (\n          <Form.Item name=\"model\" label=\"Model\" required>\n            <Select>\n              {(function myFunction() {\n                return configFile.turktraktormodel.map((brand) => {\n                  return (\n                    <Option key={brand.text} value={brand.text}>\n                      {brand.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          </Form.Item>\n        ) : null}\n\n        <Form.Item name=\"type\" label=\"Tip\" required>\n          {productionUnit === \"turbo\" || productionUnit === \"kollu\" ? (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.type.filter(\n                  (type) => type.type == btype\n                );\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.type.map((type) => {\n                  return (\n                    <Option key={type.type} value={type.type}>\n                      {type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          ) : (\n            <Select\n              onSelect={(btype) => {\n                const type = configFile.machine_type.filter(\n                  (machine_type) => machine_type.type == btype\n                );\n                setSerialState({ ...serialState, type: type[0].shortend });\n              }}\n            >\n              {(function myFunction() {\n                return configFile.machine_type.map((machine_type) => {\n                  return (\n                    <Option key={machine_type.type} value={machine_type.type}>\n                      {machine_type.text}\n                    </Option>\n                  );\n                });\n              })()}\n            </Select>\n          )}\n        </Form.Item>\n        {productionUnit == \"kollu\" || productionUnit == \"turbo\" ? (\n          <>\n            <Form.Item\n              name=\"caldron_color\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 32, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Kazan Rengi\"\n              required\n            >\n              <Input />\n            </Form.Item>\n            <Form.Item name=\"caldron_stock\" label=\"Kazan Tedarik\">\n              <Radio.Group>\n                <Radio value=\"onstock\">Stoktan</Radio>\n                <Radio value=\"new\">Kazan Üreticiden</Radio>\n              </Radio.Group>\n            </Form.Item>\n\n            <Form.Item\n              name=\"caldron_material\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Materyal\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.caldron_material.map((caldron_material) => {\n                    return (\n                      <Option\n                        key={caldron_material.type}\n                        value={caldron_material.type}\n                      >\n                        {caldron_material.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tank_size\" label=\"Depo Hacmi\" required>\n              <Select\n                onSelect={(type) => {\n                  const tank_size = configFile.tank_size.filter(\n                    (tank_size) => tank_size.type == type\n                  );\n                  setSerialState({\n                    ...serialState,\n                    tank_size: parseInt(tank_size[0].shortend),\n                  });\n                }}\n              >\n                <OptGroup label=\"Litre\">\n                  {(function myFunction() {\n                    return configFile.tank_size.map((tank_size) => {\n                      return (\n                        <Option key={tank_size.type} value={tank_size.type}>\n                          {tank_size.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </OptGroup>\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"tow_type\" label=\"Çeki Tipi\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.tow_type.map((tow_type) => {\n                    return (\n                      <Option key={tow_type.type} value={tow_type.type}>\n                        {tow_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"pump\" label=\"Pompa\" required>\n              <Select\n                onSelect={(type) => {\n                  const pump = configFile.pump.filter(\n                    (pump) => pump.type == type\n                  );\n                  setSerialState({ ...serialState, pump: pump[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.pump.map((pump) => {\n                    return (\n                      <Option key={pump.type} value={pump.type}>\n                        {pump.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item name=\"commander\" label=\"Kumanda\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.commander.map((commander) => {\n                    return (\n                      <Option key={commander.type} value={commander.type}>\n                        {commander.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            <Form.Item\n              name=\"meme_type\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Meme Tipi\"\n              required\n            >\n              <Select>\n                {(function myFunction() {\n                  return configFile.meme_type.map((meme_type) => {\n                    return (\n                      <Option key={meme_type.type} value={meme_type.type}>\n                        {meme_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == \"kollu\" ? (\n          <>\n            <Form.Item name=\"arm_type\" label=\"Kol Tipi\" required>\n              <Select\n                onSelect={(btype) => {\n                  const arm_type = configFile.arm_type.filter(\n                    (type) => type.type == btype\n                  );\n                  setSerialState({\n                    ...serialState,\n                    arm_type: arm_type[0].shortend,\n                  });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.arm_type.map((arm_type) => {\n                    return (\n                      <Option key={arm_type.type} value={arm_type.type}>\n                        {arm_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"meme_distance\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Meme Aralığı\"\n              required\n            >\n              <Input maxLength={19} />\n            </Form.Item>\n            <Form.Item\n              name=\"arm_length\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 30, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Kol Uzunluğu\"\n              required\n            >\n              <Input maxLength={20} />\n            </Form.Item>\n          </>\n        ) : null}\n        {productionUnit == \"turbo\" ? (\n          <>\n            <Form.Item name=\"cooler_type\" label=\"Fan Tipi\" required>\n              <Select\n                onSelect={(type) => {\n                  const cooler_type = configFile.cooler_type.filter(\n                    (cooler_type) => cooler_type.type == type\n                  );\n                  setSerialState({\n                    ...serialState,\n                    cooler_type: cooler_type[0].shortend,\n                  });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.cooler_type.map((cooler_type) => {\n                    return (\n                      <Option key={cooler_type.type} value={cooler_type.type}>\n                        {cooler_type.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"caldron_type\" label=\"Kazan Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.caldron_type.map((caldron_type) => {\n                      return (\n                        <Option\n                          key={caldron_type.type}\n                          value={caldron_type.type}\n                        >\n                          {caldron_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"fan_radius\" label=\"Pervane Çapı\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_radius.map((fan_radius) => {\n                      return (\n                        <Option key={fan_radius.type} value={fan_radius.type}>\n                          {fan_radius.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n            {productionUnit == \"turbo\" ? (\n              <Form.Item name=\"fan_type\" label=\"Pervane Tipi\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.fan_type.map((fan_type) => {\n                      return (\n                        <Option key={fan_type.type} value={fan_type.type}>\n                          {fan_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n          </>\n        ) : null}\n\n        <Form.Item\n          name=\"order_no\"\n          label=\"Sipariş No\"\n          rules={[\n            { required: true, message: \"Bu alan boş bırakılamaz\" },\n            { max: 6, message: \"Maksimum sınır aşıldı.\" },\n            { min: 6, message: \"Sipariş No 6 Karakter olmalıdır..\" },\n          ]}\n          required\n        >\n          <Input\n            maxLength={6}\n            onChange={(e) => {\n              setSerialState({\n                ...serialState,\n                order_no: padLeft(e.target.value, \"0\", 6),\n              });\n            }}\n          />\n        </Form.Item>\n        <Form.Item\n          name=\"order_amount\"\n          rules={[\n            { required: true, message: \"Bu alan boş bırakılamaz\" },\n            { max: 5, message: \"Maksimum sınıra ulaşıldı.\" },\n          ]}\n          label=\"Sipariş Adedi\"\n          required\n        >\n          <Input\n            max={99}\n            min={1}\n            type=\"number\"\n            onChange={(e) => {\n              setSerialState({\n                ...serialState,\n                order_amount: parseInt(e.target.value),\n              });\n            }}\n          />\n        </Form.Item>\n        <Form.Item name=\"year\" label=\"Yıl\" initialValue={moment()} required>\n          <DatePicker disabled picker=\"year\" />\n        </Form.Item>\n\n        <Form.Item name=\"chassis_color\" label=\"Şase Rengi\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.chassis_color.map((chassis_color) => {\n                return (\n                  <Option key={chassis_color.type} value={chassis_color.type}>\n                    {chassis_color.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n\n        <Form.Item\n          name=\"alt_features\"\n          rules={[{ max: 250, message: \"Maksimum sınıra ulaşıldı.\" }]}\n          label=\"Ek Özellikler\"\n          required\n        >\n          <Input.TextArea maxLength={250} />\n        </Form.Item>\n        <Form.Item name=\"order_tooker\" label=\"Sipariş Alan\" required>\n          <Select>\n            {(function myFunction() {\n              return configFile.order_tooker.map((order_tooker) => {\n                return (\n                  <Option key={order_tooker.type} value={order_tooker.type}>\n                    {order_tooker.text}\n                  </Option>\n                );\n              });\n            })()}\n          </Select>\n        </Form.Item>\n        <Form.Item name=\"serial_number\" label=\"Seri No\">\n          <Input disabled placeholder={serialCode} />\n        </Form.Item>\n        <Form.Item wrapperCol={{ span: 12, offset: 6 }}>\n          <Button\n            disabled={isLoading}\n            size=\"large\"\n            block\n            type=\"primary\"\n            htmlType=\"submit\"\n          >\n            {isLoading ? \"Gönderiliyor..\" : \"Siparişi Düzenle\"}\n          </Button>\n        </Form.Item>\n      </Form>\n      <div style={{ display: \"block\", width: \"min-content\" }}>\n        <QRCode value={qrCodeValue} renderAs=\"svg\" size={178} />\n        {/*<Button type=\"primary\" icon={<PrinterOutlined />} disabled={serialCode.length < 10} onClick={printQRCode} block>\n          Yazdır\n          </Button>*/}\n      </div>\n    </Body>\n  );\n\n  function SerialCodeGenerator(): string {\n    switch (productionUnit) {\n      case \"kollu\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.arm_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"turbo\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.cooler_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"diger\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      default:\n        return \"\";\n    }\n  }\n\n  function printQRCode(amount: number) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n    let reversed = reverseString(serialCode);\n    let data = splitTwoPartsBarcode(reversed);\n    let qrCode = qrCodeValue.split(\",\");\n\n    for (let i = amount; i > 0; i--) {\n      qrCode[0] = data[0] + \"0\" + i;\n\n      let svg = renderToString(\n        <div style={{ width: \"50mm\", height: \"64mm\" }}>\n          <QRCode\n            value={qrCode[0] + \",\" + qrCode[1]}\n            style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n            renderAs=\"svg\"\n          />\n          <p style={{ margin: 10 }}>{qrCode[0]}</p>\n        </div>\n      );\n      //<QRCode value= style={{ width: \"54mm\", height: \"70mm\" }} renderAs=\"svg\" />);\n\n      printWindow?.document.write(String(svg));\n    }\n    if (printWindow) {\n      printWindow.document.body.style.margin = \"0\";\n      printWindow.document.close();\n      printWindow.print();\n    }\n  }\n}\n\nexport function splitTwoPartsBarcode(str: string) {\n  var index = str.indexOf(\"0\"); // Gets the first index where a space occours\n  var amount = reverseString(str.substr(0, index)); // Gets the first part\n  var serial = reverseString(str.substr(index + 1));\n\n  return [serial, amount];\n}\n\nexport function reverseString(str: string) {\n  var newString = \"\";\n  for (var i = str.length - 1; i >= 0; i--) {\n    newString += str[i];\n  }\n  return newString;\n}\n\nexport default EditOrderScreen;\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Divider,\n  Select,\n  Popconfirm,\n  Switch,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GetMovableMachines,\n  SwitchMachines,\n  DeleteOrder,\n  GetMachineListFromOrderById,\n  DeleteSingleMachine,\n  GetAllOrdersByType,\n} from \"../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport { Capitalize, ConvertDateTime, ConvertOrderLocation } from \"../helper\";\nimport OrderHistory from \"../components/OrderHistory\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\nimport { Link } from \"react-router-dom\";\nimport QRCode from \"qrcode.react\";\nimport moment from \"moment\";\n\nconst getBase64FromUrl = async (url) => {\n  const data = await fetch(url);\n  const blob = await data.blob();\n  return new Promise((resolve) => {\n    const reader = new FileReader();\n    reader.readAsDataURL(blob);\n    reader.onloadend = () => {\n      const base64data = reader.result;\n      resolve(base64data);\n    };\n  });\n};\n\nfunction exportWithExcel(data) {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n  sheet.properties.defaultRowHeight = 100;\n\n  sheet.columns = [\n    {\n      header: \"Sipariş Numarası\",\n      key: \"order_no\",\n      width: 10,\n    },\n    { header: \"Müşteri Adı\", key: \"customer\", width: 32 },\n    { header: \"Makinenin Özellikleri\", key: \"description\", width: 32 },\n    { header: \"Sipariş Alan\", key: \"order_tooker\", width: 32 },\n    { header: \"Planlama Tarihi\", key: `planned_date`, width: 32 },\n    { header: \"Miktar\", key: `quantity`, width: 32 },\n\n    {\n      header: \"QR\",\n      key: \"qr_code\",\n      width: 30,\n    },\n  ];\n\n  const configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  const promise = Promise.all(\n    data.map(async (item, index) => {\n      const rowNumber = index + 1;\n\n      let order_details =\n        (item.brand || \",\") +\n          (item.brand\n            ? configFile.brand.filter((b) => b.type === item.brand)[0]?.text +\n              \",\"\n            : \",\") +\n          (item.chassis_color\n            ? configFile.chassis_color.filter(\n                (b) => b.type === item.chassis_color\n              )[0]?.text + \",\"\n            : \",\") +\n          (item.commander\n            ? configFile.commander.filter((b) => b.type === item.commander)[0]\n                ?.text + \",\"\n            : \",\") +\n          (item.arm_type\n            ? configFile.arm_type.filter((b) => b.type === item.arm_type)[0]\n                ?.text + \",\"\n            : \",\") +\n          (item.arm_length ? item.arm_length + \",\" : \",\") +\n          (item.production_unit ? item.production_unit + \",\" : \",\") +\n          (item.caldron_color ? item.caldron_color + \",\" : \",\") +\n          (item.caldron_type\n            ? configFile.caldron_type.filter(\n                (b) => b.type === item.caldron_type\n              )[0]?.text + \",\"\n            : \",\") +\n          (item.cooler_type\n            ? configFile.cooler_type.filter(\n                (b) => b.type === item.cooler_type\n              )[0]?.text + \",\"\n            : \",\") +\n          (item.fan_radius ? item.fan_radius + \",\" : \",\") +\n          (item.fan_type ? item.fan_type + \",\" : \",\") +\n          (item.pump\n            ? configFile.pump.filter((b) => b.type === item.pump)[0]?.text + \",\"\n            : \",\") +\n          (item.meme_distance ? item.meme_distance + \",\" : \",\") +\n          (item.meme_type\n            ? configFile.meme_type.filter((b) => b.type === item.meme_type)[0]\n                ?.text + \",\"\n            : \",\") +\n          (item.tank_size ? item.tank_size + \",\" : \",\") +\n          (item.type ? item.type + \",\" : \",\") +\n          (item.tow_type\n            ? configFile.tow_type.filter((b) => b.type === item.tow_type)[0]\n                ?.text + \",\"\n            : \",\") +\n          (item.alt_features ? item.alt_features + \",\" : \",\") +\n          item.year || \",\";\n\n      sheet.addRow({\n        order_no: item?.order_no,\n        customer: item?.customer,\n        description: order_details,\n\n        order_tooker: item?.order_tooker,\n        planned_date: item?.planned_date,\n        quantity:\n          item?.order_amount - item?.pending_amount + \"/\" + item?.order_amount,\n      });\n      let qrCodeValue = item.serial_number + \",\" + item.description;\n\n      let url =\n        await `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrCodeValue}`;\n\n      const res = await getBase64FromUrl(url);\n\n      const imageId2 = workbook.addImage({\n        base64: res,\n        extension: \"jpg\",\n      });\n\n      sheet.addImage(imageId2, {\n        tl: { col: 6, row: rowNumber },\n        ext: { width: 100, height: 100 },\n      });\n    })\n  );\n\n  promise.then(() => {\n    workbook.xlsx.writeBuffer().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.download = \"download.xlsx\";\n      anchor.click();\n      window.URL.revokeObjectURL(url);\n    });\n  });\n}\nexport function renderProperties(key, value) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nclass OrderScreen extends React.Component {\n  constructor(props) {\n    super(props);\n    this.route =\n      this.props.location?.pathname.split(\"/\")[\n        this.props.location?.pathname.split(\"/\").length - 1\n      ];\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail]?.map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"Bulunduğu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son İşlem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        Siparişi Kaydır\n                      </Button>\n                    ) : null}\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu Yazdır\n                    </Button>\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      İşlem Geçmişini Göster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n                    {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          Makinayı Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    keepMachineDetails: false,\n    csvdata: [\n      [\n        \"Seri No\",\n        \"Sipariş No\",\n        \"Sipariş Tarihi\",\n        \"Müşteri\",\n        \"Telefon\",\n        \"Adres\",\n        \"Sipariş Alan\",\n        \"Durum\",\n      ],\n    ],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    filteredData: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a, b) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Lokasyon\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Miktar\",\n        sorter: (a, b) => a.pending_amount - b.pending_amount,\n        ...this.getColumnSearchProps(\"order_amount\"),\n        render: (text, order) => (\n          <td>\n            {String(order.order_amount - order.pending_amount) +\n              \"/\" +\n              order.order_amount}\n          </td>\n        ),\n      },\n      {\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"date\",\n        sorter: (a, b) =>\n          moment(a.date, \"D MMMM YYYY, HH:mm\").unix() -\n          moment(b.date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"date\"),\n        render: (text) => <td>{text}</td>,\n      },\n\n      {\n        title: \"Sipariş Alan\",\n        dataIndex: \"order_tooker\",\n        sorter: (a, b) => a.order_tooker.localeCompare(b.order_tooker),\n        ...this.getColumnSearchProps(\"order_tooker\"),\n        render: (text) => <td>{text.toUpperCase()}</td>,\n      },\n    ],\n  };\n\n  printQRCode(value, serialNumber) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    this.props.isFinishedOrders &&\n      GetAllOrdersByType(this.route).then((result) => {\n        // item?.order_amount - item?.pending_amount + \"/\" + item?.order_amount\n        let dateModifiedData = result?.map((order) => {\n          const date = new Date(order.date);\n          order.date = moment(date).format(\"D MMMM YYYY, HH:mm\");\n          return order;\n        });\n        let filteredDataForExcel = result\n          ?.map((order) => {\n            order.date = moment(order.date).format(\"D MMMM YYYY, HH:mm\");\n            return order;\n          })\n          .filter(\n            (item) =>\n              item?.order_amount - item?.pending_amount !== item?.order_amount\n            // item.location === \"onaybekliyor\" || item.location === \"planlandı\"\n          );\n\n        this.setState({\n          data: dateModifiedData,\n          filteredData: filteredDataForExcel,\n          loading: false,\n        });\n      });\n  }\n\n  onChange = (checked) => {\n    this.setState({ keepMachineDetails: checked ? true : false });\n  };\n\n  componentDidMount = () => {\n    this.GetOrders();\n    GetMovableMachines().then((machines) => {\n      if (machines) {\n        this.setState({ movableMachines: machines });\n      }\n    });\n  };\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n          display: \"flex\",\n          flexDirection: \"column\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          expandable={{\n            expandedRowRender: (record) => (\n              <div\n                key={\"keyexpandable \" + record.id}\n                style={{ marginLeft: \"3rem\" }}\n              >\n                {renderProperties(\"Ürün\", record.description)}\n                {renderProperties(\"Tarih\", record.date)}\n                {renderProperties(\n                  \"Marka\",\n                  this.configFile.brand.filter(\n                    (b) => b.type === record.brand\n                  )[0]?.text\n                )}\n                {renderProperties(\"Sipariş No\", record.order_no)}\n                {renderProperties(\n                  \"Sipariş Miktarı\",\n                  String(record.order_amount)\n                )}\n                {renderProperties(\n                  \"Tip\",\n                  this.configFile.type.filter((b) => b.type === record.type)[0]\n                    ?.text\n                    ? this.configFile.type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                    : this.configFile.machine_type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                )}\n                {renderProperties(\n                  \"Fan Tipi\",\n                  this.configFile.cooler_type.filter(\n                    (b) => b.type === record.cooler_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Boyutu\",\n                  record.tank_size ? record.tank_size + \" LT\" : null\n                )}\n                {renderProperties(\n                  \"Kazan Materyali\",\n                  this.configFile.caldron_material.filter(\n                    (b) => b.type === record.caldron_material\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Pompa\",\n                  this.configFile.pump.filter((b) => b.type === record.pump)[0]\n                    ?.text\n                )}\n                {renderProperties(\"Model Yılı\", record.year)}\n                {renderProperties(\n                  \"Meme Tipi\",\n                  this.configFile.meme_type.filter(\n                    (b) => b.type === record.meme_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Meme Aralığı\", record.meme_distance)}\n                {renderProperties(\n                  \"Çeki Tipi\",\n                  this.configFile.tow_type.filter(\n                    (b) => b.type === record.tow_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kol Tipi\",\n                  this.configFile.arm_type.filter(\n                    (b) => b.type === record.arm_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Kol Uzunluğu\", record.arm_length)}\n                {renderProperties(\n                  \"Şase Rengi\",\n                  this.configFile.chassis_color.filter(\n                    (b) => b.type === record.chassis_color\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Rengi\",\n                  Capitalize(record.caldron_color)\n                )}\n                {renderProperties(\n                  \"Kazan Tipi\",\n                  this.configFile.caldron_type.filter(\n                    (b) => b.type === record.caldron_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kumanda\",\n                  this.configFile.commander.filter(\n                    (b) => b.type === record.commander\n                  )[0]?.text\n                )}\n                {renderProperties(\"Alternatif Özellikler\", record.alt_features)}\n                <Button\n                  style={{ marginRight: \"10px\" }}\n                  type=\"primary\"\n                  onClick={() => {\n                    GetMachineListFromOrderById(record.id).then(\n                      (orderDetails) => {\n                        this.setState({\n                          orderDetails: {\n                            ...this.state.orderDetails,\n                            [record.id]: orderDetails,\n                          },\n                        });\n                      }\n                    );\n                  }}\n                >\n                  Detayları Göster\n                </Button>\n                {this.renderOrderDetails(record)}\n                {record.status !== \"cancelled\" &&\n                this.props.user?.role == \"admin\" &&\n                !this.props.isFinishedOrders ? (\n                  <Popconfirm\n                    title=\"Bu siparişi iptal etmek istediğinizden emin misiniz?\"\n                    onConfirm={() => DeleteOrder(record.id)}\n                    okText=\"Evet\"\n                    cancelText=\"Hayır\"\n                  >\n                    <Button\n                      danger\n                      style={{ marginBottom: 10, marginRight: 10 }}\n                      type=\"primary\"\n                    >\n                      Siparişi İptal Et\n                    </Button>\n                  </Popconfirm>\n                ) : null}\n\n                <Link\n                  style={{\n                    display:\n                      record.order_amount !== record.pending_amount && \"none\",\n                    color: \"white\",\n                    marginBottom: 10,\n                    backgroundColor: \"#1677ff\",\n                    padding: \"8px\",\n                    borderRadius: \"6px\",\n                  }}\n                  to={{\n                    pathname: `/editOrder/${record.serial_number}`,\n                  }}\n                >\n                  Düzenle\n                </Link>\n              </div>\n            ),\n          }}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Button\n          loading={this.state.loading}\n          style={{\n            width: \"120px\",\n            display: \"flex\",\n            alignSelf: \"end\",\n            marginRight: \"2rem\",\n          }}\n          type=\"primary\"\n          onClick={() => exportWithExcel(state?.filteredData)}\n        >\n          QR Kod Yazdır\n        </Button>\n\n        <Modal\n          title={\n            this.state.orderSelected?.serial_number + \" Seri Numaralı Makine.\"\n          }\n          open={this.state.orderModalVisible}\n          onOk={() => {\n            this.setState({ orderModalVisible: false });\n            SwitchMachines({\n              order1: this.state.selectedToMove,\n              order2: this.state.orderSelected,\n              keepMachineDetails: this.state.keepMachineDetails,\n            });\n          }}\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <p>Lütfen değişim yapmak istediğiniz makineyi seçin.</p>\n          <Select\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            style={{ width: \"100%\" }}\n            onSelect={(value) => {\n              this.setState({\n                selectedToMove: {\n                  serial_number: value.split(\" \")[0],\n                  order_id: Number.parseInt(value.split(\" \")[1]),\n                },\n              });\n            }}\n            placeholder=\"Lütfen bir makine seçin\"\n            defaultActiveFirstOption={true}\n          >\n            {this.state.movableMachines?.map((machine) => {\n              return (\n                <Select.Option\n                  key={machine?.order_id}\n                  value={machine.serial_number + \" \" + machine.order_id}\n                >\n                  {machine.serial_number +\n                    \" \" +\n                    machine.customer +\n                    \" \" +\n                    Capitalize(machine.location)}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          <div style={{ marginTop: \"2rem\", display: \"flex\", gap: \"1rem\" }}>\n            <span>Sipariş Detayını Değiştir</span>\n            <Switch onChange={this.onChange} />\n            <span>Sipariş Detayını Koru (STOK)</span>\n          </div>\n        </Modal>\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderScreen);\n","/* eslint-disable eqeqeq */\nimport React, { ReactNode, useState } from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Select,\n  Card,\n  InputNumber,\n  Popconfirm,\n  Popover,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { GenericOrder } from \"../services/OrderService\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport {\n  DivideGenericTask,\n  DeleteGenericTask,\n  GetActiveGenericTasks,\n  CreateGenericTask,\n  GetFinishedGenericTasks,\n  ModifyGenericTask,\n  UpdateGenericTask,\n} from \"../services/ProductionPlanService\";\nimport { connect } from \"react-redux\";\nimport GenericTaskHistory from \"../components/TaskHistory\";\nimport * as XLSX from \"xlsx/xlsx.mjs\";\n\nconst config: IAgrotekConfig = JSON.parse(\n  localStorage.getItem(\"config\") ?? \"{}\"\n);\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nconst DivideContent = (Props: {\n  maxAmount: number,\n  id: number,\n  getTasks: () => void,\n}) => {\n  const [amount, setAmount] = useState(1);\n\n  return (\n    <div>\n      <InputNumber\n        max={Props.maxAmount}\n        style={{ width: \"70%\" }}\n        size=\"large\"\n        defaultValue={1}\n        formatter={(value) => `Bölünen Miktar ${value}`}\n        parser={(value) => value.split(\"Bölünen Miktar \")[1]}\n        onChange={(value) => setAmount(value)}\n      />\n      <Button\n        danger\n        size=\"large\"\n        style={{ marginLeft: 10 }}\n        onClick={() => {\n          DivideGenericTask(Props.id, amount).then((res) => {\n            if (res) Props.getTasks();\n          });\n        }}\n      >\n        Böl\n      </Button>\n    </div>\n  );\n};\n\nclass QRCodeScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node: ReactNode) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    selectedRole: \"anasiparis\",\n    selectedUnit: \"adet\",\n    csvdata: [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Kazan Tipi\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ],\n    loading: false,\n    data: [],\n    columns: [\n      {\n        title: \"Görev No\",\n        dataIndex: \"id\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.id - b.id,\n        ...this.getColumnSearchProps(\"id\"),\n      },\n      {\n        title: \"Grup\",\n        dataIndex: \"last_location\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.last_location.localeCompare(b.last_location),\n        ...this.getColumnSearchProps(\"last_location\"),\n        render: (text: string, data) => (\n          <td>\n            {this.props.isActive ? (\n              <Select\n                disabled={this.props.user.role !== \"admin\"}\n                value={text}\n                size=\"large\"\n                style={{ width: 200 }}\n                onChange={(value) => {\n                  ModifyGenericTask({ id: data.id, new_group: value }).then(\n                    (res) => {\n                      this.GetTasks();\n                    }\n                  );\n                }}\n              >\n                {(() => {\n                  return config.role?.map((role) => {\n                    return (\n                      <Select.Option value={role.type}>\n                        {role.text}\n                      </Select.Option>\n                    );\n                  });\n                })()}\n              </Select>\n            ) : (\n              (() => {\n                return config.role?.map((role) => {\n                  if (role.type == text) return <p>{role.text}</p>;\n                });\n              })()\n            )}\n          </td>\n        ),\n      },\n      {\n        title: \"Başlık\",\n        dataIndex: \"title\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.title.localeCompare(b.title),\n        ...this.getColumnSearchProps(\"title\"),\n        render: (text: string) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Ek Açıklama\",\n        dataIndex: \"description\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.description.localeCompare(b.description),\n        ...this.getColumnSearchProps(\"description\"),\n        render: (text: string) => <td>{text ? Capitalize(text) : \"\"}</td>,\n      },\n      {\n        title: \"Miktar\",\n        dataIndex: \"amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          parseInt(a.amount.split(\" \")[0]) - parseInt(b.amount.split(\" \")[0]),\n      },\n      {\n        title: \"Tamamlanan\",\n        dataIndex: \"completed_amount\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          a.completed_amount - b.completed_amount,\n      },\n      {\n        title: \"Görev Verilme Tarihi\",\n        dataIndex: \"row_created_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_created_date).unix() - moment(b.row_created_date).unix(),\n        ...this.getColumnSearchProps(\"row_created_date\"),\n        render: (text) => <td>{ConvertDateTime(text)}</td>,\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"row_updated_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) =>\n          moment(a.row_updated_date).unix() - moment(b.row_updated_date).unix(),\n        ...this.getColumnSearchProps(\"row_updated_date\"),\n        render: (text) => <td>{ConvertDateTime(text)}</td>,\n      },\n\n      {\n        title: \"İşlemler\",\n        render: (text, order: GenericOrder) => (\n          <td>\n            {(this.props.user.role == \"admin\" ||\n              this.props.user.role == \"ambar1\") &&\n            order.last_location == \"ambar1\" &&\n            order.title == \"QR Kod Basımı\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi tamamlamak istediğinizden eminmisiniz? <br /> Bu\n                    işlem geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  UpdateGenericTask(order.id, 1).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayır\"\n              >\n                <Button style={{ margin: 5 }} block size=\"large\" type=\"primary\">\n                  Tamamla\n                </Button>\n              </Popconfirm>\n            ) : null}\n            {this.props.user.role == \"admin\" ? (\n              <Popconfirm\n                title={\n                  <div>\n                    Bu görevi silmek istediğinizden eminmisiniz? <br /> Bu işlem\n                    geri alınamaz\n                  </div>\n                }\n                onConfirm={() => {\n                  DeleteGenericTask(order.id).then((res) => {\n                    if (res) this.GetTasks();\n                  });\n                }}\n                okText=\"Evet\"\n                cancelText=\"Hayir\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Sil\n                </Button>\n              </Popconfirm>\n            ) : null}\n            <Button\n              block\n              style={{ margin: 5 }}\n              onClick={() => {\n                this.setState({\n                  isModalVisible: true,\n                  selectedTaskId: order.id,\n                });\n              }}\n              size=\"large\"\n              type=\"primary\"\n            >\n              İşlem Geçmişi\n            </Button>\n            {this.props.user.role == \"admin\" ||\n            this.props.user.role == \"lazer\" ||\n            this.props.user.role === \"lazer2\" ||\n            this.props.user.role === \"lazerkesim\" ||\n            (this.props.user.role == \"depo\" &&\n              order.completed_amount == 0 &&\n              this.props.isActive) ? (\n              <Popover\n                content={\n                  <DivideContent\n                    maxAmount={parseInt(order.amount.split(\" \")[0]) - 1}\n                    id={order.id}\n                    getTasks={this.GetTasks.bind(this)}\n                  />\n                }\n                title={\n                  <>\n                    Görevin tamamlanan ve kalan kısmını ayırmak istediğinizden\n                    emin misiniz? <br /> Bu işlem geri alınamaz\n                  </>\n                }\n                trigger=\"click\"\n              >\n                <Button\n                  style={{ margin: 5 }}\n                  block\n                  danger\n                  size=\"large\"\n                  type=\"primary\"\n                >\n                  Böl\n                </Button>\n              </Popover>\n            ) : null}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  componentDidMount() {\n    this.GetTasks();\n  }\n\n  componentWillReceiveProps = (newProps, oldProps) => {\n    setTimeout(() => {\n      this.GetTasks();\n    }, 500);\n  };\n\n  GetTasks() {\n    let isActive = this.props.isActive;\n    console.log(isActive);\n    this.setState({ loading: true });\n    let csvdata = [\n      [\n        \"Görev No\",\n        \"Grup\",\n        \"Başlık\",\n        \"Ek Açıklama\",\n        \"Miktar\",\n        \"Tamamlanan\",\n        \"Görev Verilme Tarihi\",\n        \"Son İşlem Tarihi\",\n      ],\n    ];\n\n    if (isActive) {\n      GetActiveGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([\n            task.id,\n            task.last_location,\n            task.title,\n            task.description,\n            task.amount,\n            task.completed_amount,\n            ConvertDateTime(task.row_created_date),\n            ConvertDateTime(task.row_updated_date),\n          ]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    } else {\n      GetFinishedGenericTasks().then((data) => {\n        data?.forEach((task) => {\n          csvdata.push([\n            task.id,\n            task.last_location,\n            task.title,\n            task.description,\n            task.amount,\n            task.completed_amount,\n            ConvertDateTime(task.row_created_date),\n            ConvertDateTime(task.row_updated_date),\n          ]);\n        });\n        this.setState({ data, csvdata, loading: false });\n      });\n    }\n  }\n  SaveExcel = (data) => {\n    console.log(\"clikced\");\n    const worksheet = XLSX.utils.aoa_to_sheet(data);\n    const workbook = XLSX.utils.book_new();\n    XLSX.utils.book_append_sheet(workbook, worksheet, \"Sheet1\");\n    XLSX.writeFile(workbook, \"DataSheet.xlsx\");\n  };\n  searchInput: React.ReactNode;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <div>\n          <Card>\n            <div\n              style={{\n                display: \"flex\",\n                flexDirection: \"row\",\n                flexWrap: \"nowrap\",\n                marginBottom: 5,\n              }}\n            >\n              <Input\n                disabled={!this.props.isActive}\n                onChange={(e) => {\n                  this.setState({ selectedTitle: e.target.value });\n                }}\n                value={this.state.selectedTitle}\n                style={{ width: 500 }}\n                size=\"large\"\n                addonBefore=\"Görev\"\n                placeholder=\"Görev Tanımı\"\n              />\n              <Input\n                disabled={!this.props.isActive}\n                onChange={(e) => {\n                  this.setState({ selectedDescription: e.target.value });\n                }}\n                value={this.state.selectedDescription}\n                style={{ width: 500, marginLeft: 25, marginRight: 25 }}\n                size=\"large\"\n                addonBefore=\"Açıklama?\"\n                placeholder=\"Opsiyonel\"\n              />\n              <Input.Group compact>\n                <InputNumber\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedAmount: e });\n                  }}\n                  value={this.state.selectedAmount}\n                  style={{ width: 100 }}\n                  min={1}\n                  placeholder=\"0\"\n                  size=\"large\"\n                />\n                <Input\n                  disabled={!this.props.isActive}\n                  onChange={(e) => {\n                    this.setState({ selectedUnit: e.target.value });\n                  }}\n                  value={this.state.selectedUnit}\n                  style={{ width: 100 }}\n                  defaultValue=\"adet\"\n                  size=\"large\"\n                />\n              </Input.Group>\n              <Button\n                style={styles.button}\n                type=\"primary\"\n                loading={this.state.addTaskButtonLoading}\n                disabled={\n                  !state.selectedAmount ||\n                  !state.selectedTitle ||\n                  !state.selectedRole\n                }\n                onClick={() => {\n                  this.setState({ addTaskButtonLoading: true });\n                  CreateGenericTask({\n                    title: state.selectedTitle,\n                    description: state.selectedDescription,\n                    group: state.selectedRole,\n                    amount: state.selectedAmount,\n                    unit: state.selectedUnit,\n                  }).then((res) => {\n                    if (res) {\n                      this.setState({\n                        selectedTitle: null,\n                        selectedDescription: null,\n                        selectedAmount: null,\n                        selectedUnit: \"adet\",\n                      });\n                      this.GetTasks();\n                    }\n                    this.setState({ addTaskButtonLoading: false });\n                  });\n                }}\n              >\n                Emir Oluştur\n              </Button>\n            </div>\n            <Button\n              style={{ ...styles.button, float: \"right\" }}\n              onClick={() => this.SaveExcel(this.state.csvdata)}\n            >\n              Emirleri Excele Aktar\n            </Button>\n          </Card>\n        </div>\n\n        <Table\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          style={{ maxWidth: \"99.5%\" }}\n          loading={this.state.loading}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <GenericTaskHistory\n          isVisible={this.state.isModalVisible}\n          task_id={this.state.selectedTaskId}\n          setIsVisible={(value) => this.setState({ isModalVisible: value })}\n        />\n      </>\n    );\n  }\n}\n\nconst styles = {\n  button: {\n    marginLeft: 25,\n  },\n};\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(QRCodeScreen);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GetAllTankFromSaruhanli,\n  sendToTankProducer,\n} from \"../services/OrderService\";\nimport { CSVLink } from \"react-csv\";\nimport { Capitalize } from \"../helper\";\nimport { renderToString } from \"react-dom/server\";\nimport QRCode from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport ExcelJS from \"exceljs\";\ndayjs.locale(\"tr\");\n\nclass TankProducerScreen extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  getBase64FromUrl = async (url) => {\n    const data = await fetch(url);\n    const blob = await data.blob();\n    return new Promise((resolve) => {\n      const reader = new FileReader();\n      reader.readAsDataURL(blob);\n      reader.onloadend = () => {\n        const base64data = reader.result;\n        resolve(base64data);\n      };\n    });\n  };\n\n  exportWithExcel(data) {\n    const workbook = new ExcelJS.Workbook();\n    const sheet = workbook.addWorksheet(\"My Sheet\");\n    sheet.properties.defaultRowHeight = 100;\n\n    sheet.columns = [\n      {\n        header: \"Sipariş Numarası\",\n        key: \"order_no\",\n        width: 10,\n      },\n      { header: \"Müşteri Adı\", key: \"customer\", width: 32 },\n      { header: \"Sipariş Tarihi\", key: \"description\", width: 32 },\n      { header: \"Son İşlem Tarihi\", key: \"last_operation_date\", width: 32 },\n      { header: \"Durum\", key: `status`, width: 32 },\n      { header: \"Depo Boyutu\", key: `tank_size`, width: 32 },\n      { header: \"Kazan Tipi\", key: `caldron_type`, width: 32 },\n      { header: \"Kazan Rengi\", key: `caldron_color`, width: 32 },\n      { header: \"Marka\", key: `brand`, width: 32 },\n\n      {\n        header: \"QR\",\n        key: \"qr_code\",\n        width: 30,\n      },\n    ];\n\n    const promise = Promise.all(\n      data.map(async (item, index) => {\n        const rowNumber = index + 1;\n        sheet.addRow({\n          order_no: item?.order_no,\n          customer: item?.customer,\n          description: item?.order_date,\n          last_operation_date: item?.last_operation_date,\n          status: item?.status,\n          tank_size: item?.tank_size,\n          caldron_type: item?.caldron_type,\n          caldron_color: item?.caldron_color,\n          brand: item?.brand,\n        });\n        let qrCodeValue = \"TU\" + item.serial_number;\n\n        let url =\n          await `https://api.qrserver.com/v1/create-qr-code/?size=150x150&data=${qrCodeValue}`;\n\n        const res = await this.getBase64FromUrl(url);\n\n        const imageId2 = workbook.addImage({\n          base64: res,\n          extension: \"jpg\",\n        });\n\n        sheet.addImage(imageId2, {\n          tl: { col: 9, row: rowNumber },\n          ext: { width: 100, height: 100 },\n        });\n      })\n    );\n\n    promise.then(() => {\n      workbook.xlsx.writeBuffer().then(function (data) {\n        const blob = new Blob([data], {\n          type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        });\n        const url = window.URL.createObjectURL(blob);\n        const anchor = document.createElement(\"a\");\n        anchor.href = url;\n        anchor.download = \"download.xlsx\";\n        anchor.click();\n        window.URL.revokeObjectURL(url);\n      });\n    });\n  }\n\n  state = {\n    csvdata: [[]],\n    orderDetails: {},\n    loading: true,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    activeOrders: [],\n    showAllOrders: false,\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no - b.order_no,\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        /*\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a: GenericOrder, b: GenericOrder) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      */\n      },\n      {\n        /*\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"order_date\",\n        sorter: (a: GenericOrder, b: GenericOrder) => dayjs(a.order_date, \"D MMMM YYYY, HH:mm\").unix() - dayjs(b.order_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"order_date\"),\n      */\n      },\n      {\n        title: \"Planlanan Üretim Tarihi\",\n        dataIndex: \"planned_date\",\n        sorter: (a, b) =>\n          dayjs(\n            a.planned_date !== \"\" ? a.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix() -\n          dayjs(\n            b.planned_date !== \"\" ? b.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix(),\n        ...this.getColumnSearchProps(\"planned_date\"),\n      },\n      {\n        title: \"Son İşlem Tarihi\",\n        dataIndex: \"last_operation_date\",\n        sorter: (a, b) =>\n          dayjs(a.last_operation_date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.last_operation_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"last_operation_date\"),\n      },\n      {\n        title: \"Durum\",\n        dataIndex: \"status\",\n        sorter: (a, b) => a.status.localeCompare(b.status),\n        ...this.getColumnSearchProps(\"status\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n      },\n      {\n        title: \"Depo Boyutu\",\n        dataIndex: \"tank_size\",\n        sorter: (a, b) => a.tank_size - b.tank_size,\n        ...this.getColumnSearchProps(\"tank_size\"),\n      },\n      {\n        title: \"Depo Rengi\",\n        dataIndex: \"caldron_color\",\n        ...this.getColumnSearchProps(\"caldron_color\"),\n      },\n      {\n        title: \"Depo Tipi\",\n        dataIndex: \"caldron_type\",\n        sorter: (a, b) => a?.caldron_type?.localeCompare(b?.caldron_type),\n      },\n      {\n        title: \"Marka\",\n        dataIndex: \"brand\",\n        sorter: (a, b) => a.brand.localeCompare(b.brand),\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) => (\n          <td>\n            {this.props.user.role == \"admin\" ||\n            this.props.user.role == \"tankproducer\" ? (\n              <Button\n                block\n                style={{ marginBottom: 10 }}\n                type=\"primary\"\n                onClick={() => {\n                  this.printQRCode(\"TU\" + order.serial_number);\n                }}\n              >\n                QR Kodu Yazdır\n              </Button>\n            ) : null}\n            {this.props.user.role == \"tankproducer\" &&\n              (order.status === \"Onay Bekliyor\" ||\n                order.status === \"Üretiliyor (Onaylandı)\") && (\n                <Button\n                  block\n                  style={{ marginBottom: 10 }}\n                  type=\"primary\"\n                  onClick={() => {\n                    const status =\n                      order.status === \"Onay Bekliyor\"\n                        ? \"pending\"\n                        : order.status === \"Üretiliyor (Onaylandı)\"\n                        ? \"confirmed\"\n                        : \"\";\n                    sendToTankProducer(status, order.id).then(async () => {\n                      const result = await GetAllTankFromSaruhanli();\n\n                      const filteredResult = this.filterResult(result);\n                      this.setState({ data: filteredResult });\n                    });\n                  }}\n                >\n                  {order.status === \"Onay Bekliyor\"\n                    ? \"Onayla\"\n                    : order.status === \"Üretiliyor (Onaylandı)\"\n                    ? \"Üretildi Olarak İşaretle\"\n                    : \"\"}\n                </Button>\n              )}\n          </td>\n        ),\n      },\n    ],\n  };\n\n  printQRCode(value) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{value}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  filterResult(result) {\n    result.forEach((record) => {\n      record.last_operation_date = record.deliver_date\n        ? dayjs(record.deliver_date).format(\"D MMMM YYYY, HH:mm\")\n        : record.producted_date\n        ? dayjs(record.producted_date).format(\"D MMMM YYYY, HH:mm\")\n        : record.confirmed_date\n        ? dayjs(record.confirmed_date).format(\"D MMMM YYYY, HH:mm\")\n        : dayjs(record.order_date).format(\"D MMMM YYYY, HH:mm\");\n      record.order_date = dayjs(record.order_date).format(\"D MMMM YYYY, HH:mm\");\n      record.planned_date = record.planned_date\n        ? dayjs(record.planned_date).format(\"D MMMM YYYY\")\n        : \"\";\n      record.brand = Capitalize(record.brand);\n      record.status =\n        record.status == \"delivered\"\n          ? \"Teslim Edildi\"\n          : record.status == \"producted\"\n          ? \"Üretim Tamamlandı (Hazır)\"\n          : record.status == \"confirmed\"\n          ? \"Üretiliyor (Onaylandı)\"\n          : record.status == \"cancelled\"\n          ? \"İptal Edildi\"\n          : record.status == \"ontheway\"\n          ? \"Yolda (Saruhanlıya Gönderildi)\"\n          : record.status === \"pending\"\n          ? \"Onay Bekliyor\"\n          : record.status;\n      record.caldron_type = record.caldron_type\n        ? Capitalize(record.caldron_type)\n        : \"\";\n      record.caldron_color = Capitalize(record.caldron_color);\n      record.status = Capitalize(record.status);\n    });\n    return result;\n  }\n\n  componentDidMount = async () => {\n    const result = await GetAllTankFromSaruhanli();\n\n    const filteredResult = this.filterResult(result);\n    const onlyActiveOrders = filteredResult.filter(\n      (res) => res.status !== \"Teslim Edildi\"\n    );\n\n    this.setState({ data: filteredResult, activeOrders: onlyActiveOrders });\n\n    let csv = [\n      [\n        \"Sipariş No\",\n        \"Müşteri\",\n        \"Sipariş Tarihi\",\n        \"Son İşlem Tarihi\",\n        \"Durum\",\n        \"Depo Boyutu\",\n        \"Kazan Tipi\",\n        \"Kazan Rengi\",\n        \"Marka\",\n      ],\n    ];\n\n    result.forEach((record) =>\n      csv.push([\n        record.order_no,\n        record.customer,\n        record.order_date,\n        record.last_operation_date,\n        record.status,\n        record.tank_size,\n        record.caldron_type,\n        record.caldron_color,\n        record.brand,\n      ])\n    );\n\n    this.setState({ csvdata: csv, loading: false });\n  };\n\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n        <Button style={{ float: \"right\", marginRight: 10 }} type=\"default\">\n          <CSVLink data={state.csvdata}>CSV'ye aktar</CSVLink>\n        </Button>\n        <Button\n          loading={this.state.loading}\n          style={{ float: \"right\", marginRight: 10 }}\n          type=\"primary\"\n          onClick={() => this.exportWithExcel(state?.data)}\n        >\n          QR Kod Yazdır\n        </Button>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(TankProducerScreen);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport {\n  Table,\n  Input,\n  Button,\n  Divider,\n  Select,\n  Popconfirm,\n  Switch,\n} from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  GetMovableMachines,\n  SwitchMachines,\n  DeleteSingleMachine,\n  GetMachineStatus,\n} from \"../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\nimport Modal from \"antd/lib/modal/Modal\";\nimport {\n  Capitalize,\n  ConvertDateTime,\n  ConvertOrderLocation,\n  ConvertTankStatus,\n} from \"../helper\";\nimport OrderHistory from \"../components/OrderHistory\";\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\n\nimport moment from \"moment\";\n\ndayjs.extend(customParseFormat);\n\ndayjs.locale(\"tr\");\n\nconst QRCode = require(\"qrcode.react\");\n\nexport function renderProperties(key, value) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nfunction exportWithExcel(data) {\n  const workbook = new ExcelJS.Workbook();\n  const sheet = workbook.addWorksheet(\"My Sheet\");\n  sheet.properties.defaultRowHeight = 80;\n\n  sheet.columns = [\n    { header: \"Seri No\", key: \"serial_number\", width: 32 },\n    { header: \"Tank\", key: \"tank_location\", width: 32 },\n    { header: \"Kol\", key: \"arm_location\", width: 32 },\n    { header: \"Şase\", key: \"chassis_location\", width: 32 },\n    { header: \"Fan\", key: `fan_location`, width: 32 },\n    { header: \"Planlanan Üretim Tarihi\", key: `planned_date`, width: 32 },\n  ];\n\n  const promise = Promise.all(\n    data?.map(async (item) => {\n      sheet.addRow({\n        serial_number: item?.serial_number,\n        tank_location: item?.tank_location,\n        arm_location: item?.arm_location,\n        chassis_location: item?.chassis_location,\n        fan_location: item?.fan_location,\n        planned_date: moment(item?.planned_date).format(\"DD/MM/YYYY\"),\n      });\n    })\n  );\n  promise.then(() => {\n    const priceCol = sheet.getColumn(5);\n    priceCol.eachCell((cell) => {\n      const cellValue = sheet.getCell(cell?.address).value;\n      if (cellValue > 50 && cellValue < 1000) {\n        sheet.getCell(cell?.address).fill = {\n          type: \"pattern\",\n          pattern: \"solid\",\n          fgColor: { argb: \"FF0000\" },\n        };\n      }\n    });\n    workbook.xlsx.writeBuffer().then(function (data) {\n      const blob = new Blob([data], {\n        type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      });\n\n      const url = window.URL.createObjectURL(blob);\n      const anchor = document.createElement(\"a\");\n      anchor.href = url;\n      anchor.download = \"download.xlsx\";\n      anchor.click();\n      window.URL.revokeObjectURL(url);\n    });\n  });\n}\n\nclass ActiveMachineStatus extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail].map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"Bulunduğu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son İşlem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                    {renderProperties(\n                      \"Planlama Tarihi\",\n                      ConvertDateTime(detail.planned_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        Siparişi Kaydır\n                      </Button>\n                    ) : null}\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu Yazdır\n                    </Button>\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        console.log(record.id);\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      İşlem Geçmişini Göster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n\n                    {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          Makinayı Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    orderDetails: {},\n    keepMachineDetails: false,\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Tank\",\n        dataIndex: \"tank_location\",\n        sorter: (a, b) => a.tank_location.localeCompare(b.tank_location),\n        ...this.getColumnSearchProps(\"tank_location\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Kol\",\n        dataIndex: \"arm_location\",\n        sorter: (a, b) => a.arm_location.localeCompare(b.arm_location),\n        ...this.getColumnSearchProps(\"arm_location\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Şase\",\n        dataIndex: \"chassis_location\",\n        ...this.getColumnSearchProps(\"chassis_location\"),\n        sorter: (a, b) => a.chassis_location.localeCompare(b.chassis_location),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Fan\",\n        dataIndex: \"fan_location\",\n        ...this.getColumnSearchProps(\"fan_location\"),\n        sorter: (a, b) => a.fan_location.localeCompare(b.fan_location),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n\n      {\n        title: \"Planlanan Üretim Tarihi\",\n        dataIndex: \"planned_date\",\n        ...this.getColumnSearchProps(\"planned_date\"),\n        render: (date) => <td>{moment(date).format(\"DD/MM/YYYY\")}</td>,\n        sorter: (a, b) =>\n          dayjs(\n            a.planned_date !== \"\" ? a.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix() -\n          dayjs(\n            b.planned_date !== \"\" ? b.planned_date : \"25 Temmuz 2500\",\n            \"D MMMM YYYY\"\n          ).unix(),\n      },\n    ],\n  };\n\n  printQRCode(value, serialNumber) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    GetMachineStatus().then((result) => {\n      result = result?.map((data) => {\n        return {\n          ...data,\n          arm_location: ConvertOrderLocation(data.arm_location),\n          chassis_location: ConvertOrderLocation(data.chassis_location),\n          fan_location: ConvertOrderLocation(data.fan_location),\n          tank_location: ConvertTankStatus(data.tank_location),\n          machine_location: ConvertOrderLocation(data.machine_location),\n        };\n      });\n\n      this.setState({ data: result });\n\n      this.setState({ loading: false });\n    });\n  }\n  onChange = (checked) => {\n    this.setState({ keepMachineDetails: checked ? true : false });\n  };\n\n  componentDidMount = () => {\n    this.GetOrders();\n    GetMovableMachines().then((machines) => {\n      if (machines) {\n        this.setState({ movableMachines: machines });\n      }\n    });\n  };\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"70%\",\n          maxWidth: \"70%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n          marginLeft: \"auto\",\n          marginRight: \"auto\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"large\"\n          loading={this.state.loading}\n          //   expandable={{\n          //     expandedRowRender: (record) => (\n          //       <div\n          //         key={\"keyexpandable \" + record.id}\n          //         style={{ marginLeft: \"3rem\" }}\n          //       >\n          //         {renderProperties(\"Ürün\", record.description)}\n          //         {renderProperties(\"Tarih\", record.date)}\n          //         {renderProperties(\n          //           \"Marka\",\n          //           this.configFile.brand.filter(\n          //             (b) => b.type === record.brand\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\"Sipariş No\", record.order_no)}\n          //         {renderProperties(\n          //           \"Sipariş Miktarı\",\n          //           String(record.order_amount)\n          //         )}\n          //         {renderProperties(\n          //           \"Tip\",\n          //           this.configFile.type.filter((b) => b.type === record.type)[0]\n          //             ?.text\n          //             ? this.configFile.type.filter(\n          //                 (b) => b.type === record.type\n          //               )[0]?.text\n          //             : this.configFile.machine_type.filter(\n          //                 (b) => b.type === record.type\n          //               )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Fan Tipi\",\n          //           this.configFile.cooler_type.filter(\n          //             (b) => b.type === record.cooler_type\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Kazan Boyutu\",\n          //           record.tank_size ? record.tank_size + \" LT\" : null\n          //         )}\n          //         {renderProperties(\n          //           \"Kazan Materyali\",\n          //           this.configFile.caldron_material.filter(\n          //             (b) => b.type === record.caldron_material\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Pompa\",\n          //           this.configFile.pump.filter((b) => b.type === record.pump)[0]\n          //             ?.text\n          //         )}\n          //         {renderProperties(\"Model Yılı\", record.year)}\n          //         {renderProperties(\n          //           \"Meme Tipi\",\n          //           this.configFile.meme_type.filter(\n          //             (b) => b.type === record.meme_type\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\"Meme Aralığı\", record.meme_distance)}\n          //         {renderProperties(\n          //           \"Çeki Tipi\",\n          //           this.configFile.tow_type.filter(\n          //             (b) => b.type === record.tow_type\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Kol Tipi\",\n          //           this.configFile.arm_type.filter(\n          //             (b) => b.type === record.arm_type\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\"Kol Uzunluğu\", record.arm_length)}\n          //         {renderProperties(\n          //           \"Şase Rengi\",\n          //           this.configFile.chassis_color.filter(\n          //             (b) => b.type === record.chassis_color\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Kazan Rengi\",\n          //           Capitalize(record.caldron_color)\n          //         )}\n          //         {renderProperties(\n          //           \"Kazan Tipi\",\n          //           this.configFile.caldron_type.filter(\n          //             (b) => b.type === record.caldron_type\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\n          //           \"Kumanda\",\n          //           this.configFile.commander.filter(\n          //             (b) => b.type === record.commander\n          //           )[0]?.text\n          //         )}\n          //         {renderProperties(\"Alternatif Özellikler\", record.alt_features)}\n          //         <Button\n          //           style={{ marginRight: \"10px\" }}\n          //           type=\"primary\"\n          //           onClick={() => {\n          //             GetMachineListFromOrderById(record.id).then(\n          //               (orderDetails) => {\n          //                 this.setState({\n          //                   orderDetails: {\n          //                     ...this.state.orderDetails,\n          //                     [record.id]: orderDetails,\n          //                   },\n          //                 });\n          //               }\n          //             );\n          //           }}\n          //         >\n          //           Detayları Göster\n          //         </Button>\n          //         {this.renderOrderDetails(record)}\n          //         {record.status !== \"cancelled\" &&\n          //         this.props.user?.role == \"admin\" &&\n          //         !this.props.isFinishedOrders ? (\n          //           <Popconfirm\n          //             title=\"Bu siparişi iptal etmek istediğinizden emin misiniz?\"\n          //             onConfirm={() => DeleteOrder(record.id)}\n          //             okText=\"Evet\"\n          //             cancelText=\"Hayır\"\n          //           >\n          //             <Button\n          //               danger\n          //               style={{ marginBottom: 10, marginRight: 10 }}\n          //               type=\"primary\"\n          //             >\n          //               Siparişi İptal Et\n          //             </Button>\n          //           </Popconfirm>\n          //         ) : null}\n\n          //         <Link\n          //           style={{\n          //             display:\n          //               record.order_amount !== record.pending_amount && \"none\",\n          //             color: \"white\",\n          //             marginBottom: 10,\n          //             backgroundColor: \"#1677ff\",\n          //             padding: \"8px\",\n          //             borderRadius: \"6px\",\n          //           }}\n          //           to={{\n          //             pathname: `/editOrder/${record.serial_number}`,\n          //           }}\n          //         >\n          //           Düzenle\n          //         </Link>\n          //       </div>\n          //     ),\n          //   }}\n          pagination={{ defaultPageSize: 100, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        <Button\n          loading={this.state.loading}\n          style={{\n            float: \"right\",\n            marginLeft: \"1rem\",\n            marginRight: \"1rem\",\n            cursor: \"pointer\",\n          }}\n          type=\"primary\"\n          onClick={() => exportWithExcel(this?.state?.data)}\n        >\n          Excel'e Aktar\n        </Button>\n        <Modal\n          title={\n            this.state.orderSelected?.serial_number + \" Seri Numaralı Makine.\"\n          }\n          open={this.state.orderModalVisible}\n          onOk={() => {\n            this.setState({ orderModalVisible: false });\n            SwitchMachines({\n              order1: this.state.selectedToMove,\n              order2: this.state.orderSelected,\n              keepMachineDetails: this.state.keepMachineDetails,\n            });\n          }}\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <p>Lütfen değişim yapmak istediğiniz makineyi seçin.</p>\n          <Select\n            showSearch\n            optionFilterProp=\"children\"\n            filterOption={(input, option) =>\n              option.children.toLowerCase().indexOf(input.toLowerCase()) >= 0\n            }\n            style={{ width: \"100%\" }}\n            onSelect={(value) => {\n              console.log(value);\n              this.setState({\n                selectedToMove: {\n                  serial_number: value.split(\" \")[0],\n                  order_id: Number.parseInt(value.split(\" \")[1]),\n                },\n              });\n            }}\n            placeholder=\"Lütfen bir makine seçin\"\n            defaultActiveFirstOption={true}\n          >\n            {this.state.movableMachines?.map((machine) => {\n              return (\n                <Select.Option\n                  key={machine.order_id}\n                  value={machine.serial_number + \" \" + machine.order_id}\n                >\n                  {machine.serial_number +\n                    \" \" +\n                    machine.customer +\n                    \" \" +\n                    Capitalize(machine.location)}\n                </Select.Option>\n              );\n            })}\n          </Select>\n          <div style={{ marginTop: \"2rem\", display: \"flex\", gap: \"1rem\" }}>\n            <span>Sipariş Detayını Değiştir</span>\n            <Switch onChange={this.onChange} />\n            <span>Sipariş Detayını Koru (STOK)</span>\n          </div>\n        </Modal>\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(ActiveMachineStatus);\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button, Modal, Form } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport { Capitalize, ConvertDateTime } from \"../helper\";\nimport OrderDetails from \"../components/OrderDetails\";\nimport {\n  GetApprovalPendingOrders,\n  addApproval,\n  updateAnOffer,\n} from \"../services/OrderService\";\nimport { connect } from \"react-redux\";\nimport TextArea from \"antd/es/input/TextArea\";\n\nconst moment = require(\"moment/min/moment-with-locales\");\nmoment.locale(\"tr\");\n\nclass PendingOrdersScreenForFinance extends React.Component {\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  onFinish = (values) => {\n    console.log(\"Success:\", values);\n  };\n  onFinishFailed = (errorInfo) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  state = {\n    orderModalVisible: false,\n    priceForModal: 0,\n    detailForModal: \"\",\n    updatePriceModalVisible: false,\n    confirmButtonLoadingForModals: false,\n    selectedOrderId: \"\",\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a, b) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Adres\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        render: (text) => <td>{Capitalize(text)}</td>,\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n      },\n\n      {\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"date\",\n        render: (text) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a, b) => moment(a.date).unix() - moment(b.date).unix(),\n      },\n      {\n        title: \"Kimden\",\n        dataIndex: \"order_tooker\",\n        render: (text) => {\n          let fromDealer = text.startsWith(\"Bayi\");\n\n          return (\n            <span style={{ color: fromDealer ? \"red\" : \"initial\" }}>\n              {text}\n            </span>\n          );\n        },\n      },\n      {\n        title: \"İşlemler\",\n        render: (text, order) =>\n          order.order_tooker.startsWith(\"Bayi\") ? (\n            <td>\n              {this.props.user.role == \"admin\" ? (\n                order.price !== 0 ? (\n                  <Button\n                    style={{\n                      marginBottom: 10,\n                    }}\n                    type=\"primary\"\n                    onClick={() => {\n                      this.setState({\n                        updatePriceModalVisible: true,\n                        selectedOrderId: order.id,\n                        orderDetails: order,\n                      });\n                    }}\n                  >\n                    Fiyatı Güncelle\n                  </Button>\n                ) : (\n                  <Button\n                    style={{\n                      marginBottom: 10,\n                    }}\n                    type=\"default\"\n                    onClick={() => {\n                      this.setState({\n                        orderModalVisible: true,\n                        selectedOrderId: order.id,\n                        orderDetails: order,\n                      });\n                    }}\n                  >\n                    Fiyat Teklifi Ver\n                  </Button>\n                )\n              ) : null}\n            </td>\n          ) : (\n            <td>\n              {this.props.user.role == \"admin\" ? (\n                <Button\n                  style={{ marginBottom: 10 }}\n                  type=\"primary\"\n                  onClick={() => {\n                    addApproval(order.id).then((res) => {\n                      if (res) {\n                        this.GetPendingOrdersData();\n                      }\n                    });\n                  }}\n                >\n                  Finans Onayı Ver\n                </Button>\n              ) : null}\n            </td>\n          ),\n        sorter: (a, b) =>\n          (a.production_unit == \"diger\" ? false : !a.can_start_production) -\n          (b.production_unit == \"diger\" ? false : !b.can_start_production),\n      },\n    ],\n  };\n\n  componentDidMount = () => {\n    this.GetPendingOrdersData();\n  };\n\n  GetPendingOrdersData = () => {\n    GetApprovalPendingOrders().then((result) => {\n      this.setState({ data: result });\n    });\n  };\n  UpdateAnOffer = () => {\n    this.setState({ confirmButtonLoadingForModals: true });\n    updateAnOffer(\n      this.state.selectedOrderId,\n      this.state.priceForModal,\n      this.state.detailForModal\n    ).then(() => {\n      this.setState({\n        orderModalVisible: false,\n        updatePriceModalVisible: false,\n        confirmButtonLoadingForModals: false,\n      });\n      this.GetPendingOrdersData();\n    });\n  };\n\n  render() {\n    const state = this.state;\n\n    const filteredData = state.data?.filter(\n      (res) => !res.approval_role?.includes(this.props.user.secondRole)\n    );\n\n    return (\n      <>\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={state.loading}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={state.columns}\n          dataSource={filteredData}\n          expandable={{\n            expandedRowRender: (record) => (\n              <OrderDetails\n                externalDetails={\n                  <>\n                    <div style={{ display: \"flex\" }}>\n                      <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>\n                        {\"Fiyat\"}:\n                      </p>\n                      <p>\n                        {record.price\n                          ? record.price + \"₺\"\n                          : \"Fiyat Bilgisi Yok\"}\n                      </p>\n                    </div>\n                    <div style={{ display: \"flex\" }}>\n                      <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>\n                        {\"Ödeme Detayları\"}:\n                      </p>\n                      <p>{record.payment_detail || \"Ödeme Detayı Yok\"}</p>\n                    </div>\n                  </>\n                }\n                hideShowTransactions\n                serial_number={record.serial_number}\n              />\n            ),\n          }}\n        />\n        <Modal\n          title={\"Fiyat Teklifi Ver\"}\n          open={this.state.orderModalVisible}\n          onOk={() => this.UpdateAnOffer()}\n          confirmLoading={this.state.confirmButtonLoadingForModals}\n          okText=\"Gönder\"\n          onCancel={() => {\n            this.setState({ orderModalVisible: false });\n          }}\n        >\n          <Form\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            style={{\n              maxWidth: 600,\n            }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label=\"Fiyat\"\n              name=\"price\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Bu alanı doldurun!\",\n                },\n              ]}\n            >\n              <Input\n                type=\"number\"\n                onChange={(e) =>\n                  this.setState({ priceForModal: e.target.value })\n                }\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Ödeme Detayı\"\n              name=\"payment_detail\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Bu alanı doldurun!\",\n                },\n              ]}\n            >\n              <TextArea\n                rows={3}\n                maxLength={255}\n                onChange={(e) =>\n                  this.setState({ detailForModal: e.target.value })\n                }\n              />\n            </Form.Item>\n          </Form>\n        </Modal>\n\n        <Modal\n          title={\"Fiyat Teklifi Güncelle\"}\n          open={this.state.updatePriceModalVisible}\n          onOk={() => this.UpdateAnOffer()}\n          confirmLoading={this.state.confirmButtonLoadingForModals}\n          okText=\"Güncelle\"\n          onCancel={() => {\n            this.setState({ updatePriceModalVisible: false });\n          }}\n        >\n          <Form\n            name=\"basic\"\n            labelCol={{\n              span: 8,\n            }}\n            wrapperCol={{\n              span: 16,\n            }}\n            style={{\n              maxWidth: 600,\n            }}\n            initialValues={{\n              remember: true,\n            }}\n            onFinish={this.onFinish}\n            onFinishFailed={this.onFinishFailed}\n            autoComplete=\"off\"\n          >\n            <Form.Item\n              label=\"Fiyat\"\n              name=\"price\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Bu alanı doldurun!\",\n                },\n              ]}\n            >\n              <Input\n                defaultValue={this.state.orderDetails.price}\n                type=\"number\"\n                onChange={(e) =>\n                  this.setState({ priceForModal: e.target.value })\n                }\n              />\n            </Form.Item>\n            <Form.Item\n              label=\"Ödeme Detayı\"\n              name=\"payment_detail\"\n              rules={[\n                {\n                  required: true,\n                  message: \"Bu alanı doldurun!\",\n                },\n              ]}\n            >\n              <Input\n                defaultValue={this.state.orderDetails.payment_detail}\n                maxLength={255}\n                onChange={(e) =>\n                  this.setState({ detailForModal: e.target.value })\n                }\n              />\n            </Form.Item>\n          </Form>\n        </Modal>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(PendingOrdersScreenForFinance);\n","import React from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst ArmInvoice = () => {\n  const location = useLocation();\n  const item = location?.state?.item;\n\n  const data = {\n    \"Marka :\": item?.brand ?? \"-\",\n    \"Tip :\": item?.type ?? \"-\",\n    \"Kazan Rengi :\": item?.caldron_color ?? \"-\",\n    \"Hacim (LT):\": item?.tank_size ?? \"-\",\n    \"Materyal :\": item?.caldron_material ?? \"-\",\n    \"Çeki Tipi :\": item?.cooler_type ?? \"-\",\n    \"Pompa :\": item?.pump ?? \"-\",\n    \"Kumanda :\": item?.commander ?? \"-\",\n    \"Meme Tipi :\": item?.meme_type ?? \"-\",\n    \"Kol Tipi :\": item?.arm_type ?? \"-\",\n    \"Meme Aralığı :\": item?.meme_distance ?? \"-\",\n    \"Kol Uzunluğu :\": item?.arm_length ?? \"-\",\n    \"Şase Rengi :\": item?.chassis_color ?? \"-\",\n    \"Ek Özellikler :\": item?.description ?? \"-\",\n    \"Sipariş Alan :\": item?.order_tooker ?? \"-\",\n  };\n\n  return (\n    <div style={{ width: \"1500px\", marginRight: \"auto\", marginLeft: \"auto\" }}>\n      <div style={{ border: \"1px solid black\" }}>\n        <div\n          style={{\n            display: \"flex\",\n            borderBottom: \"1px solid black\",\n            gap: \"1rem\",\n            padding: \"1rem\",\n            justifyContent: \"space-evenly\",\n          }}\n        >\n          <img width=\"40\" height=\"40\" src=\"agrotek.png\" alt=\"logo\" />\n          <div style={{ display: \"flex\", gap: \"1rem\" }}>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <span>ÇİFTÇİ</span>\n              <div\n                style={{\n                  border: \"1px solid orange\",\n                  height: \"15px\",\n                  width: \"30px\",\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", gap: \"5px\" }}>\n              <span>BAYİ</span>\n              <div\n                style={{\n                  border: \"1px solid orange\",\n                  height: \"15px\",\n                  width: \"30px\",\n                }}\n              />\n            </div>\n            <div style={{ display: \"flex\", gap: \"5px\" }}></div>\n            <span>KURUMSAL</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <span>SÖZLEŞME TARİHİ: ......./....../...... </span>\n          <span>SERİ NO:</span>\n          <span>PLASİYER:</span>\n        </div>\n        <div style={{ display: \"flex\" }}>\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 1,\n              gap: \"1rem\",\n            }}\n          >\n            <span style={{ textAlign: \"center\" }}>\n              MÜŞTERİNİN AD-SOYAD/ÜNVANI:\n            </span>\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n              }}\n            >\n              MÜŞTERİNİN ADRESİ /GSM/TEL NO:\n            </span>\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n              }}\n            >\n              MAKİNE ADI:\n            </span>\n            <br />\n\n            <span\n              style={{\n                height: \"27px\",\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n              }}\n            >\n              SATIŞ ŞEKLİ:\n            </span>\n\n            <span\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                borderBottom: \"1px solid black\",\n              }}\n            >\n              TAHSİLAT VADESİ:\n            </span>\n            <br />\n            <br />\n          </div>\n          <div style={{ backgroundColor: \"black\", width: \"1px\" }} />\n          <div\n            style={{\n              display: \"flex\",\n              flexDirection: \"column\",\n              flex: 3,\n              gap: \"1rem\",\n            }}\n          >\n            <span style={{ marginLeft: \"20px\", height: \"19px\" }}>\n              {item?.customer}\n            </span>\n            <span\n              style={{\n                borderTop: \"1px solid black\",\n              }}\n            >\n              <span style={{ marginLeft: \"20px\", height: \"19px\" }}>\n                {item?.phone_number}\n              </span>\n            </span>\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                height: \"19px\",\n                display: \"flex\",\n                justifyContent: \"space-evenly\",\n              }}\n            >\n              <div\n                style={{\n                  display: \"flex\",\n                  flexDirection: \"column\",\n                  gap: \"1rem\",\n                }}\n              >\n                <span\n                  style={{\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  ADET\n                </span>\n                <span>{item?.order_amount} AD.</span>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"115px\",\n                }}\n              />\n              <div style={{}}>\n                <span\n                  style={{\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  FİYAT\n                </span>\n                <span>{}</span>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"115px\",\n                }}\n              />\n              <div style={{}}>\n                <span\n                  style={{\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  TUTAR\n                </span>\n                <span>{}</span>\n              </div>\n              <div\n                style={{\n                  backgroundColor: \"black\",\n                  width: \"1px\",\n                  height: \"115px\",\n                }}\n              />\n              <div style={{}}>\n                <span\n                  style={{\n                    textDecoration: \"underline\",\n                  }}\n                >\n                  ÖZEL NOTLAR\n                </span>\n                <span></span>\n              </div>\n            </div>\n            <br />\n\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                display: \"flex\",\n                justifyContent: \"space-around\",\n                paddingLeft: \"1rem\",\n                paddingTop: \"8px\",\n              }}\n            >\n              <div style={{ display: \"flex\", gap: \"5px\" }}>\n                <span>NAKİT</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n\n              <div style={{ display: \"flex\", gap: \"5px\" }}>\n                <span>ZİRAİ KREDİ</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n              <div style={{ display: \"flex\", gap: \"5px\" }}>\n                <span>C/H</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n              <div style={{ display: \"flex\", gap: \"5px\" }}>\n                <span>ÇEK</span>\n                <div\n                  style={{\n                    border: \"1px solid orange\",\n                    height: \"15px\",\n                    width: \"30px\",\n                  }}\n                />\n              </div>\n            </div>\n            <div\n              style={{\n                textAlign: \"center\",\n                borderTop: \"1px solid black\",\n                display: \"flex\",\n              }}\n            >\n              <span\n                style={{\n                  flex: 2,\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                }}\n              >\n                ÖDEME TARİHİ\n              </span>\n              <span\n                style={{\n                  flex: 1,\n                  borderBottom: \"1px solid black\",\n                  borderRight: \"1px solid black\",\n                }}\n              >\n                TUTAR\n              </span>\n              <span style={{ flex: 2, borderBottom: \"1px solid black\" }}>\n                KALAN BAKİYE\n              </span>\n            </div>\n          </div>\n        </div>\n      </div>\n      <div style={{ padding: \"1rem\", marginTop: \"1rem\" }}>\n        <span>\n          1-Makina, ……………………… …………………………. adresinde ALICIYA teslim edilecektir.\n          Taşıma ve Nakliye Bedeli …..……. ait olup, bu nedenle oluşacak hasarlar\n          da ……………. sorumluluğundadır. Makina’nın teslimi ile sorumluluk ALICIYA\n          geçer. <br /> 2-Makina 2 yıl boyunca SATICININ garantisi altında olup\n          bu süre içerisinde makinanın servis ve bakımları ücretsiz olarak\n          yapılacaktır. Sonraki yıllarda makinanın servis ve bakımından ücret\n          alınabileceğini ALICI kabul eder. Makinanın teslimi ile birlikte,\n          makinanın kurulum ve kullanımla ilgili olarak ALICI’ya eğitim\n          verilecektir. Hatalı kullanımdan doğan arızalar garanti kapsamı\n          dışındadır.\n          <br /> 3-Nakit satımlarda, ALICI’dan peşinat alınır, kalan bedel en\n          geç makinanın teslim günü ALICI tarafından SATICI’ya ödenecektir.\n          Bedelin ödenmemesi halinde makina, SATICI tarafından ALICI’ya teslim\n          edilmez.\n          <br /> 4-Makina ……….. tarihinde ALICI’ya teslim edilecektir.\n          SATICI’nın teslimdeki 1 aylık gecikmesinin, olağan olduğunu ALICI\n          baştan kabul etmektedir. ALICI’nın; en geç …………. tarihine kadar\n          makinayı teslim almaması halinde, ALICI ; makina bedelini bu tarihten\n          itibaren işleyecek ticari temerrüt faizi ile tazmin etmekle yükümlü\n          olacağını kabul ve taahhüt eder.\n          <br /> 5-ALICI; makina’nın teslimi anında makinanın başında\n          fotoğraflarının çekilmesini ve bunun SATICI’ya ait sosyal medya\n          hesaplarında ad-soyad ve il bilgisi ile paylaşılmasını açık rızası ile\n          kabul etmiş olup, bunun kişisel veri ihlali olmadığını ve olmayacağını\n          kabul ve beyan etmiştir.\n          <br /> 6-SATICI; 6698 Sayılı Kişisel Verilerin Korunması Kanunu’nun\n          10.maddesi gereği Aydınlatma Metnini ALICI’ya arz etmektedir.\n          SATICI’nın veri sorumlusu Agrotek İlaçlama Makinaları Ve Tarım\n          Tek.İth.İhr.Zirai Ürünler San.Tic. Ltd. Şti. olup, aşağıdaki kaşe ve\n          imza bölümünde adres, vergi dairesi ve numarası, mersis numarası ve\n          telefon ve fax numaraları bulunmaktadır. SATICI ; işbu sözleşme\n          kapsamında ALICI’nın ad ve soyadını, ünvanını, T.C. Kimlik Numarasını,\n          adres bilgisini, vergi kimlik numarasını ve fotoğrafını işleyecektir.\n          İşbu kişisel veriler SATICI tarafından faturalandırma, ürün teslimi,\n          eğitim hizmet takibi,garanti takibi, ürün takibi, reklam ve tanıtım\n          sebepleri ile işlenecektir. Kişisel veri işleme süresi 10 senedir.\n          Kişisel Verilerden ALICI’nın adı-soyadı, bulunduğu il ve makina ile\n          çekilmiş fotoğrafları SATICI’nın sosyal medya hesaplarında\n          paylaşılacaktır. ALICININ ad ve soyad, ünvan, T.C. Kimlik Numarası,\n          adres bilgisi, vergi kimlik numarası gibi kişisel verileri\n          faturalandırma süreci ile ilgili olarak, Vergi Dairesi, Tarım İl\n          Müdürlüğü, Sanayi ve Ticaret Bakanlığı, Hazine ve Maliye Bakanlığı ve\n          sair resmi kurumlarla paylaşılmaktadır. 6698 sayılı Kanun’un\n          11.maddesi uyarınca SATICI; ALICI’yı “Kişisel verilerinin işlenip\n          işlenmediğini öğrenme,kişisel verileri işlenmişse buna ilişkin bilgi\n          talep etme, kişisel verilerinin işlenme amacını ve bunların amacına\n          uygun kullanılıp kullanılmadığını öğrenme, yurt içinde veya yurt\n          dışında kişisel verilerinin aktarıldığı üçüncü kişileri bilme, kişisel\n          verilerin eksik veya yanlış işlenmiş olması hâlinde bunların\n          düzeltilmesini isteme, kişisel verilerin silinmesini veya yok\n          edilmesini isteme, kişisel verilerin düzeltilmesi, silinmesi veya yok\n          edilmesine ilişkin işlemlerin kişisel verilerin aktarıldığı üçüncü\n          kişilere bildirilmesini isteme, işlenen verilerin münhasıran otomatik\n          sistemler vasıtasıyla analiz edilmesi suretiyle aleyhine bir sonucun\n          ortaya çıkmasına itiraz etme,kişisel verilerinin kanuna aykırı olarak\n          işlenmesi sebebiyle zarara uğraması hâlinde zararın giderilmesini\n          talep etme” haklarına sahip olduğu konusunda açıkça bilgilendirmiştir.\n        </span>\n      </div>\n      <div\n        style={{\n          padding: \"1rem\",\n          marginTop: \"1rem\",\n          display: \"flex\",\n          gap: \"24rem\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <span>FATURA NO :</span>\n          <span>İRSALİYE NO :</span>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            fontWeight: \"bold\",\n          }}\n        >\n          <span>SEVK TARİHİ :</span>\n          <span>ARAÇ BİLGİSİ :</span>\n        </div>\n      </div>\n      <div\n        style={{\n          padding: \"1rem\",\n          marginTop: \"1rem\",\n          display: \"flex\",\n          gap: \"3rem\",\n        }}\n      >\n        <span style={{ textDecoration: \"underline\", fontWeight: \"bold\" }}>\n          SATIŞA KONU MAKİNE KONFİGRASYONU\n        </span>\n        <span\n          style={{\n            border: \"1px solid black\",\n            width: \"300px\",\n            padding: \"4px\",\n            height: \"20px\",\n          }}\n        >\n          SERİ NO:{\" \"}\n        </span>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"-1.2rem\",\n          }}\n        >\n          <span>SATICI KAŞE / İMZA</span>\n          <textarea cols=\"30\" rows=\"5\"></textarea>\n        </div>\n        <div\n          style={{\n            display: \"flex\",\n            flexDirection: \"column\",\n            marginTop: \"-1.2rem\",\n          }}\n        >\n          <span>ALICI AD-SOYAD / İMZA</span>\n          <textarea cols=\"30\" rows=\"5\"></textarea>\n        </div>\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent: \"space-between\",\n          marginRight: \"10%\",\n        }}\n      >\n        <div>\n          <ul>\n            {Object.entries(data).map(([key, value]) => (\n              <li key={key}>\n                <strong>{key}</strong> {value}\n              </li>\n            ))}\n          </ul>\n        </div>\n\n        <span\n          style={{\n            border: \"1px solid black\",\n            width: \"300px\",\n            height: \"150px\",\n            padding: \"4px\",\n          }}\n        >\n          NOTLAR:\n        </span>\n        {/* <div style={{ display: \"flex\", flexDirection: \"column\", gap: \"1rem\" }}>\n          <span>MODEL :</span>\n          <span>BAĞLANTI TİPİ :</span>\n          <span>TANK CİNSİ :</span>\n          <span>HACİM LT :</span>\n          <span>TANK RENGİ :</span>\n          <span>TANK İÇİ YIKAMA :</span>\n          <span>ÇEKİ TİPİ :</span>\n          <span>POMPA :</span>\n          <span>KUMANDA :</span>\n          <span>PİSTON KUMANDA :</span>\n          <span>KOL TİPİ :</span>\n          <span>KOL GENİŞLİĞİ :</span>\n          <span>ENJEKTÖR TİPİ :</span>\n          <span>ENJEKTÖR ARASI :</span>\n          <span>ŞASİ RENGİ :</span>\n        </div>\n        <div\n          style={{\n            marginLeft: \"5rem\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            gap: \"1rem\",\n          }}\n        >\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>ALBATROS</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGROTEK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>ASILIR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÇEKİLİR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>POLYESTER</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>POLYETİLEN</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TRENT</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>VIOLET</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YAĞM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SARD.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>400</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>600</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>800</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>1000</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>1200</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>1600</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>2000</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>3000</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>KB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>MB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YB</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KG</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KM</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KY</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KS</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SG</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SY</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>B</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>VAR</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YOK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>TARLA TİPİ PEHLİVAN</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>DAYAMALI</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>DÜZ ÇEKİ</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>AR 1064</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AR 1203</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AR 1604</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BP 135</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BP 185</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BHA 170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BHA 200</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGR.160</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>BY MATIC 50</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>M170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ M170</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>VDR50</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>UCM</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ARAG 180</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ARAG 400</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>YERLİ S.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>BRG.SEL.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>STANDART</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SIRALI</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>SABİT</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TRENT</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>COMPACT</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TH.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>PİRAMİT</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TEK.SİL.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ÇIPLAK</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>HORT.DOL.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>AGROJET</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>10 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>12 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>15 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>16 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>17 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>18 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>21 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>24 MT.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>PBM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>VPBM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TYMN1T.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>TYMN4T.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>ARG4T.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>35 CM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>38 CM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>50 CM.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>PPRC BORU</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>KROM BORU</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SÜNE MEMESİZ</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>SÜNE MEMELİ</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n          <div style={{ display: \"flex\", gap: \"15px\", alignItems: \"center\" }}>\n            <span>BOYA</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n            <span>GALV.DALD.</span>\n            <div\n              style={{\n                border: \"1px solid orange\",\n                height: \"15px\",\n                width: \"30px\",\n              }}\n            />\n          </div>\n        </div> */}\n      </div>\n    </div>\n  );\n};\n\nexport default ArmInvoice;\n","/* eslint-disable eqeqeq */\nimport {\n  Button,\n  DatePicker,\n  Form,\n  Input,\n  Radio,\n  Select,\n  Layout,\n  Spin,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport { renderToString } from \"react-dom/server\";\n\nimport moment from \"moment\";\nimport { TakeOrderDealer } from \"../../services/OrderService\";\n\nimport { UndoOutlined } from \"@ant-design/icons\";\nimport { padLeft } from \"../../helper\";\nimport { getOrderNumber } from \"../../services/ConfigService\";\nimport { Body } from \"../MainScreen\";\nimport { useSelector } from \"react-redux\";\nconst { Option, OptGroup } = Select;\nconst QRCode = require(\"qrcode.react\");\nconst { Content } = Layout;\n\nfunction CreateOrderScreenForDealers() {\n  const configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n  const [isFetching, setIsFetching] = useState(false);\n  const [orderNoCounter, setOrderNoCounter] = useState(0);\n  const [qrCodeValue, setQrCodeValue] = useState(\"\");\n  const [productionUnit, setProductionUnit] = useState(\"turbo\");\n  const user = useSelector((state) => state.auth.user);\n\n  const [serialState, setSerialState] = useState({\n    brand: \"\",\n    type: \"\",\n    cooler_type: \"\",\n    arm_type: \"\",\n    tank_size: 0,\n    pump: \"\",\n    order_no: \"\",\n    order_amount: 0,\n    year: \"\",\n  });\n\n  let serialCode = SerialCodeGenerator();\n  const [form] = Form.useForm();\n\n  const createOrderNo = () => {\n    setIsFetching(true);\n    getOrderNumber().then((res) => {\n      setOrderNoCounter(15);\n      setSerialState({\n        ...serialState,\n        order_no: String(res),\n      });\n      setIsFetching(false);\n    });\n  };\n\n  useEffect(() => {\n    if (orderNoCounter > 0) {\n      setTimeout(() => {\n        setOrderNoCounter(orderNoCounter - 1);\n      }, 1000);\n    }\n  }, [orderNoCounter]);\n\n  useEffect(() => {\n    createOrderNo();\n  }, []);\n\n  return (\n    <Layout style={{ minHeight: \"100vh\" }}>\n      <Content>\n        <Body\n          style={{\n            display: \"flex\",\n            justifyContent: \"space-evenly\",\n            flexWrap: \"wrap-reverse\",\n          }}\n        >\n          <Form\n            form={form}\n            onFieldsChange={() => {\n              let product =\n                form.getFieldValue(\"brand\") == \"turktraktor\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"model\")\n                  : form.getFieldValue(\"production_unit\") == \"turbo\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"tank_size\") +\n                    \"LT \" +\n                    form.getFieldValue(\"cooler_type\") +\n                    form.getFieldValue(\"fan_radius\") +\n                    \"cm \" +\n                    form.getFieldValue(\"fan_type\")\n                  : form.getFieldValue(\"production_unit\") == \"kollu\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"tank_size\") +\n                    \"LT \" +\n                    form.getFieldValue(\"arm_type\") +\n                    \" \" +\n                    form.getFieldValue(\"arm_length\")\n                  : form.getFieldValue(\"production_unit\") == \"diger\"\n                  ? form.getFieldValue(\"brand\") +\n                    \" \" +\n                    form.getFieldValue(\"type\")\n                  : \"\";\n              setQrCodeValue(serialCode + \",\" + product.toUpperCase());\n              if (\n                form.getFieldValue(\"model\") &&\n                form.getFieldValue(\"brand\") == \"turktraktor\"\n              ) {\n                form.setFieldsValue({\n                  caldron_color: form.getFieldValue(\"model\"),\n                });\n              }\n            }}\n            onFinish={async (values) => {\n              setIsFetching(true);\n              setOrderNoCounter(0);\n              values.order_no = serialState.order_no;\n              values.serial_number = serialCode;\n              values.customer = user.name + \" \" + user.surname;\n              values.caldron_stock = \"new\";\n              values.phone_number = \"0000000000\";\n              values.address = \"\";\n\n              const result = await TakeOrderDealer(values, serialCode);\n              if (result === true) {\n                printQRCode(values.order_amount);\n                form.resetFields();\n              }\n              setIsFetching(false);\n            }}\n            labelCol={{ span: 5 }}\n            wrapperCol={{ span: 24 }}\n            style={{ maxWidth: \"calc(100% - 168px)\", minWidth: \"450px\" }}\n            requiredMark={false}\n          >\n            <Form.Item\n              name=\"date\"\n              initialValue={moment()}\n              label=\"Tarih\"\n              required\n            >\n              <DatePicker disabled />\n            </Form.Item>\n\n            <Form.Item\n              name=\"production_unit\"\n              label=\"Üretim Birimi\"\n              initialValue=\"turbo\"\n              required\n            >\n              <Radio.Group\n                onChange={(e) => {\n                  setProductionUnit(e.target.value);\n                }}\n              >\n                <Radio value=\"turbo\">Turbo</Radio>\n                <Radio value=\"kollu\">Kollu</Radio>\n                <Radio value=\"diger\">Diğer</Radio>\n              </Radio.Group>\n            </Form.Item>\n            <Form.Item name=\"brand\" label=\"Marka\" required>\n              <Select\n                onSelect={(type) => {\n                  const brand = configFile.brand.filter(\n                    (brand) => brand.type == type\n                  );\n                  setSerialState({ ...serialState, brand: brand[0].shortend });\n                }}\n              >\n                {(function myFunction() {\n                  return configFile.brand.map((brand) => {\n                    return (\n                      <Option key={brand.type} value={brand.type}>\n                        {brand.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n            {productionUnit == \"turbo\" && serialState.brand == \"T\" ? (\n              <Form.Item name=\"model\" label=\"Model\" required>\n                <Select>\n                  {(function myFunction() {\n                    return configFile.turktraktormodel.map((brand) => {\n                      return (\n                        <Option key={brand.text} value={brand.text}>\n                          {brand.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              </Form.Item>\n            ) : null}\n\n            <Form.Item name=\"type\" label=\"Tip\" required>\n              {productionUnit === \"turbo\" || productionUnit === \"kollu\" ? (\n                <Select\n                  onSelect={(btype) => {\n                    const type = configFile.type.filter(\n                      (type) => type.type == btype\n                    );\n                    setSerialState({ ...serialState, type: type[0].shortend });\n                  }}\n                >\n                  {(function myFunction() {\n                    return configFile.type.map((type) => {\n                      return (\n                        <Option key={type.type} value={type.type}>\n                          {type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              ) : (\n                <Select\n                  onSelect={(btype) => {\n                    const type = configFile.machine_type.filter(\n                      (machine_type) => machine_type.type == btype\n                    );\n                    setSerialState({ ...serialState, type: type[0].shortend });\n                  }}\n                >\n                  {(function myFunction() {\n                    return configFile.machine_type.map((machine_type) => {\n                      return (\n                        <Option\n                          key={machine_type.type}\n                          value={machine_type.type}\n                        >\n                          {machine_type.text}\n                        </Option>\n                      );\n                    });\n                  })()}\n                </Select>\n              )}\n            </Form.Item>\n            {productionUnit == \"kollu\" || productionUnit == \"turbo\" ? (\n              <>\n                <Form.Item\n                  name=\"caldron_color\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 32, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Kazan Rengi\"\n                  required\n                >\n                  <Input />\n                </Form.Item>\n\n                <Form.Item\n                  name=\"caldron_material\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Materyal\"\n                  required\n                >\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.caldron_material.map(\n                        (caldron_material) => {\n                          return (\n                            <Option\n                              key={caldron_material.type}\n                              value={caldron_material.type}\n                            >\n                              {caldron_material.text}\n                            </Option>\n                          );\n                        }\n                      );\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"tank_size\" label=\"Depo Hacmi\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const tank_size = configFile.tank_size.filter(\n                        (tank_size) => tank_size.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        tank_size: parseInt(tank_size[0].shortend),\n                      });\n                    }}\n                  >\n                    <OptGroup label=\"Litre\">\n                      {(function myFunction() {\n                        return configFile.tank_size.map((tank_size) => {\n                          return (\n                            <Option key={tank_size.type} value={tank_size.type}>\n                              {tank_size.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </OptGroup>\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"tow_type\" label=\"Çeki Tipi\" required>\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.tow_type.map((tow_type) => {\n                        return (\n                          <Option key={tow_type.type} value={tow_type.type}>\n                            {tow_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"pump\" label=\"Pompa\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const pump = configFile.pump.filter(\n                        (pump) => pump.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        pump: pump[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.pump.map((pump) => {\n                        return (\n                          <Option key={pump.type} value={pump.type}>\n                            {pump.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item name=\"commander\" label=\"Kumanda\" required>\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.commander.map((commander) => {\n                        return (\n                          <Option key={commander.type} value={commander.type}>\n                            {commander.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n                <Form.Item\n                  name=\"meme_type\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Meme Tipi\"\n                  required\n                >\n                  <Select>\n                    {(function myFunction() {\n                      return configFile.meme_type.map((meme_type) => {\n                        return (\n                          <Option key={meme_type.type} value={meme_type.type}>\n                            {meme_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n              </>\n            ) : null}\n            {productionUnit == \"kollu\" ? (\n              <>\n                <Form.Item name=\"arm_type\" label=\"Kol Tipi\" required>\n                  <Select\n                    onSelect={(btype) => {\n                      const arm_type = configFile.arm_type.filter(\n                        (type) => type.type == btype\n                      );\n                      setSerialState({\n                        ...serialState,\n                        arm_type: arm_type[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.arm_type.map((arm_type) => {\n                        return (\n                          <Option key={arm_type.type} value={arm_type.type}>\n                            {arm_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n\n                <Form.Item\n                  name=\"meme_distance\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 19, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Meme Aralığı\"\n                  required\n                >\n                  <Input maxLength={19} />\n                </Form.Item>\n                <Form.Item\n                  name=\"arm_length\"\n                  rules={[\n                    { required: true, message: \"Bu alan boş bırakılamaz\" },\n                    { max: 30, message: \"Maksimum sınıra ulaşıldı.\" },\n                  ]}\n                  label=\"Kol Uzunluğu\"\n                  required\n                >\n                  <Input maxLength={20} />\n                </Form.Item>\n              </>\n            ) : null}\n            {productionUnit == \"turbo\" ? (\n              <>\n                <Form.Item name=\"cooler_type\" label=\"Fan Tipi\" required>\n                  <Select\n                    onSelect={(type) => {\n                      const cooler_type = configFile.cooler_type.filter(\n                        (cooler_type) => cooler_type.type == type\n                      );\n                      setSerialState({\n                        ...serialState,\n                        cooler_type: cooler_type[0].shortend,\n                      });\n                    }}\n                  >\n                    {(function myFunction() {\n                      return configFile.cooler_type.map((cooler_type) => {\n                        return (\n                          <Option\n                            key={cooler_type.type}\n                            value={cooler_type.type}\n                          >\n                            {cooler_type.text}\n                          </Option>\n                        );\n                      });\n                    })()}\n                  </Select>\n                </Form.Item>\n\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"caldron_type\" label=\"Kazan Tipi\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.caldron_type.map((caldron_type) => {\n                          return (\n                            <Option\n                              key={caldron_type.type}\n                              value={caldron_type.type}\n                            >\n                              {caldron_type.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"fan_radius\" label=\"Pervane Çapı\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.fan_radius.map((fan_radius) => {\n                          return (\n                            <Option\n                              key={fan_radius.type}\n                              value={fan_radius.type}\n                            >\n                              {fan_radius.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n                {productionUnit == \"turbo\" ? (\n                  <Form.Item name=\"fan_type\" label=\"Pervane Tipi\" required>\n                    <Select>\n                      {(function myFunction() {\n                        return configFile.fan_type.map((fan_type) => {\n                          return (\n                            <Option key={fan_type.type} value={fan_type.type}>\n                              {fan_type.text}\n                            </Option>\n                          );\n                        });\n                      })()}\n                    </Select>\n                  </Form.Item>\n                ) : null}\n              </>\n            ) : null}\n\n            <Form.Item name=\"order_no\" label=\"Sipariş No\">\n              <Input\n                disabled\n                value={serialState.order_no}\n                style={{ width: \"324px\" }}\n                maxLength={6}\n                onChange={(e) => {\n                  setSerialState({\n                    ...serialState,\n                    order_no: padLeft(e.target.value, \"0\", 6),\n                  });\n                }}\n              />\n              <Button\n                disabled={isFetching || orderNoCounter}\n                icon={<Spin indicator={<UndoOutlined spin={isFetching} />} />}\n                onClick={createOrderNo}\n              />\n            </Form.Item>\n            <Form.Item\n              name=\"order_amount\"\n              rules={[\n                { required: true, message: \"Bu alan boş bırakılamaz\" },\n                { max: 5, message: \"Maksimum sınıra ulaşıldı.\" },\n              ]}\n              label=\"Sipariş Adedi\"\n              required\n            >\n              <Input\n                max={99}\n                min={1}\n                type=\"number\"\n                onChange={(e) => {\n                  setSerialState({\n                    ...serialState,\n                    order_amount: parseInt(e.target.value),\n                  });\n                }}\n              />\n            </Form.Item>\n            <Form.Item name=\"year\" label=\"Yıl\" initialValue={moment()} required>\n              <DatePicker disabled picker=\"year\" />\n            </Form.Item>\n\n            <Form.Item name=\"chassis_color\" label=\"Şase Rengi\" required>\n              <Select>\n                {(function myFunction() {\n                  return configFile.chassis_color.map((chassis_color) => {\n                    return (\n                      <Option\n                        key={chassis_color.type}\n                        value={chassis_color.type}\n                      >\n                        {chassis_color.text}\n                      </Option>\n                    );\n                  });\n                })()}\n              </Select>\n            </Form.Item>\n\n            <Form.Item\n              name=\"alt_features\"\n              rules={[{ max: 250, message: \"Maksimum sınıra ulaşıldı.\" }]}\n              label=\"Ek Özellikler\"\n              required\n            >\n              <Input.TextArea maxLength={250} />\n            </Form.Item>\n            <Form.Item name=\"serial_number\" label=\"Seri No\">\n              <Input disabled placeholder={serialCode} />\n            </Form.Item>\n\n            <Form.Item wrapperCol={{ span: 24 }}>\n              <Button\n                loading={isFetching}\n                disabled={!orderNoCounter}\n                size=\"large\"\n                block\n                type=\"primary\"\n                htmlType=\"submit\"\n              >\n                Siparişi Oluştur {orderNoCounter || \"(Sipariş No'yu Yenileyin)\"}\n              </Button>\n            </Form.Item>\n          </Form>\n          <div style={{ display: \"block\", width: \"min-content\" }}>\n            <QRCode value={qrCodeValue} renderAs=\"svg\" size={178} />\n            {/*<Button type=\"primary\" icon={<PrinterOutlined />} disabled={serialCode.length < 10} onClick={printQRCode} block>\n            Yazdır\n            </Button>*/}\n          </div>\n        </Body>\n      </Content>\n    </Layout>\n  );\n\n  function SerialCodeGenerator() {\n    switch (productionUnit) {\n      case \"kollu\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.arm_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"turbo\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.cooler_type +\n          serialState.tank_size +\n          serialState.pump +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      case \"diger\":\n        return (\n          serialState.brand +\n          serialState.type +\n          serialState.year +\n          0 +\n          serialState.order_no +\n          0 +\n          serialState.order_amount\n        );\n      default:\n        return \"\";\n    }\n  }\n\n  function printQRCode(amount) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n    let reversed = reverseString(serialCode);\n    let data = splitTwoPartsBarcode(reversed);\n    let qrCode = qrCodeValue.split(\",\");\n\n    for (let i = amount; i > 0; i--) {\n      qrCode[0] = data[0] + \"0\" + i;\n\n      let svg = renderToString(\n        <div style={{ width: \"50mm\", height: \"64mm\" }}>\n          <QRCode\n            value={qrCode[0] + \",\" + qrCode[1]}\n            style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n            renderAs=\"svg\"\n          />\n          <p style={{ margin: 10 }}>{qrCode[0]}</p>\n        </div>\n      );\n\n      printWindow?.document.write(String(svg));\n    }\n    if (printWindow) {\n      printWindow.document.body.style.margin = \"0\";\n      printWindow.document.close();\n      printWindow.print();\n    }\n  }\n}\n\nexport function splitTwoPartsBarcode(str) {\n  var index = str.indexOf(\"0\"); // Gets the first index where a space occours\n  var amount = reverseString(str.substr(0, index)); // Gets the first part\n  var serial = reverseString(str.substr(index + 1));\n\n  return [serial, amount];\n}\n\nexport function reverseString(str) {\n  var newString = \"\";\n  for (var i = str.length - 1; i >= 0; i--) {\n    newString += str[i];\n  }\n  return newString;\n}\n\nexport default CreateOrderScreenForDealers;\n","/* eslint-disable eqeqeq */\nimport React from \"react\";\nimport { Table, Input, Button, Divider, Popconfirm } from \"antd\";\nimport { SearchOutlined } from \"@ant-design/icons\";\nimport {\n  dealerConfirmOffer,\n  dealerDenyOffer,\n  GetAllDealerOrders,\n} from \"../../services/OrderService\";\nimport { renderToString } from \"react-dom/server\";\n\nimport {\n  Capitalize,\n  ConvertDateTime,\n  ConvertOrderLocation,\n} from \"../../helper\";\n\nimport { connect } from \"react-redux\";\nimport axios from \"axios\";\nimport ExcelJS from \"exceljs\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport customParseFormat from \"dayjs/plugin/customParseFormat\";\nimport OrderHistory from \"../../components/OrderHistory\";\n\ndayjs.extend(customParseFormat);\n\ndayjs.locale(\"tr\");\n\nconst QRCode = require(\"qrcode.react\");\n\nexport function renderProperties(key, value) {\n  if (value) {\n    return (\n      <div style={{ display: \"flex\" }}>\n        <p style={{ fontWeight: \"bold\", marginRight: \"5px\" }}>{key}:</p>\n        <p>{value}</p>\n      </div>\n    );\n  }\n}\n\nclass OrderScreenForDealer extends React.Component {\n  constructor(props) {\n    super(props);\n    this.renderOrderDetails = this.renderOrderDetails.bind(this);\n  }\n  configFile = JSON.parse(localStorage.getItem(\"config\") ?? \"{}\");\n\n  renderOrderDetails(record) {\n    return Object.keys(this.state.orderDetails).map((detail) => {\n      return detail == record.id\n        ? this.state.orderDetails[detail].map((detail) => {\n            return (\n              <>\n                <div\n                  style={{\n                    width: \"80%\",\n                    marginTop: 30,\n                    display: \"flex\",\n                    flexDirection: \"row\",\n                    justifyContent: \"space-between\",\n                  }}\n                >\n                  <div>\n                    {renderProperties(\n                      \"Seri No\",\n                      Capitalize(detail.serial_number)\n                    )}\n                    {renderProperties(\n                      \"Pompa Seri No\",\n                      Capitalize(detail.pump_serial)\n                    )}\n                    {renderProperties(\n                      \"Bulunduğu Konum\",\n                      ConvertOrderLocation(detail.location) +\n                        (detail.comment ? ` (${detail.comment})` : \" \")\n                    )}\n                    {renderProperties(\n                      \"Son İşlem Tarihi\",\n                      ConvertDateTime(detail.row_created_date)\n                    )}\n                    {renderProperties(\n                      \"Planlama Tarihi\",\n                      ConvertDateTime(detail.planned_date)\n                    )}\n                  </div>\n                  <div style={{ width: \"min-content\" }}>\n                    {detail.location !== \"teslimat\" &&\n                    detail.location !== \"iptal\" &&\n                    this.props.user.role == \"admin\" ? (\n                      <Button\n                        style={{ marginBottom: 10, width: \"100%\" }}\n                        type=\"primary\"\n                        onClick={() => {\n                          this.setState({\n                            orderModalVisible: true,\n                            orderSelected: {\n                              serial_number: detail.serial_number,\n                              order_id: record.id,\n                            },\n                          });\n                        }}\n                      >\n                        Siparişi Kaydır\n                      </Button>\n                    ) : null}\n\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        let qrCodeValue =\n                          detail.serial_number + \",\" + record.description;\n                        this.printQRCode(qrCodeValue, detail.serial_number);\n                      }}\n                    >\n                      Qr Kodu Yazdır\n                    </Button>\n                    <Button\n                      style={{ marginBottom: 10, width: \"100%\" }}\n                      onClick={() => {\n                        this.setState({\n                          historyModalVisible: true,\n                          historyModalId: detail.id,\n                          orderSelected: {\n                            serial_number: detail.serial_number,\n                            order_id: record.id,\n                          },\n                        });\n                      }}\n                    >\n                      İşlem Geçmişini Göster\n                    </Button>\n                    {detail.test_comment ? (\n                      <Button\n                        block\n                        onClick={() => {\n                          axios\n                            .get(\"./finalkontrolformu.xlsx\", {\n                              responseType: \"blob\",\n                            })\n                            .then((res) => {\n                              const FileSaver = require(\"file-saver\");\n\n                              var reader = new FileReader();\n                              reader.readAsArrayBuffer(res.data);\n                              reader.onload = function (e) {\n                                const workbook = new ExcelJS.Workbook();\n                                workbook.xlsx.load(e.target.result).then(() => {\n                                  var worksheet = workbook.getWorksheet(1);\n                                  var row = worksheet.getRow(58);\n                                  row.getCell(1).value = detail.test_comment; // A5's value set to 5\n                                  row.commit();\n\n                                  var row2 = worksheet.getRow(8);\n                                  row2.getCell(1).value = detail.serial_number;\n                                  row2.getCell(5).value = detail.test_manager; // A5's value set to 5\n                                  row2.getCell(6).value = ConvertDateTime(\n                                    detail.test_date\n                                  ); // A5's value set to 5\n                                  row2.commit();\n\n                                  workbook.xlsx.writeBuffer().then((buffer) => {\n                                    const blob = new Blob([buffer], {\n                                      type: \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=UTF-8\",\n                                    });\n\n                                    FileSaver.saveAs(blob, \"deneme.xlsx\");\n                                  });\n                                });\n                              };\n                            });\n                        }}\n                      >\n                        Test Raporu\n                      </Button>\n                    ) : null}\n\n                    {/* {this.props.user?.role == \"admin\" &&\n                    detail.location !== \"iptal\" ? (\n                      <Popconfirm\n                        title=\"Bu makinayı silmek istediğinizden emin misiniz? Bu işlem geri alınamaz\"\n                        onConfirm={() => DeleteSingleMachine(detail.id)}\n                        okText=\"Evet\"\n                        cancelText=\"Hayır\"\n                      >\n                        <Button\n                          danger\n                          block\n                          style={{ marginBottom: 10 }}\n                          type=\"primary\"\n                        >\n                          Makinayı Sil\n                        </Button>\n                      </Popconfirm>\n                    ) : null} */}\n                  </div>\n                </div>\n                <Divider />\n              </>\n            );\n          })\n        : null;\n    });\n  }\n\n  getColumnSearchProps = (dataIndex) => ({\n    filterDropdown: ({\n      setSelectedKeys,\n      selectedKeys,\n      confirm,\n      clearFilters,\n    }) => (\n      <div style={{ padding: 8 }}>\n        <Input\n          ref={(node) => {\n            this.searchInput = node;\n          }}\n          placeholder={`Search ${dataIndex}`}\n          value={selectedKeys[0]}\n          onChange={(e) =>\n            setSelectedKeys(e.target.value ? [e.target.value] : [])\n          }\n          onPressEnter={() =>\n            this.handleSearch(selectedKeys, confirm, dataIndex)\n          }\n          style={{\n            width: 188,\n            marginBottom: 8,\n            display: \"block\",\n          }}\n        />\n        <Button\n          type=\"primary\"\n          onClick={() => this.handleSearch(selectedKeys, confirm, dataIndex)}\n          size=\"small\"\n          style={{ width: 90, marginRight: 8 }}\n        >\n          Bul\n        </Button>\n        <Button\n          onClick={() => this.handleReset(clearFilters)}\n          size=\"small\"\n          style={{ width: 90 }}\n        >\n          Sıfırla\n        </Button>\n      </div>\n    ),\n    filterIcon: (filtered) => (\n      <SearchOutlined\n        type=\"search\"\n        style={{ color: filtered ? \"#1890ff\" : undefined }}\n      />\n    ),\n    onFilter: (value, record) =>\n      record[dataIndex]\n        ?.toString()\n        ?.toLowerCase()\n        ?.includes(value.toLowerCase()),\n    onFilterDropdownOpenChange: (visible) => {\n      if (visible) {\n        setTimeout(() => this.searchInput.select());\n      }\n    },\n    render: (text) => text,\n  });\n\n  handleSearch = (selectedKeys, confirm, dataIndex) => {\n    confirm();\n    this.setState({\n      searchText: selectedKeys[0],\n      searchedColumn: dataIndex,\n    });\n  };\n\n  handleReset = (clearFilters) => {\n    clearFilters();\n    this.setState({ searchText: \"\" });\n  };\n\n  state = {\n    movableMachines: [],\n    orderModalVisible: false,\n    csvdata: [\n      [\n        \"Seri No\",\n        \"Sipariş No\",\n        \"Sipariş Tarihi\",\n        \"Müşteri\",\n        \"Telefon\",\n        \"Adres\",\n        \"Sipariş Alan\",\n        \"Durum\",\n      ],\n    ],\n    orderDetails: {},\n    loading: false,\n    size: \"small\",\n    top: \"none\",\n    bottom: \"bottomRight\",\n    ellipsis: true,\n    data: [],\n    columns: [\n      {\n        title: \"Sipariş No\",\n        dataIndex: \"order_no\",\n        sorter: (a, b) => a.order_no.localeCompare(b.order_no),\n        ...this.getColumnSearchProps(\"order_no\"),\n      },\n      {\n        title: \"Müşteri\",\n        dataIndex: \"customer\",\n        sorter: (a, b) => a.customer.localeCompare(b.customer),\n        ...this.getColumnSearchProps(\"customer\"),\n      },\n      {\n        title: \"Telefon No\",\n        dataIndex: \"phone_number\",\n        ...this.getColumnSearchProps(\"phone_number\"),\n      },\n      {\n        title: \"Lokasyon\",\n        dataIndex: \"address\",\n        ...this.getColumnSearchProps(\"address\"),\n      },\n      {\n        title: \"Seri No\",\n        dataIndex: \"serial_number\",\n        sorter: (a, b) => a.serial_number.localeCompare(b.serial_number),\n        ...this.getColumnSearchProps(\"serial_number\"),\n      },\n      {\n        title: \"Ürün Tipi\",\n        dataIndex: \"production_unit\",\n        sorter: (a, b) => a.production_unit.localeCompare(b.production_unit),\n        ...this.getColumnSearchProps(\"production_unit\"),\n        render: (text) => <td>{Capitalize(text)}</td>,\n      },\n      {\n        title: \"Miktar\",\n        sorter: (a, b) => a.pending_amount - b.pending_amount,\n        ...this.getColumnSearchProps(\"order_amount\"),\n        render: (text, order) => (\n          <td>\n            {String(order.order_amount - order.pending_amount) +\n              \"/\" +\n              order.order_amount}\n          </td>\n        ),\n      },\n      {\n        title: \"Sipariş Tarihi\",\n        dataIndex: \"date\",\n        //render: (text: string) => <td>{ConvertDateTime(text)}</td>,\n        sorter: (a, b) =>\n          dayjs(a.date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"date\"),\n      },\n\n      {\n        title: \"Sipariş Alan\",\n        dataIndex: \"order_tooker\",\n        sorter: (a, b) => a.order_tooker.localeCompare(b.order_tooker),\n        ...this.getColumnSearchProps(\"order_tooker\"),\n        render: (text) => <td>{text.toUpperCase()}</td>,\n      },\n      {\n        title: \"Sipariş Durumu\",\n        dataIndex: \"laststatus\",\n        sorter: (a, b) => a.laststatus.localeCompare(b.laststatus),\n        ...this.getColumnSearchProps(\"laststatus\"),\n        render: (text, column) => (\n          <td>\n            {column.status === \"pendingfinance\"\n              ? \"FİNANS ONAYI BEKLENIYOR\"\n              : text?.toUpperCase()}\n          </td>\n        ),\n      },\n      {\n        title: \"Planlanan Tarih\",\n        dataIndex: \"planned_date\",\n        sorter: (a, b) =>\n          dayjs(a.planned_date, \"D MMMM YYYY, HH:mm\").unix() -\n          dayjs(b.planned_date, \"D MMMM YYYY, HH:mm\").unix(),\n        ...this.getColumnSearchProps(\"planned_date\"),\n      },\n      // {\n      //   title: \"İşlemler\",\n      //   dataIndex: \"\",\n      //   render: (item) => (\n      //     <>\n      //       <Link\n      //         style={{\n      //           color: \"white\",\n      //           marginBottom: 10,\n      //           backgroundColor: \"#1677ff\",\n      //           padding: \"8px\",\n      //           borderRadius: \"6px\",\n      //         }}\n      //         to={{\n      //           pathname: `${\n      //             item?.production_unit === \"kollu\"\n      //               ? \"/armInvoice\"\n      //               : item?.production_unit === \"turbo\"\n      //               ? \"/fanInvoice\"\n      //               : \"\"\n      //           }`,\n      //           state: { item },\n      //         }}\n      //       >\n      //         Fatura\n      //       </Link>\n      //       <Link\n      //         style={{ marginLeft: \"1rem\" }}\n      //         to={{\n      //           pathname: `/proformaInvoice`,\n      //           state: { item },\n      //         }}\n      //       >\n      //         Proforma\n      //       </Link>\n      //     </>\n      //   ),\n      // },\n    ],\n  };\n\n  printQRCode(value, serialNumber) {\n    let printWindow = window.open(\"\", \"\", \"height=1024, width=1024\");\n\n    let svg = renderToString(\n      <div style={{ width: \"50mm\", height: \"64mm\" }}>\n        <QRCode\n          value={value}\n          style={{ height: \"44mm\", width: \"44mm\", margin: \"3mm\" }}\n          renderAs=\"svg\"\n        />\n        <p style={{ margin: 10 }}>{serialNumber}</p>\n      </div>\n    );\n    printWindow?.document.write(String(svg));\n\n    printWindow.document.body.style.margin = 0;\n    printWindow?.document.close();\n    printWindow?.print();\n  }\n\n  componentDidUpdate(prevProps) {\n    if (\n      this.props.isFinishedOrders !== prevProps.isFinishedOrders ||\n      this.props.isCancelledOrders !== prevProps.isCancelledOrders\n    ) {\n      this.GetOrders();\n    }\n  }\n\n  GetOrders() {\n    GetAllDealerOrders().then((result) => {\n      this.setState({ data: result });\n    });\n  }\n  dealerDenyOffer(id) {\n    dealerDenyOffer(id).then(() => {\n      this.GetOrders();\n    });\n  }\n  dealerConfirmOffer(id) {\n    dealerConfirmOffer(id).then(() => {\n      this.GetOrders();\n    });\n  }\n\n  componentDidMount = () => {\n    this.GetOrders();\n  };\n  searchInput;\n\n  render() {\n    const state = this.state;\n\n    return (\n      <div\n        style={{\n          width: \"100%\",\n          maxWidth: \"100%\",\n          height: \"100%\",\n          maxHeight: \"100%\",\n        }}\n      >\n        <Table\n          rowKey={(row) => \"key\" + row.id}\n          size=\"small\"\n          loading={this.state.loading}\n          expandable={{\n            expandedRowRender: (record) => (\n              <div\n                key={\"keyexpandable \" + record.id}\n                style={{ marginLeft: \"3rem\" }}\n              >\n                {renderProperties(\"Ürün\", record.description)}\n                {renderProperties(\"Tarih\", record.date)}\n                {renderProperties(\n                  \"Marka\",\n                  this.configFile.brand.filter(\n                    (b) => b.type === record.brand\n                  )[0]?.text\n                )}\n                {renderProperties(\"Sipariş No\", record.order_no)}\n                {renderProperties(\n                  \"Sipariş Miktarı\",\n                  String(record.order_amount)\n                )}\n                {renderProperties(\n                  \"Tip\",\n                  this.configFile.type.filter((b) => b.type === record.type)[0]\n                    ?.text\n                    ? this.configFile.type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                    : this.configFile.machine_type.filter(\n                        (b) => b.type === record.type\n                      )[0]?.text\n                )}\n                {renderProperties(\n                  \"Fan Tipi\",\n                  this.configFile.cooler_type.filter(\n                    (b) => b.type === record.cooler_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Boyutu\",\n                  record.tank_size ? record.tank_size + \" LT\" : null\n                )}\n                {renderProperties(\n                  \"Kazan Materyali\",\n                  this.configFile.caldron_material.filter(\n                    (b) => b.type === record.caldron_material\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Pompa\",\n                  this.configFile.pump.filter((b) => b.type === record.pump)[0]\n                    ?.text\n                )}\n                {renderProperties(\"Model Yılı\", record.year)}\n                {renderProperties(\n                  \"Meme Tipi\",\n                  this.configFile.meme_type.filter(\n                    (b) => b.type === record.meme_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Meme Aralığı\", record.meme_distance)}\n                {renderProperties(\n                  \"Çeki Tipi\",\n                  this.configFile.tow_type.filter(\n                    (b) => b.type === record.tow_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kol Tipi\",\n                  this.configFile.arm_type.filter(\n                    (b) => b.type === record.arm_type\n                  )[0]?.text\n                )}\n                {renderProperties(\"Kol Uzunluğu\", record.arm_length)}\n                {renderProperties(\n                  \"Şase Rengi\",\n                  this.configFile.chassis_color.filter(\n                    (b) => b.type === record.chassis_color\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kazan Rengi\",\n                  Capitalize(record.caldron_color)\n                )}\n                {renderProperties(\n                  \"Kazan Tipi\",\n                  this.configFile.caldron_type.filter(\n                    (b) => b.type === record.caldron_type\n                  )[0]?.text\n                )}\n                {renderProperties(\n                  \"Kumanda\",\n                  this.configFile.commander.filter(\n                    (b) => b.type === record.commander\n                  )[0]?.text\n                )}\n                {renderProperties(\"Alternatif Özellikler\", record.alt_features)}\n                {renderProperties(\n                  \"Ödeme Detayları\",\n                  record.payment_detail || \"Ödeme Detayı Yok\"\n                )}\n                {renderProperties(\n                  \"Fiyat\",\n                  record.price ? record.price + \"₺\" : \"Fiyat Bilgisi Yok\"\n                )}\n\n                <Popconfirm\n                  title=\"Bu fiyatı onaylamak istediğinizden emin misiniz?\"\n                  onConfirm={() => dealerConfirmOffer(record.order_no)}\n                  okText=\"Evet\"\n                  cancelText=\"Hayır\"\n                >\n                  <Button style={{ marginRight: \"10px\" }} type=\"primary\">\n                    Onayla\n                  </Button>\n                </Popconfirm>\n\n                <Popconfirm\n                  title=\"Bu siparişi iptal etmek istediğinizden emin misiniz?\"\n                  onConfirm={() => dealerDenyOffer(record.order_no)}\n                  okText=\"Evet\"\n                  cancelText=\"Hayır\"\n                >\n                  <Button\n                    danger\n                    style={{ marginBottom: 10, marginRight: 10 }}\n                    type=\"primary\"\n                  >\n                    Siparişi İptal Et\n                  </Button>\n                </Popconfirm>\n\n                {this.renderOrderDetails(record)}\n              </div>\n            ),\n          }}\n          pagination={{ defaultPageSize: 10, position: [\"bottomRight\"] }}\n          columns={this.state.columns}\n          dataSource={state.data}\n        />\n\n        {this.state.historyModalVisible ? (\n          <OrderHistory\n            isVisible={this.state.historyModalVisible}\n            machine_id={this.state.historyModalId}\n            serial_number={this.state.orderSelected?.serial_number}\n            setIsVisible={(visible) =>\n              this.setState({ historyModalVisible: visible })\n            }\n          />\n        ) : null}\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => ({\n  user: state.auth.user,\n});\n\nexport default connect(mapStateToProps)(OrderScreenForDealer);\n","import { Menu } from \"antd\";\nimport type { MenuTheme } from \"antd\";\nimport {\n  BarChartOutlined,\n  UserOutlined,\n  ClockCircleOutlined,\n  HomeOutlined,\n  LogoutOutlined,\n  ReconciliationOutlined,\n  OrderedListOutlined,\n  IssuesCloseOutlined,\n  InboxOutlined,\n  GroupOutlined,\n} from \"@ant-design/icons\";\nimport styled from \"styled-components\";\nimport ManageEmployeScreen from \"./manageEmployeScreen\";\nimport { useHistory, Switch, Route } from \"react-router\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logout } from \"../redux/actions/authActions\";\nimport CreateOrderScreen from \"./createOrderScreen\";\nimport OrderScreen from \"./OrderScreen.js\";\nimport ManageConfigScreen from \"./manageConfigScreen\";\nimport DeliveryScreen from \"./DeliveryScreen\";\nimport TankProducerScreen from \"./TankProducerScreen\";\nimport PendingOrdersScreen from \"./PendingOrdersScreen\";\nimport ActiveOrdersScreen from \"./ActiveOrdersScreen\";\nimport { RootState } from \"../redux/reducers\";\nimport StatisticsScreen from \"./StatisticsScreen\";\nimport OrderPlanningScreen from \"./OrderPlanningScreen\";\nimport ChassisProductionTasksScreen from \"./ChassisProductionTasksScreen\";\nimport ArmProductionTasksScreen from \"./ArmProductionTasksScreen\";\nimport FanProductionTasksScreen from \"./FanProductionTasksScreen\";\nimport GenericTasksScreen from \"./GenericTasksScreen\";\nimport OtherNeedListScreen from \"./OtherNeedListScreen\";\nimport UserRollsConfigScreen from \"./UserRollsConfigScreen\";\nimport GenericTasksConfigScreen from \"./GenericTasksConfigScreen\";\nimport ShortcutsScreen from \"./ShortcutsScreen\";\nimport NeedListScreen from \"./NeedListScreen\";\nimport MachineTypeConfigScreen from \"./MachineTypeConfigScreen\";\n\nimport { useState } from \"react\";\nimport IhtiyacListesiConfigScreen from \"./IhtiyacListesiConfigScreen\";\n\nimport \"dayjs/locale/tr\";\nimport dayjs from \"dayjs\";\nimport GenericTaskWithRole from \"./GenericTaskWithRole\";\nimport EditOrderScreen from \"./editOrderScreen\";\nimport FilteredOrdersScreen from \"./FilteredOrdersScreen\";\nimport QrCodeScreen from \"./QrCodeScreen\";\nimport TankProducerScreenFromShortcuts from \"./TankProducerScreenFromShortcuts\";\nimport ActiveMachineStatus from \"./ActiveMachineStatus\";\nimport PendingOrdersScreenForFinance from \"./PendingOrdersScreenForFinance\";\nimport ProformaInvoice from \"./Invoice/ProformaInvoice\";\nimport ArmInvoice from \"./Invoice/ArmInvoice\";\nimport FanInvoice from \"./Invoice/FanInvoice\";\nimport CreateOrderScreenForDealers from \"./ForDealer/CreateOrderScreen\";\nimport OrderScreenForDealer from \"./ForDealer/AllOrdersScreen\";\n\ndayjs.locale(\"tr\");\n\nfunction MainScreen() {\n  const history = useHistory();\n  const dispatch = useDispatch();\n  const user = useSelector((state: RootState) => state.auth.user);\n\n  const [theme, setTheme] = useState<MenuTheme>(\"light\");\n\n  const changeTheme = (value: boolean) => {\n    setTheme(value ? \"dark\" : \"light\");\n  };\n\n  return (\n    <MainContainer>\n      <Menu\n        defaultSelectedKeys={[window.location.pathname.split(\"/\")[1]]}\n        onClick={(info) => {\n          switch (info.key) {\n            case \"ihtiyacListesiConfig\":\n              history.push(\"ihtiyacListesiConfig\");\n              break;\n            case \"GenericTasksScreen\":\n              history.push(\"GenericTasksScreen\");\n              break;\n            case \"machineTypeConfig\":\n              history.push(\"machineTypeConfig\");\n              break;\n            case \"userRollsConfig\":\n              history.push(\"userRollsConfig\");\n              break;\n            case \"manageConfig\":\n              history.push(\"manageConfig\");\n              break;\n            case \"createOrder\":\n              history.push(\"/createOrder\");\n              break;\n            case \"reports\":\n              history.push(\"/reports\");\n              break;\n            case \"users\":\n              history.push(\"/users\");\n              break;\n            case \"deliveries\":\n              history.push(\"/deliveries\");\n              break;\n            case \"pendingorders\":\n              history.push(\"/pendingorders\");\n              break;\n            case \"pendingordersforfinance\":\n              history.push(\"/pendingordersforfinance\");\n              break;\n            case \"tankproducer\":\n              history.push(\"/tankproducer\");\n              break;\n            case \"activeorders\":\n              history.push(\"/activeorders\");\n              break;\n            case \"chassisproduction\":\n              history.push(\"/chassisproductiontasks\");\n              break;\n            case \"fanproduction\":\n              history.push(\"/fanproductiontasks\");\n              break;\n            case \"armproduction\":\n              history.push(\"/armproductiontasks\");\n              break;\n            case \"productionplans\":\n              history.push(\"/planning\");\n              break;\n            case \"finishedorders\":\n              history.push(\"/finishedorders\");\n              break;\n            case \"cancelledorders\":\n              history.push(\"/cancelledorders\");\n              break;\n            case \"orders\":\n              history.push(\"/orders\");\n              break;\n            case \"activegenerictasks\":\n              history.push(\"/activegenerictasks\");\n              break;\n            case \"finishedgenerictasks\":\n              history.push(\"/finishedgenerictasks\");\n              break;\n\n            case \"chassisneedlist\":\n              history.push(\"/chassisneedlist\");\n              break;\n            case \"fanneedlist\":\n              history.push(\"/fanneedlist\");\n              break;\n            case \"pumpneedlist\":\n              history.push(\"/pumpneedlist\");\n              break;\n            case \"towneedlist\":\n              history.push(\"/towneedlist\");\n              break;\n            case \"commanderneedlist\":\n              history.push(\"/commanderneedlist\");\n              break;\n            case \"otherneedlist\":\n              history.push(\"/otherneedlist\");\n              break;\n            case \"generictasksconfig\":\n              history.push(\"/generictasksconfig\");\n              break;\n            case \"shortcuts\":\n              history.push(\"/shortcuts\");\n              break;\n            case \"editOrder\":\n              history.push(\"/editOrder\");\n              break;\n            case \"qrcode\":\n              history.push(\"/qrcode\");\n              break;\n            case \"armInvoice\":\n              history.push(\"/armInvoice\");\n              break;\n            case \"fanInvoice\":\n              history.push(\"/fanInvoice\");\n              break;\n            case \"proformaInvoice\":\n              history.push(\"/proformaInvoice\");\n              break;\n            case \"createOrderForDealer\":\n              history.push(\"/createOrderForDealer\");\n              break;\n            case \"ordersForDealer\":\n              history.push(\"/ordersForDealer\");\n              break;\n\n            default:\n              history.push(\"/\");\n              break;\n          }\n          changeTheme(false);\n        }}\n        mode=\"horizontal\"\n        theme={theme}\n      >\n        <Menu.Item\n          style={{ float: \"right\", pointerEvents: \"none\" }}\n          key=\"watchtome\"\n          icon={<ClockCircleOutlined />}\n        >\n          {dayjs().format(\"D MMMM YYYY dddd\")}\n        </Menu.Item>\n\n        {user.role === \"bayi\" && (\n          <>\n            <Menu.Item\n              key=\"createOrderForDealer\"\n              icon={<ReconciliationOutlined />}\n            >\n              Sipariş Oluştur\n            </Menu.Item>\n\n            <Menu.SubMenu\n              key=\"OrdersSubMenu\"\n              icon={<BarChartOutlined />}\n              title=\"Siparişler\"\n            >\n              <Menu.Item key=\"ordersForDealer\" icon={<BarChartOutlined />}>\n               Aktif Bayi Siparişleri\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        )}\n\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <>\n            <Menu.Item key=\"\" icon={<HomeOutlined />}>\n              Anasayfa\n            </Menu.Item>\n            {user.role === \"admin\" ? (\n              <Menu.Item key=\"users\" icon={<UserOutlined />}>\n                Kullanıcıları Yönet\n              </Menu.Item>\n            ) : null}\n            {user.role === \"admin\" ? (\n              <Menu.Item key=\"createOrder\" icon={<ReconciliationOutlined />}>\n                Sipariş Oluştur\n              </Menu.Item>\n            ) : null}\n            <Menu.SubMenu\n              key=\"OrdersSubMenu\"\n              icon={<BarChartOutlined />}\n              title=\"Siparişler\"\n            >\n              <Menu.Item key=\"orders\" icon={<BarChartOutlined />}>\n                Tüm Siparişler\n              </Menu.Item>\n              <Menu.Item key=\"finishedorders\" icon={<BarChartOutlined />}>\n                Tamamlanan Siparişler\n              </Menu.Item>\n              <Menu.Item key=\"cancelledorders\" icon={<BarChartOutlined />}>\n                İptal Edilen Siparişler\n              </Menu.Item>\n              <Menu.Item key=\"pendingorders\" icon={<IssuesCloseOutlined />}>\n                Onay Bekleyen Makineler\n              </Menu.Item>\n              {(user.secondRole === \"financemanager\" ||\n                user.secondRole === \"generalmanager\") && (\n                <Menu.Item\n                  key=\"pendingordersforfinance\"\n                  icon={<IssuesCloseOutlined />}\n                >\n                  Finans Onayı Bekleyenler\n                </Menu.Item>\n              )}\n              <Menu.Item key=\"activeorders\" icon={<OrderedListOutlined />}>\n                Aktif Makineler\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <>\n            <Menu.SubMenu\n              key=\"ProductionsSubMenu\"\n              icon={<BarChartOutlined />}\n              title=\"Üretim\"\n            >\n              <Menu.Item key=\"productionplans\" icon={<GroupOutlined />}>\n                Üretim Planlama\n              </Menu.Item>\n              <Menu.Item key=\"tankproducer\" icon={<GroupOutlined />}>\n                Depo Üretici\n              </Menu.Item>\n              <Menu.Item key=\"chassisproduction\" icon={<GroupOutlined />}>\n                Şase Üretimdekiler\n              </Menu.Item>\n              <Menu.Item key=\"fanproduction\" icon={<GroupOutlined />}>\n                Fan Üretimdekiler\n              </Menu.Item>\n              <Menu.Item key=\"armproduction\" icon={<GroupOutlined />}>\n                Kol Üretimdekiler\n              </Menu.Item>\n            </Menu.SubMenu>\n\n            <Menu.Item key=\"deliveries\" icon={<InboxOutlined />}>\n              Teslimatlar\n            </Menu.Item>\n          </>\n        ) : null}\n        {user.role === \"tankproducer\" ? (\n          <Menu.Item key=\"tankproducer\" icon={<GroupOutlined />}>\n            Depo Üretici\n          </Menu.Item>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <>\n            <Menu.SubMenu\n              key=\"GenericTasksSubmenu\"\n              icon={<BarChartOutlined />}\n              title=\"İş Emirleri\"\n            >\n              <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n                Aktif İş Emirleri\n              </Menu.Item>\n              <Menu.Item key=\"finishedgenerictasks\" icon={<GroupOutlined />}>\n                Tamamlanan İş Emirleri\n              </Menu.Item>\n              <Menu.Item key=\"generictasksconfig\" icon={<GroupOutlined />}>\n                Yetkilendirme Ayarları\n              </Menu.Item>\n              <Menu.Item key=\"shortcuts\" icon={<GroupOutlined />}>\n                Kısayollar\n              </Menu.Item>\n              {/* <Menu.Item key=\"qrcode\" icon={<GroupOutlined />}>\n                Qr kod\n              </Menu.Item> */}\n            </Menu.SubMenu>\n\n            <Menu.SubMenu\n              key=\"NeedListSubmenu\"\n              icon={<BarChartOutlined />}\n              title=\"İhtiyaç Listesi\"\n            >\n              <Menu.Item key=\"chassisneedlist\" icon={<GroupOutlined />}>\n                Şase İhtiyaç Listesi\n              </Menu.Item>\n              <Menu.Item key=\"pumpneedlist\" icon={<GroupOutlined />}>\n                Pompa İhtiyaç Listesi\n              </Menu.Item>\n              <Menu.Item key=\"towneedlist\" icon={<GroupOutlined />}>\n                Çeki İhtiyaç Listesi\n              </Menu.Item>\n              <Menu.Item key=\"fanneedlist\" icon={<GroupOutlined />}>\n                Fan İhtiyaç Listesi\n              </Menu.Item>\n              <Menu.Item key=\"commanderneedlist\" icon={<GroupOutlined />}>\n                Kumanda İhtiyaç Listesi\n              </Menu.Item>\n              <Menu.Item key=\"otherneedlist\" icon={<GroupOutlined />}>\n                Diğer İhtiyaç Listeleri\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        {user.role === \"lazer\" ||\n        user.role === \"lazer2\" ||\n        user.role === \"lazerkesim\" ||\n        user.role === \"planlama\" ||\n        user.role === \"robot1\" ||\n        user.role === \"robot2\" ? (\n          <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n            Aktif İş Emirleri\n          </Menu.Item>\n        ) : null}\n        {user.role === \"depo\" ? (\n          <>\n            <Menu.Item key=\"mainscreen\" icon={<HomeOutlined />}>\n              Anasayfa\n            </Menu.Item>\n            <Menu.Item key=\"activeorders\" icon={<OrderedListOutlined />}>\n              Aktif Makineler\n            </Menu.Item>\n            <Menu.Item key=\"activegenerictasks\" icon={<GroupOutlined />}>\n              Aktif İş Emirleri\n            </Menu.Item>\n          </>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <>\n            <Menu.SubMenu\n              theme={theme}\n              key=\"manageConfig\"\n              icon={<OrderedListOutlined />}\n              title=\"Menüleri Yönet\"\n            >\n              <Menu.Item key=\"userRollsConfig\" icon={<GroupOutlined />}>\n                Kullanıcı Rolleri\n              </Menu.Item>\n              <Menu.Item key=\"GenericTasksScreen\" icon={<GroupOutlined />}>\n                Kullanıcı Yetkileri\n              </Menu.Item>\n              <Menu.Item key=\"machineTypeConfig\" icon={<GroupOutlined />}>\n                Makine Tipleri\n              </Menu.Item>\n              <Menu.Item key=\"ihtiyacListesiConfig\" icon={<GroupOutlined />}>\n                Ihtiyac Listesi\n              </Menu.Item>\n            </Menu.SubMenu>\n          </>\n        ) : null}\n        <Menu.Item\n          onClick={() => {\n            dispatch(logout());\n          }}\n          style={{ float: \"right\" }}\n          key=\"logout\"\n          icon={<LogoutOutlined />}\n        >\n          Çıkış Yap\n        </Menu.Item>\n      </Menu>\n      <Switch>\n        {user.role === \"admin\" ? (\n          <Route path=\"/ihtiyacListesiConfig\">\n            <IhtiyacListesiConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/manageConfig\">\n            <ManageConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/userRollsConfig\">\n            <UserRollsConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/machineTypeConfig\">\n            <MachineTypeConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/GenericTasksScreen\">\n            <GenericTasksConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route\n            path=\"/GenericTaskWithRoleScreen\"\n            render={(props) => <GenericTaskWithRole {...props} />}\n          />\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/generictasksconfig\" exact>\n            <GenericTasksConfigScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/shortcuts\" exact>\n            <ShortcutsScreen />\n          </Route>\n        ) : null}\n\n        {user.role === \"admin\" ? (\n          <Route path=\"/qrcode\" exact>\n            <QrCodeScreen />\n          </Route>\n        ) : null}\n\n        {user.role === \"admin\" ? (\n          <Route path=\"/createOrder\">\n            <CreateOrderScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/editOrder/:serial_number\">\n            <EditOrderScreen />\n          </Route>\n        ) : null}\n\n        {user.role === \"bayi\" ? (\n          <Route path=\"/createOrderForDealer\">\n            <CreateOrderScreenForDealers />\n          </Route>\n        ) : null}\n        {user.role === \"bayi\" ? (\n          <Route path=\"/ordersForDealer\">\n            <OrderScreenForDealer />\n          </Route>\n        ) : null}\n        {user.role === \"bayi\" ? (\n          <Route path=\"/\">\n            <OrderScreenForDealer />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route path=\"/users\">\n            <ManageEmployeScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/pendingorders\">\n            <PendingOrdersScreen />\n          </Route>\n        ) : null}\n        {user.secondRole === \"financemanager\" ||\n        user.secondRole === \"generalmanager\" ? (\n          <Route path=\"/pendingordersforfinance\">\n            <PendingOrdersScreenForFinance />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/deliveries\">\n            <DeliveryScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"tankproducer\" ? (\n          <Route path=\"/tankproducer\">\n            <TankProducerScreen />\n          </Route>\n        ) : null}\n\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"tankproducer\" ? (\n          <Route path=\"/tankProducerFromShortcuts\">\n            <TankProducerScreenFromShortcuts />\n          </Route>\n        ) : null}\n\n        {user.role === \"admin\" ? (\n          <Route path=\"/activeMachines\" exact>\n            <ActiveMachineStatus />\n          </Route>\n        ) : null}\n\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"depo\" ? (\n          <Route path=\"/activeorders\">\n            <ActiveOrdersScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/orders\">\n            <OrderScreen isFinishedOrders={false} isCancelledOrders={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/finishedorders\">\n            <OrderScreen isFinishedOrders={true} isCancelledOrders={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ? (\n          <Route\n            path=\"/filteredOrders/:type\"\n            render={(props: any) => (\n              <FilteredOrdersScreen\n                isFinishedOrders={true}\n                isCancelledOrders={false}\n                {...props}\n              />\n            )}\n          ></Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/cancelledorders\">\n            <OrderScreen isFinishedOrders={false} isCancelledOrders={true} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/planning\">\n            <OrderPlanningScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/chassisproductiontasks\">\n            <ChassisProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/fanproductiontasks\">\n            <FanProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/proformaInvoice\">\n            <ProformaInvoice />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/armInvoice\">\n            <ArmInvoice />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/fanInvoice\">\n            <FanInvoice />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" || user.role === \"muhasebe\" ? (\n          <Route path=\"/armproductiontasks\">\n            <ArmProductionTasksScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/activegenerictasks\" exact>\n            <GenericTasksScreen isActive />\n          </Route>\n        ) : null}\n        {!(\n          user.role === \"admin\" ||\n          user.role === \"muhasebe\" ||\n          user.role === \"ambar1\" ||\n          user.role === \"ambar2\"\n        ) ? (\n          <>\n            <Route path=\"/\" exact>\n              <GenericTasksScreen isActive />\n            </Route>\n          </>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/finishedgenerictasks\" exact>\n            <GenericTasksScreen isActive={false} />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/otherneedlist\" exact>\n            <OtherNeedListScreen />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/chassisneedlist\" exact>\n            <NeedListScreen type=\"Şase\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/pumpneedlist\" exact>\n            <NeedListScreen type=\"Pompa\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/commanderneedlist\" exact>\n            <NeedListScreen type=\"Kumanda\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/fanneedlist\" exact>\n            <NeedListScreen type=\"Fan\" />\n          </Route>\n        ) : null}\n        {user.role === \"admin\" ||\n        user.role === \"muhasebe\" ||\n        user.role === \"ambar1\" ||\n        user.role === \"ambar2\" ? (\n          <Route path=\"/towneedlist\" exact>\n            <NeedListScreen type=\"Çeki\" />\n          </Route>\n        ) : null}\n        <Route path=\"/\">\n          <StatisticsScreen />\n        </Route>\n      </Switch>\n    </MainContainer>\n  );\n}\n\nexport const MainContainer = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n\nexport const Body = styled.div`\n  background-color: rgb(247, 249, 251);\n  height: calc(100% - 48px);\n  width: 100%;\n  padding-left: 10%;\n  padding-right: 10%;\n  padding-top: 1rem;\n`;\nexport default MainScreen;\n","import React, { useState } from \"react\";\nimport { Button, Card, Col, Form, Input, Layout, Row } from \"antd\";\nimport { Body } from \"./MainScreen\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/actions/authActions\";\nimport { Link } from \"react-router-dom\";\nimport Text from \"antd/lib/typography/Text\";\nconst { Header, Content, Sider } = Layout;\n\nconst layout = {\n  labelCol: { span: 24 },\n  wrapperCol: { span: 24 },\n};\nconst tailLayout = {\n  wrapperCol: { span: 24 },\n};\n\nfunction LoginScreen() {\n  const dispatch = useDispatch();\n  const [submitButtonLoading, setSubmitButtonLoading] = useState(false);\n  const onFinish = (values: any) => {\n    setSubmitButtonLoading(true);\n    dispatch(login(values.mail, values.password));\n    setSubmitButtonLoading(false);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout style={{ height: \"100%\" }}>\n      <Content>\n        <Row style={{ height: \"100%\" }} justify=\"center\" align=\"middle\">\n          <Card\n            bordered\n            style={{ width: \"min-content\", height: \"min-content\" }}\n          >\n            <Card style={{ minWidth: \"350px\" }}>\n              <div\n                style={{\n                  display: \"flex\",\n                  height: \"auto\",\n                  width: \"auto\",\n                  justifyContent: \"center\",\n                }}\n              >\n                <img width=\"200\" height=\"200\" src=\"agrotek.png\" alt=\"image\" />\n              </div>\n            </Card>\n            <h1 className=\"center\">Giriş</h1>\n            <Form\n              {...layout}\n              name=\"basic\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              requiredMark={false}\n            >\n              <Form.Item\n                name=\"mail\"\n                rules={[\n                  {\n                    required: true,\n                    message: \"Lütfen bir kullanıcı adı girin.\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"kullanıcı@mail.com\" />\n              </Form.Item>\n\n              <Form.Item\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Bu alan boş bırakılamaz.\" },\n                ]}\n              >\n                <Input.Password placeholder=\"******\" />\n              </Form.Item>\n\n              <Form.Item {...tailLayout}>\n                <Button\n                  style={{ marginBottom: \"1rem\" }}\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={submitButtonLoading}\n                  block\n                >\n                  Giriş Yap\n                </Button>\n                <Link to=\"/forgotPassword\" className=\"center\">\n                  Şifremi unuttum\n                </Link>\n              </Form.Item>\n              <div className=\"center\">\n                <a href=\"https://covisart.com.tr/\">\n                  <img width=\"auto\" height=\"16\" src=\"logo.png\" alt=\"image\" />\n                </a>\n              </div>\n              <Text className=\"center\">Software: v1.1.9.2023</Text>\n            </Form>\n          </Card>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default LoginScreen;\n","import React, { useState } from \"react\";\nimport { Button, Card, Form, Input, Layout, Row } from \"antd\";\nimport { Body } from \"./MainScreen\";\nimport Axios from \"axios\";\nimport { useDispatch } from \"react-redux\";\nimport { login } from \"../redux/actions/authActions\";\nimport { Modal } from \"antd\";\nimport { API_ADDRESS } from \"..\";\nimport { Content } from \"antd/es/layout/layout\";\nimport { Link } from \"react-router-dom\";\n\nfunction ForgotPasswordScreen() {\n  const dispatch = useDispatch();\n  const [submitButtonLoading, setSubmitButtonLoading] = useState(false);\n  const onFinish = (values: any) => {\n    Axios.post(API_ADDRESS + \"/api/auth/ResetPassword\", {\n      Mail: values.mail,\n    })\n      .then((res) => {\n        if (res.status === 200) {\n          Modal.success({\n            title: \"İşlem Başarılı.\",\n            content: \"Lütfen mail kutunuzu kontrol edin.\",\n          });\n        }\n      })\n      .catch((err) => {\n        Modal.warning({\n          title: \"Bir hata oluştu.\",\n          content: \"Lütfen mail adresinizi kontrol edin.\",\n        });\n      });\n    dispatch(login(values.mail, values.password));\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <Layout style={{ height: \"100%\" }}>\n      <Content>\n        <Row style={{ height: \"100%\" }} justify=\"center\" align=\"middle\">\n          <Card bordered style={{ minWidth: \"350px\", height: \"min-content\" }}>\n            <div\n              style={{\n                display: \"flex\",\n                height: \"auto\",\n                width: \"auto\",\n                justifyContent: \"center\",\n              }}\n            >\n              <img width=\"200\" height=\"200\" src=\"agrotek.png\" alt=\"image\" />\n            </div>\n            <h1>Şifremi Unuttum</h1>\n            <Form\n              name=\"basic\"\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n              requiredMark={false}\n            >\n              <Form.Item\n                name=\"mail\"\n                rules={[\n                  { required: true, message: \"Bu alan boş bırakılamaz.\" },\n                  {\n                    type: \"email\",\n                    message: \"Lütfen geçerli bir mail adresi girin.\",\n                  },\n                ]}\n              >\n                <Input placeholder=\"birisi@gmail.com\" />\n              </Form.Item>\n\n              <Form.Item>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  loading={submitButtonLoading}\n                  block\n                >\n                  Şifremi Sıfırla\n                </Button>\n              </Form.Item>\n              <Link to=\"/login\" className=\"center\">\n                Giriş yap\n              </Link>\n            </Form>\n          </Card>\n        </Row>\n      </Content>\n    </Layout>\n  );\n}\n\nexport default ForgotPasswordScreen;\n","import { useSelector } from \"react-redux\";\nimport { RootState } from \"./redux/reducers/index\";\nimport {\n  BrowserRouter,\n  HashRouter,\n  Route,\n  Switch,\n  useLocation,\n} from \"react-router-dom\";\nimport MainScreen from \"./screens/MainScreen\";\nimport \"antd/dist/antd-with-locales.min\";\nimport LoginScreen from \"./screens/LoginScreen\";\nimport { getConfig } from \"./redux/actions/authActions\";\nimport ForgotPasswordScreen from \"./screens/ForgotPasswordScreen\";\nimport { ConfigProvider, theme } from \"antd\";\nimport { useEffect } from \"react\";\n\nfunction App() {\n  getConfig();\n  const user = useSelector((state: RootState) => state.auth.user);\n  //const [theme, setTheme] = useState<MenuTheme>('dark');\n\n  useEffect(() => {\n    if (\n      !user &&\n      !(\n        window.location.pathname === \"/login\" ||\n        window.location.pathname === \"/forgotPassword\"\n      )\n    ) {\n      window.location.href = \"/login\";\n    }\n  }, [user]);\n\n  return (\n    <BrowserRouter basename=\"/agrotek\" forceRefresh>\n      <ConfigProvider\n        theme={{\n          algorithm: theme.defaultAlgorithm,\n        }}\n      >\n        <Switch>\n          <Route path=\"/forgotPassword\">\n            <ForgotPasswordScreen />\n          </Route>\n          <Route path=\"/login\">\n            <LoginScreen />\n          </Route>\n          <Route path=\"/\">{user && <MainScreen />}</Route>\n        </Switch>\n      </ConfigProvider>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport AuthReducer from \"./authReducer\";\n\nexport const rootReducer = combineReducers({ auth: AuthReducer });\n\nexport type RootState = ReturnType<typeof rootReducer>;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport { rootReducer } from \"./redux/reducers\";\nimport thunk from \"redux-thunk\";\nimport { ConfigProvider } from \"antd\";\nimport locale from \"antd/lib/locale/tr_TR\";\n\nexport const API_ADDRESS = \"https://devagrotek.azurewebsites.net\";\n// export const API_ADDRESS = 'https://agrotekapi.azurewebsites.net'\n//export const API_ADDRESS = 'https://agrotekapi.covisart.com:8443';\n//export const API_ADDRESS = 'https://agrotekapi.azurewebsites.net'\n//export const API_ADDRESS = \"https://factoryapi.covisart.com\";\n//export const API_ADDRESS = 'https://localhost:7290';\n\nconst authState = sessionStorage.getItem(\"user\")\n  ? {\n      auth: { user: JSON.parse(String(sessionStorage.getItem(\"user\"))) },\n    }\n  : undefined;\nexport const store = createStore(\n  rootReducer,\n  authState,\n  applyMiddleware(thunk)\n);\n\nReactDOM.render(\n  <ConfigProvider locale={locale}>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </ConfigProvider>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}